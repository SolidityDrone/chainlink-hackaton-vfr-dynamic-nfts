{
	"id": "89f8a82e8f552ce6410644b25cb0c88e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/StakingNFT.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.6;\r\n\r\n\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\r\n\r\ninterface INFTGame {\r\n       function getTrophies(uint256) external returns (uint256);\r\n}\r\n\r\ncontract Staking is ReentrancyGuard {\r\n    IERC20 public parentToken;\r\n    IERC721 public parentNFT;\r\n    INFTGame public parentNftFunctions;\r\n    address public parentNFTAddress;\r\n    constructor(address _nftContract, address _tokenContract){\r\n        parentNFT = IERC721(_nftContract);\r\n        parentNftFunctions = INFTGame(_nftContract);\r\n        parentToken = IERC20(_tokenContract);\r\n        parentNFTAddress = _nftContract;\r\n\r\n    }\r\n    modifier onlyMain{\r\n        require(msg.sender == parentNFTAddress, \"Not allowed\");\r\n        _;\r\n    }\r\n    mapping (uint256 => StakeReview) s_stakeReview; \r\n \r\n    struct StakeReview{\r\n        address realOwner;\r\n        uint256 claimedTrophies;\r\n        uint256 lastClaimTime; \r\n    }\r\n    function refreshTrophies(uint256 _tokenID) public {\r\n       s_stakeReview[_tokenID].claimedTrophies = parentNftFunctions.getTrophies(_tokenID);\r\n       \r\n    }\r\n    function claimedTrophies(uint256 _tokenID) public view returns (uint256){\r\n        return s_stakeReview[_tokenID].claimedTrophies;\r\n    }\r\n    function stake(uint256 _tokenID) public nonReentrant() {\r\n        require(parentNFT.ownerOf(_tokenID) == msg.sender, \"Not owner\");\r\n        \r\n        parentNFT.transferFrom(msg.sender, address(this), _tokenID);\r\n        s_stakeReview[_tokenID].realOwner = msg.sender;\r\n        s_stakeReview[_tokenID].lastClaimTime = block.timestamp;\r\n    }\r\n    \r\n    function claim(uint256 _tokenID) public nonReentrant {\r\n        require(s_stakeReview[_tokenID].lastClaimTime > 0 );\r\n        require(s_stakeReview[_tokenID].realOwner == msg.sender);\r\n\r\n        s_stakeReview[_tokenID].claimedTrophies = parentNftFunctions.getTrophies(_tokenID);\r\n        uint256 currentTrophies = parentNftFunctions.getTrophies(_tokenID);\r\n        uint256 amount = ((block.timestamp - s_stakeReview[_tokenID].lastClaimTime) + (currentTrophies - s_stakeReview[_tokenID].claimedTrophies) );\r\n        if (parentToken.transfer(msg.sender, amount)){\r\n            s_stakeReview[_tokenID].lastClaimTime = block.timestamp;\r\n            s_stakeReview[_tokenID].claimedTrophies += (currentTrophies - s_stakeReview[_tokenID].claimedTrophies);\r\n        } else revert(\"Transfer fail\");\r\n    }\r\n    function unstake(uint256 _tokenID) public {\r\n        require(parentNFT.ownerOf(_tokenID) == address(this), \"Not staked\");\r\n        require(s_stakeReview[_tokenID].realOwner == msg.sender, \"Not realOwner\");\r\n        uint256 amount = ((block.timestamp - s_stakeReview[_tokenID].lastClaimTime) + (parentNftFunctions.getTrophies(_tokenID) - s_stakeReview[_tokenID].claimedTrophies) );\r\n         uint256 currentTrophies = parentNftFunctions.getTrophies(_tokenID);\r\n        if (parentToken.transfer(msg.sender, amount)){\r\n            s_stakeReview[_tokenID].lastClaimTime = block.timestamp;\r\n             s_stakeReview[_tokenID].claimedTrophies += (currentTrophies - s_stakeReview[_tokenID].claimedTrophies);\r\n        }\r\n        parentNFT.transferFrom(address(this), msg.sender, _tokenID);\r\n        s_stakeReview[_tokenID].realOwner = address(0);\r\n    }\r\n    \r\n   \r\n    \r\n    \r\n \r\nfunction onERC721Received(\r\n        address operator,\r\n        address from,\r\n        uint256 id,\r\n        uint256 value,\r\n        bytes calldata data\r\n    ) external returns (bytes4) {\r\n        return bytes4(keccak256(\"onERC721Received(address,address,uint256,uint256,bytes)\"));\r\n    }\r\n\r\n   \r\n \r\n\r\n    \r\n\r\n}"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x516a22876c1fab47f49b1bc22b4614491cd05338af8bd2e7b382da090a079990\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a439187f7126d31add4557f82d8aed6be0162007cd7182c48fd934dbab8f3849\",\"dweb:/ipfs/QmRPLguRFvrRJS7r6F1bcLvsx6q1VrgjEpZafyeL8D7xZh\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/StakingNFT.sol": {
				"INFTGame": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "getTrophies",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getTrophies(uint256)": "a0c4442d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getTrophies\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/StakingNFT.sol\":\"INFTGame\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x516a22876c1fab47f49b1bc22b4614491cd05338af8bd2e7b382da090a079990\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a439187f7126d31add4557f82d8aed6be0162007cd7182c48fd934dbab8f3849\",\"dweb:/ipfs/QmRPLguRFvrRJS7r6F1bcLvsx6q1VrgjEpZafyeL8D7xZh\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/StakingNFT.sol\":{\"keccak256\":\"0x990b2b8fcb3a9a16ffba982f6e3c54c686aa424faeebdbf2984c3ba95d3feace\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af38f3e5997ad501d52024f808d29733560bdcbc02b08de20ffef79f6d069d56\",\"dweb:/ipfs/QmUcZgwiG2eL3atHro8XrZM8sEjjtYBApzuQQM7KLtGXnY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Staking": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_nftContract",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_tokenContract",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenID",
									"type": "uint256"
								}
							],
							"name": "claim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenID",
									"type": "uint256"
								}
							],
							"name": "claimedTrophies",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "parentNFT",
							"outputs": [
								{
									"internalType": "contract IERC721",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "parentNFTAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "parentNftFunctions",
							"outputs": [
								{
									"internalType": "contract INFTGame",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "parentToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenID",
									"type": "uint256"
								}
							],
							"name": "refreshTrophies",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenID",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenID",
									"type": "uint256"
								}
							],
							"name": "unstake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/StakingNFT.sol\":341:3724  contract Staking is ReentrancyGuard {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/StakingNFT.sol\":526:780  constructor(address _nftContract, address _tokenContract){\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1806:1813  _status */\n  0x00\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1806:1828  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/StakingNFT.sol\":614:626  _nftContract */\n  dup2\n    /* \"contracts/StakingNFT.sol\":594:603  parentNFT */\n  0x02\n  0x00\n    /* \"contracts/StakingNFT.sol\":594:627  parentNFT = IERC721(_nftContract) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/StakingNFT.sol\":668:680  _nftContract */\n  dup2\n    /* \"contracts/StakingNFT.sol\":638:656  parentNftFunctions */\n  0x03\n  0x00\n    /* \"contracts/StakingNFT.sol\":638:681  parentNftFunctions = INFTGame(_nftContract) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/StakingNFT.sol\":713:727  _tokenContract */\n  dup1\n    /* \"contracts/StakingNFT.sol\":692:703  parentToken */\n  0x01\n  0x00\n    /* \"contracts/StakingNFT.sol\":692:728  parentToken = IERC20(_tokenContract) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/StakingNFT.sol\":758:770  _nftContract */\n  dup2\n    /* \"contracts/StakingNFT.sol\":739:755  parentNFTAddress */\n  0x04\n  0x00\n    /* \"contracts/StakingNFT.sol\":739:770  parentNFTAddress = _nftContract */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/StakingNFT.sol\":526:780  constructor(address _nftContract, address _tokenContract){\r... */\n  pop\n  pop\n    /* \"contracts/StakingNFT.sol\":341:3724  contract Staking is ReentrancyGuard {\r... */\n  jump(tag_8)\n    /* \"#utility.yul\":7:150   */\ntag_10:\n    /* \"#utility.yul\":64:69   */\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_12\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_13\n  jump\t// in\ntag_12:\n    /* \"#utility.yul\":7:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:663   */\ntag_3:\n    /* \"#utility.yul\":235:241   */\n  0x00\n    /* \"#utility.yul\":243:249   */\n  dup1\n    /* \"#utility.yul\":292:294   */\n  0x40\n    /* \"#utility.yul\":280:289   */\n  dup4\n    /* \"#utility.yul\":271:278   */\n  dup6\n    /* \"#utility.yul\":267:290   */\n  sub\n    /* \"#utility.yul\":263:295   */\n  slt\n    /* \"#utility.yul\":260:379   */\n  iszero\n  tag_15\n  jumpi\n    /* \"#utility.yul\":298:377   */\n  tag_16\n  tag_17\n  jump\t// in\ntag_16:\n    /* \"#utility.yul\":260:379   */\ntag_15:\n    /* \"#utility.yul\":418:419   */\n  0x00\n    /* \"#utility.yul\":443:507   */\n  tag_18\n    /* \"#utility.yul\":499:506   */\n  dup6\n    /* \"#utility.yul\":490:496   */\n  dup3\n    /* \"#utility.yul\":479:488   */\n  dup7\n    /* \"#utility.yul\":475:497   */\n  add\n    /* \"#utility.yul\":443:507   */\n  tag_10\n  jump\t// in\ntag_18:\n    /* \"#utility.yul\":433:507   */\n  swap3\n  pop\n    /* \"#utility.yul\":389:517   */\n  pop\n    /* \"#utility.yul\":556:558   */\n  0x20\n    /* \"#utility.yul\":582:646   */\n  tag_19\n    /* \"#utility.yul\":638:645   */\n  dup6\n    /* \"#utility.yul\":629:635   */\n  dup3\n    /* \"#utility.yul\":618:627   */\n  dup7\n    /* \"#utility.yul\":614:636   */\n  add\n    /* \"#utility.yul\":582:646   */\n  tag_10\n  jump\t// in\ntag_19:\n    /* \"#utility.yul\":572:646   */\n  swap2\n  pop\n    /* \"#utility.yul\":527:656   */\n  pop\n    /* \"#utility.yul\":156:663   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":750:846   */\ntag_22:\n    /* \"#utility.yul\":787:794   */\n  0x00\n    /* \"#utility.yul\":816:840   */\n  tag_24\n    /* \"#utility.yul\":834:839   */\n  dup3\n    /* \"#utility.yul\":816:840   */\n  tag_25\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":805:840   */\n  swap1\n  pop\n    /* \"#utility.yul\":750:846   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":852:978   */\ntag_25:\n    /* \"#utility.yul\":889:896   */\n  0x00\n    /* \"#utility.yul\":929:971   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":922:927   */\n  dup3\n    /* \"#utility.yul\":918:972   */\n  and\n    /* \"#utility.yul\":907:972   */\n  swap1\n  pop\n    /* \"#utility.yul\":852:978   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1107:1224   */\ntag_17:\n    /* \"#utility.yul\":1216:1217   */\n  0x00\n    /* \"#utility.yul\":1213:1214   */\n  dup1\n    /* \"#utility.yul\":1206:1218   */\n  revert\n    /* \"#utility.yul\":1230:1352   */\ntag_13:\n    /* \"#utility.yul\":1303:1327   */\n  tag_31\n    /* \"#utility.yul\":1321:1326   */\n  dup2\n    /* \"#utility.yul\":1303:1327   */\n  tag_22\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1296:1301   */\n  dup2\n    /* \"#utility.yul\":1293:1328   */\n  eq\n    /* \"#utility.yul\":1283:1346   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1342:1343   */\n  0x00\n    /* \"#utility.yul\":1339:1340   */\n  dup1\n    /* \"#utility.yul\":1332:1344   */\n  revert\n    /* \"#utility.yul\":1283:1346   */\ntag_32:\n    /* \"#utility.yul\":1230:1352   */\n  pop\n  jump\t// out\n    /* \"contracts/StakingNFT.sol\":341:3724  contract Staking is ReentrancyGuard {\r... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/StakingNFT.sol\":341:3724  contract Staking is ReentrancyGuard {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7636e245\n      gt\n      tag_13\n      jumpi\n      dup1\n      0x7636e245\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x80a54001\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa694fc3a\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xb8e33fb2\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xfead3d6e\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_13:\n      dup1\n      0x0eeadd30\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2e17de78\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x379607f5\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x53eebc6d\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x66bb863b\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/StakingNFT.sol\":1078:1237  function refreshTrophies(uint256 _tokenID) public {\r... */\n    tag_3:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      tag_17\n      jump\t// in\n    tag_14:\n      stop\n        /* \"contracts/StakingNFT.sol\":2540:3387  function unstake(uint256 _tokenID) public {\r... */\n    tag_4:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_19:\n      tag_20\n      jump\t// in\n    tag_18:\n      stop\n        /* \"contracts/StakingNFT.sol\":1738:2534  function claim(uint256 _tokenID) public nonReentrant {\r... */\n    tag_5:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_22:\n      tag_23\n      jump\t// in\n    tag_21:\n      stop\n        /* \"contracts/StakingNFT.sol\":1243:1380  function claimedTrophies(uint256 _tokenID) public view returns (uint256){\r... */\n    tag_6:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_25:\n      tag_26\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingNFT.sol\":488:519  address public parentNFTAddress */\n    tag_7:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingNFT.sol\":3415:3701  function onERC721Received(\r... */\n    tag_8:\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingNFT.sol\":384:409  IERC20 public parentToken */\n    tag_9:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingNFT.sol\":1386:1726  function stake(uint256 _tokenID) public nonReentrant() {\r... */\n    tag_10:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_44:\n      tag_45\n      jump\t// in\n    tag_43:\n      stop\n        /* \"contracts/StakingNFT.sol\":416:440  IERC721 public parentNFT */\n    tag_11:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingNFT.sol\":447:481  INFTGame public parentNftFunctions */\n    tag_12:\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingNFT.sol\":1078:1237  function refreshTrophies(uint256 _tokenID) public {\r... */\n    tag_17:\n        /* \"contracts/StakingNFT.sol\":1180:1198  parentNftFunctions */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StakingNFT.sol\":1180:1210  parentNftFunctions.getTrophies */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa0c4442d\n        /* \"contracts/StakingNFT.sol\":1211:1219  _tokenID */\n      dup3\n        /* \"contracts/StakingNFT.sol\":1180:1220  parentNftFunctions.getTrophies(_tokenID) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_55:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_58\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_58:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n        /* \"contracts/StakingNFT.sol\":1138:1151  s_stakeReview */\n      0x05\n        /* \"contracts/StakingNFT.sol\":1138:1161  s_stakeReview[_tokenID] */\n      0x00\n        /* \"contracts/StakingNFT.sol\":1152:1160  _tokenID */\n      dup4\n        /* \"contracts/StakingNFT.sol\":1138:1161  s_stakeReview[_tokenID] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingNFT.sol\":1138:1177  s_stakeReview[_tokenID].claimedTrophies */\n      0x01\n      add\n        /* \"contracts/StakingNFT.sol\":1138:1220  s_stakeReview[_tokenID].claimedTrophies = parentNftFunctions.getTrophies(_tokenID) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingNFT.sol\":1078:1237  function refreshTrophies(uint256 _tokenID) public {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/StakingNFT.sol\":2540:3387  function unstake(uint256 _tokenID) public {\r... */\n    tag_20:\n        /* \"contracts/StakingNFT.sol\":2640:2644  this */\n      address\n        /* \"contracts/StakingNFT.sol\":2601:2645  parentNFT.ownerOf(_tokenID) == address(this) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StakingNFT.sol\":2601:2610  parentNFT */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StakingNFT.sol\":2601:2618  parentNFT.ownerOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6352211e\n        /* \"contracts/StakingNFT.sol\":2619:2627  _tokenID */\n      dup4\n        /* \"contracts/StakingNFT.sol\":2601:2628  parentNFT.ownerOf(_tokenID) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_62\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_62:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_65\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_65:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n        /* \"contracts/StakingNFT.sol\":2601:2645  parentNFT.ownerOf(_tokenID) == address(this) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/StakingNFT.sol\":2593:2660  require(parentNFT.ownerOf(_tokenID) == address(this), \"Not staked\") */\n      tag_68\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_69\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_68:\n        /* \"contracts/StakingNFT.sol\":2716:2726  msg.sender */\n      caller\n        /* \"contracts/StakingNFT.sol\":2679:2726  s_stakeReview[_tokenID].realOwner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StakingNFT.sol\":2679:2692  s_stakeReview */\n      0x05\n        /* \"contracts/StakingNFT.sol\":2679:2702  s_stakeReview[_tokenID] */\n      0x00\n        /* \"contracts/StakingNFT.sol\":2693:2701  _tokenID */\n      dup4\n        /* \"contracts/StakingNFT.sol\":2679:2702  s_stakeReview[_tokenID] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingNFT.sol\":2679:2712  s_stakeReview[_tokenID].realOwner */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StakingNFT.sol\":2679:2726  s_stakeReview[_tokenID].realOwner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/StakingNFT.sol\":2671:2744  require(s_stakeReview[_tokenID].realOwner == msg.sender, \"Not realOwner\") */\n      tag_71\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_72\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_71:\n        /* \"contracts/StakingNFT.sol\":2755:2769  uint256 amount */\n      0x00\n        /* \"contracts/StakingNFT.sol\":2877:2890  s_stakeReview */\n      0x05\n        /* \"contracts/StakingNFT.sol\":2877:2900  s_stakeReview[_tokenID] */\n      0x00\n        /* \"contracts/StakingNFT.sol\":2891:2899  _tokenID */\n      dup4\n        /* \"contracts/StakingNFT.sol\":2877:2900  s_stakeReview[_tokenID] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingNFT.sol\":2877:2916  s_stakeReview[_tokenID].claimedTrophies */\n      0x01\n      add\n      sload\n        /* \"contracts/StakingNFT.sol\":2834:2852  parentNftFunctions */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StakingNFT.sol\":2834:2864  parentNftFunctions.getTrophies */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa0c4442d\n        /* \"contracts/StakingNFT.sol\":2865:2873  _tokenID */\n      dup5\n        /* \"contracts/StakingNFT.sol\":2834:2874  parentNftFunctions.getTrophies(_tokenID) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_74\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_74:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_77\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_77:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_78\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_78:\n        /* \"contracts/StakingNFT.sol\":2834:2916  parentNftFunctions.getTrophies(_tokenID) - s_stakeReview[_tokenID].claimedTrophies */\n      tag_79\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n        /* \"contracts/StakingNFT.sol\":2792:2805  s_stakeReview */\n      0x05\n        /* \"contracts/StakingNFT.sol\":2792:2815  s_stakeReview[_tokenID] */\n      0x00\n        /* \"contracts/StakingNFT.sol\":2806:2814  _tokenID */\n      dup5\n        /* \"contracts/StakingNFT.sol\":2792:2815  s_stakeReview[_tokenID] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingNFT.sol\":2792:2829  s_stakeReview[_tokenID].lastClaimTime */\n      0x02\n      add\n      sload\n        /* \"contracts/StakingNFT.sol\":2774:2789  block.timestamp */\n      timestamp\n        /* \"contracts/StakingNFT.sol\":2774:2829  block.timestamp - s_stakeReview[_tokenID].lastClaimTime */\n      tag_81\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_81:\n        /* \"contracts/StakingNFT.sol\":2773:2917  (block.timestamp - s_stakeReview[_tokenID].lastClaimTime) + (parentNftFunctions.getTrophies(_tokenID) - s_stakeReview[_tokenID].claimedTrophies) */\n      tag_82\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n        /* \"contracts/StakingNFT.sol\":2755:2919  uint256 amount = ((block.timestamp - s_stakeReview[_tokenID].lastClaimTime) + (parentNftFunctions.getTrophies(_tokenID) - s_stakeReview[_tokenID].claimedTrophies) ) */\n      swap1\n      pop\n        /* \"contracts/StakingNFT.sol\":2931:2954  uint256 currentTrophies */\n      0x00\n        /* \"contracts/StakingNFT.sol\":2957:2975  parentNftFunctions */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StakingNFT.sol\":2957:2987  parentNftFunctions.getTrophies */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa0c4442d\n        /* \"contracts/StakingNFT.sol\":2988:2996  _tokenID */\n      dup5\n        /* \"contracts/StakingNFT.sol\":2957:2997  parentNftFunctions.getTrophies(_tokenID) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_84\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_84:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_85\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_85:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_87\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_87:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_88\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_88:\n        /* \"contracts/StakingNFT.sol\":2931:2997  uint256 currentTrophies = parentNftFunctions.getTrophies(_tokenID) */\n      swap1\n      pop\n        /* \"contracts/StakingNFT.sol\":3012:3023  parentToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StakingNFT.sol\":3012:3032  parentToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/StakingNFT.sol\":3033:3043  msg.sender */\n      caller\n        /* \"contracts/StakingNFT.sol\":3045:3051  amount */\n      dup5\n        /* \"contracts/StakingNFT.sol\":3012:3052  parentToken.transfer(msg.sender, amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_89\n      swap3\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_91\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_91:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_93\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_93:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_94\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n        /* \"contracts/StakingNFT.sol\":3008:3253  if (parentToken.transfer(msg.sender, amount)){\r... */\n      iszero\n      tag_96\n      jumpi\n        /* \"contracts/StakingNFT.sol\":3108:3123  block.timestamp */\n      timestamp\n        /* \"contracts/StakingNFT.sol\":3068:3081  s_stakeReview */\n      0x05\n        /* \"contracts/StakingNFT.sol\":3068:3091  s_stakeReview[_tokenID] */\n      0x00\n        /* \"contracts/StakingNFT.sol\":3082:3090  _tokenID */\n      dup6\n        /* \"contracts/StakingNFT.sol\":3068:3091  s_stakeReview[_tokenID] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingNFT.sol\":3068:3105  s_stakeReview[_tokenID].lastClaimTime */\n      0x02\n      add\n        /* \"contracts/StakingNFT.sol\":3068:3123  s_stakeReview[_tokenID].lastClaimTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingNFT.sol\":3201:3214  s_stakeReview */\n      0x05\n        /* \"contracts/StakingNFT.sol\":3201:3224  s_stakeReview[_tokenID] */\n      0x00\n        /* \"contracts/StakingNFT.sol\":3215:3223  _tokenID */\n      dup5\n        /* \"contracts/StakingNFT.sol\":3201:3224  s_stakeReview[_tokenID] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingNFT.sol\":3201:3240  s_stakeReview[_tokenID].claimedTrophies */\n      0x01\n      add\n      sload\n        /* \"contracts/StakingNFT.sol\":3183:3198  currentTrophies */\n      dup2\n        /* \"contracts/StakingNFT.sol\":3183:3240  currentTrophies - s_stakeReview[_tokenID].claimedTrophies */\n      tag_97\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_97:\n        /* \"contracts/StakingNFT.sol\":3139:3152  s_stakeReview */\n      0x05\n        /* \"contracts/StakingNFT.sol\":3139:3162  s_stakeReview[_tokenID] */\n      0x00\n        /* \"contracts/StakingNFT.sol\":3153:3161  _tokenID */\n      dup6\n        /* \"contracts/StakingNFT.sol\":3139:3162  s_stakeReview[_tokenID] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingNFT.sol\":3139:3178  s_stakeReview[_tokenID].claimedTrophies */\n      0x01\n      add\n      0x00\n        /* \"contracts/StakingNFT.sol\":3139:3241  s_stakeReview[_tokenID].claimedTrophies += (currentTrophies - s_stakeReview[_tokenID].claimedTrophies) */\n      dup3\n      dup3\n      sload\n      tag_98\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_98:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingNFT.sol\":3008:3253  if (parentToken.transfer(msg.sender, amount)){\r... */\n    tag_96:\n        /* \"contracts/StakingNFT.sol\":3263:3272  parentNFT */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StakingNFT.sol\":3263:3285  parentNFT.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/StakingNFT.sol\":3294:3298  this */\n      address\n        /* \"contracts/StakingNFT.sol\":3301:3311  msg.sender */\n      caller\n        /* \"contracts/StakingNFT.sol\":3313:3321  _tokenID */\n      dup7\n        /* \"contracts/StakingNFT.sol\":3263:3322  parentNFT.transferFrom(address(this), msg.sender, _tokenID) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_99\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_101\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_101:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_103\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_103:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/StakingNFT.sol\":3377:3378  0 */\n      0x00\n        /* \"contracts/StakingNFT.sol\":3333:3346  s_stakeReview */\n      0x05\n        /* \"contracts/StakingNFT.sol\":3333:3356  s_stakeReview[_tokenID] */\n      0x00\n        /* \"contracts/StakingNFT.sol\":3347:3355  _tokenID */\n      dup6\n        /* \"contracts/StakingNFT.sol\":3333:3356  s_stakeReview[_tokenID] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingNFT.sol\":3333:3366  s_stakeReview[_tokenID].realOwner */\n      0x00\n      add\n      0x00\n        /* \"contracts/StakingNFT.sol\":3333:3379  s_stakeReview[_tokenID].realOwner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingNFT.sol\":2582:3387  {\r... */\n      pop\n      pop\n        /* \"contracts/StakingNFT.sol\":2540:3387  function unstake(uint256 _tokenID) public {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/StakingNFT.sol\":1738:2534  function claim(uint256 _tokenID) public nonReentrant {\r... */\n    tag_23:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2332  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2344  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_105\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_106\n      swap1\n      tag_107\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_105:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2462  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2473  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingNFT.sol\":1850:1851  0 */\n      0x00\n        /* \"contracts/StakingNFT.sol\":1810:1823  s_stakeReview */\n      0x05\n        /* \"contracts/StakingNFT.sol\":1810:1833  s_stakeReview[_tokenID] */\n      0x00\n        /* \"contracts/StakingNFT.sol\":1824:1832  _tokenID */\n      dup4\n        /* \"contracts/StakingNFT.sol\":1810:1833  s_stakeReview[_tokenID] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingNFT.sol\":1810:1847  s_stakeReview[_tokenID].lastClaimTime */\n      0x02\n      add\n      sload\n        /* \"contracts/StakingNFT.sol\":1810:1851  s_stakeReview[_tokenID].lastClaimTime > 0 */\n      gt\n        /* \"contracts/StakingNFT.sol\":1802:1853  require(s_stakeReview[_tokenID].lastClaimTime > 0 ) */\n      tag_109\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_109:\n        /* \"contracts/StakingNFT.sol\":1909:1919  msg.sender */\n      caller\n        /* \"contracts/StakingNFT.sol\":1872:1919  s_stakeReview[_tokenID].realOwner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StakingNFT.sol\":1872:1885  s_stakeReview */\n      0x05\n        /* \"contracts/StakingNFT.sol\":1872:1895  s_stakeReview[_tokenID] */\n      0x00\n        /* \"contracts/StakingNFT.sol\":1886:1894  _tokenID */\n      dup4\n        /* \"contracts/StakingNFT.sol\":1872:1895  s_stakeReview[_tokenID] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingNFT.sol\":1872:1905  s_stakeReview[_tokenID].realOwner */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StakingNFT.sol\":1872:1919  s_stakeReview[_tokenID].realOwner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/StakingNFT.sol\":1864:1920  require(s_stakeReview[_tokenID].realOwner == msg.sender) */\n      tag_110\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_110:\n        /* \"contracts/StakingNFT.sol\":1975:1993  parentNftFunctions */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StakingNFT.sol\":1975:2005  parentNftFunctions.getTrophies */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa0c4442d\n        /* \"contracts/StakingNFT.sol\":2006:2014  _tokenID */\n      dup3\n        /* \"contracts/StakingNFT.sol\":1975:2015  parentNftFunctions.getTrophies(_tokenID) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_111\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_111:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_112\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_112:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_114\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_114:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_115\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_115:\n        /* \"contracts/StakingNFT.sol\":1933:1946  s_stakeReview */\n      0x05\n        /* \"contracts/StakingNFT.sol\":1933:1956  s_stakeReview[_tokenID] */\n      0x00\n        /* \"contracts/StakingNFT.sol\":1947:1955  _tokenID */\n      dup4\n        /* \"contracts/StakingNFT.sol\":1933:1956  s_stakeReview[_tokenID] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingNFT.sol\":1933:1972  s_stakeReview[_tokenID].claimedTrophies */\n      0x01\n      add\n        /* \"contracts/StakingNFT.sol\":1933:2015  s_stakeReview[_tokenID].claimedTrophies = parentNftFunctions.getTrophies(_tokenID) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingNFT.sol\":2026:2049  uint256 currentTrophies */\n      0x00\n        /* \"contracts/StakingNFT.sol\":2052:2070  parentNftFunctions */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StakingNFT.sol\":2052:2082  parentNftFunctions.getTrophies */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa0c4442d\n        /* \"contracts/StakingNFT.sol\":2083:2091  _tokenID */\n      dup4\n        /* \"contracts/StakingNFT.sol\":2052:2092  parentNftFunctions.getTrophies(_tokenID) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_116\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_116:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_117\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_117:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_119\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_119:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_120\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_120:\n        /* \"contracts/StakingNFT.sol\":2026:2092  uint256 currentTrophies = parentNftFunctions.getTrophies(_tokenID) */\n      swap1\n      pop\n        /* \"contracts/StakingNFT.sol\":2103:2117  uint256 amount */\n      0x00\n        /* \"contracts/StakingNFT.sol\":2200:2213  s_stakeReview */\n      0x05\n        /* \"contracts/StakingNFT.sol\":2200:2223  s_stakeReview[_tokenID] */\n      0x00\n        /* \"contracts/StakingNFT.sol\":2214:2222  _tokenID */\n      dup5\n        /* \"contracts/StakingNFT.sol\":2200:2223  s_stakeReview[_tokenID] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingNFT.sol\":2200:2239  s_stakeReview[_tokenID].claimedTrophies */\n      0x01\n      add\n      sload\n        /* \"contracts/StakingNFT.sol\":2182:2197  currentTrophies */\n      dup3\n        /* \"contracts/StakingNFT.sol\":2182:2239  currentTrophies - s_stakeReview[_tokenID].claimedTrophies */\n      tag_121\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_121:\n        /* \"contracts/StakingNFT.sol\":2140:2153  s_stakeReview */\n      0x05\n        /* \"contracts/StakingNFT.sol\":2140:2163  s_stakeReview[_tokenID] */\n      0x00\n        /* \"contracts/StakingNFT.sol\":2154:2162  _tokenID */\n      dup6\n        /* \"contracts/StakingNFT.sol\":2140:2163  s_stakeReview[_tokenID] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingNFT.sol\":2140:2177  s_stakeReview[_tokenID].lastClaimTime */\n      0x02\n      add\n      sload\n        /* \"contracts/StakingNFT.sol\":2122:2137  block.timestamp */\n      timestamp\n        /* \"contracts/StakingNFT.sol\":2122:2177  block.timestamp - s_stakeReview[_tokenID].lastClaimTime */\n      tag_122\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_122:\n        /* \"contracts/StakingNFT.sol\":2121:2240  (block.timestamp - s_stakeReview[_tokenID].lastClaimTime) + (currentTrophies - s_stakeReview[_tokenID].claimedTrophies) */\n      tag_123\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_123:\n        /* \"contracts/StakingNFT.sol\":2103:2242  uint256 amount = ((block.timestamp - s_stakeReview[_tokenID].lastClaimTime) + (currentTrophies - s_stakeReview[_tokenID].claimedTrophies) ) */\n      swap1\n      pop\n        /* \"contracts/StakingNFT.sol\":2257:2268  parentToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StakingNFT.sol\":2257:2277  parentToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/StakingNFT.sol\":2278:2288  msg.sender */\n      caller\n        /* \"contracts/StakingNFT.sol\":2290:2296  amount */\n      dup4\n        /* \"contracts/StakingNFT.sol\":2257:2297  parentToken.transfer(msg.sender, amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_124\n      swap3\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_124:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_125\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_125:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_127\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_127:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_128\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_128:\n        /* \"contracts/StakingNFT.sol\":2253:2526  if (parentToken.transfer(msg.sender, amount)){\r... */\n      iszero\n      tag_129\n      jumpi\n        /* \"contracts/StakingNFT.sol\":2353:2368  block.timestamp */\n      timestamp\n        /* \"contracts/StakingNFT.sol\":2313:2326  s_stakeReview */\n      0x05\n        /* \"contracts/StakingNFT.sol\":2313:2336  s_stakeReview[_tokenID] */\n      0x00\n        /* \"contracts/StakingNFT.sol\":2327:2335  _tokenID */\n      dup6\n        /* \"contracts/StakingNFT.sol\":2313:2336  s_stakeReview[_tokenID] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingNFT.sol\":2313:2350  s_stakeReview[_tokenID].lastClaimTime */\n      0x02\n      add\n        /* \"contracts/StakingNFT.sol\":2313:2368  s_stakeReview[_tokenID].lastClaimTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingNFT.sol\":2445:2458  s_stakeReview */\n      0x05\n        /* \"contracts/StakingNFT.sol\":2445:2468  s_stakeReview[_tokenID] */\n      0x00\n        /* \"contracts/StakingNFT.sol\":2459:2467  _tokenID */\n      dup5\n        /* \"contracts/StakingNFT.sol\":2445:2468  s_stakeReview[_tokenID] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingNFT.sol\":2445:2484  s_stakeReview[_tokenID].claimedTrophies */\n      0x01\n      add\n      sload\n        /* \"contracts/StakingNFT.sol\":2427:2442  currentTrophies */\n      dup3\n        /* \"contracts/StakingNFT.sol\":2427:2484  currentTrophies - s_stakeReview[_tokenID].claimedTrophies */\n      tag_130\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_130:\n        /* \"contracts/StakingNFT.sol\":2383:2396  s_stakeReview */\n      0x05\n        /* \"contracts/StakingNFT.sol\":2383:2406  s_stakeReview[_tokenID] */\n      0x00\n        /* \"contracts/StakingNFT.sol\":2397:2405  _tokenID */\n      dup6\n        /* \"contracts/StakingNFT.sol\":2383:2406  s_stakeReview[_tokenID] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingNFT.sol\":2383:2422  s_stakeReview[_tokenID].claimedTrophies */\n      0x01\n      add\n      0x00\n        /* \"contracts/StakingNFT.sol\":2383:2485  s_stakeReview[_tokenID].claimedTrophies += (currentTrophies - s_stakeReview[_tokenID].claimedTrophies) */\n      dup3\n      dup3\n      sload\n      tag_131\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_131:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingNFT.sol\":2253:2526  if (parentToken.transfer(msg.sender, amount)){\r... */\n      jump(tag_132)\n    tag_129:\n        /* \"contracts/StakingNFT.sol\":2503:2526  revert(\"Transfer fail\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_133\n      swap1\n      tag_134\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/StakingNFT.sol\":2253:2526  if (parentToken.transfer(msg.sender, amount)){\r... */\n    tag_132:\n        /* \"contracts/StakingNFT.sol\":1791:2534  {\r... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2635  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2650  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingNFT.sol\":1738:2534  function claim(uint256 _tokenID) public nonReentrant {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/StakingNFT.sol\":1243:1380  function claimedTrophies(uint256 _tokenID) public view returns (uint256){\r... */\n    tag_26:\n        /* \"contracts/StakingNFT.sol\":1307:1314  uint256 */\n      0x00\n        /* \"contracts/StakingNFT.sol\":1333:1346  s_stakeReview */\n      0x05\n        /* \"contracts/StakingNFT.sol\":1333:1356  s_stakeReview[_tokenID] */\n      0x00\n        /* \"contracts/StakingNFT.sol\":1347:1355  _tokenID */\n      dup4\n        /* \"contracts/StakingNFT.sol\":1333:1356  s_stakeReview[_tokenID] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingNFT.sol\":1333:1372  s_stakeReview[_tokenID].claimedTrophies */\n      0x01\n      add\n      sload\n        /* \"contracts/StakingNFT.sol\":1326:1372  return s_stakeReview[_tokenID].claimedTrophies */\n      swap1\n      pop\n        /* \"contracts/StakingNFT.sol\":1243:1380  function claimedTrophies(uint256 _tokenID) public view returns (uint256){\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/StakingNFT.sol\":488:519  address public parentNFTAddress */\n    tag_30:\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/StakingNFT.sol\":3415:3701  function onERC721Received(\r... */\n    tag_36:\n        /* \"contracts/StakingNFT.sol\":3591:3597  bytes4 */\n      0x00\n        /* \"contracts/StakingNFT.sol\":3624:3692  keccak256(\"onERC721Received(address,address,uint256,uint256,bytes)\") */\n      0x7636e24523a394e051c4f3b1d9065be73f6b416813ba53a99b779354a5822c58\n        /* \"contracts/StakingNFT.sol\":3610:3693  return bytes4(keccak256(\"onERC721Received(address,address,uint256,uint256,bytes)\")) */\n      swap1\n      pop\n        /* \"contracts/StakingNFT.sol\":3415:3701  function onERC721Received(\r... */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/StakingNFT.sol\":384:409  IERC20 public parentToken */\n    tag_40:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/StakingNFT.sol\":1386:1726  function stake(uint256 _tokenID) public nonReentrant() {\r... */\n    tag_45:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2332  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2344  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_138\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_139\n      swap1\n      tag_107\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_138:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2462  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2473  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingNFT.sol\":1491:1501  msg.sender */\n      caller\n        /* \"contracts/StakingNFT.sol\":1460:1501  parentNFT.ownerOf(_tokenID) == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StakingNFT.sol\":1460:1469  parentNFT */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StakingNFT.sol\":1460:1477  parentNFT.ownerOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6352211e\n        /* \"contracts/StakingNFT.sol\":1478:1486  _tokenID */\n      dup4\n        /* \"contracts/StakingNFT.sol\":1460:1487  parentNFT.ownerOf(_tokenID) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_141\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_141:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_142\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_142:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_144\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_144:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_145\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_145:\n        /* \"contracts/StakingNFT.sol\":1460:1501  parentNFT.ownerOf(_tokenID) == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/StakingNFT.sol\":1452:1515  require(parentNFT.ownerOf(_tokenID) == msg.sender, \"Not owner\") */\n      tag_146\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_147\n      swap1\n      tag_148\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_146:\n        /* \"contracts/StakingNFT.sol\":1536:1545  parentNFT */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StakingNFT.sol\":1536:1558  parentNFT.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/StakingNFT.sol\":1559:1569  msg.sender */\n      caller\n        /* \"contracts/StakingNFT.sol\":1579:1583  this */\n      address\n        /* \"contracts/StakingNFT.sol\":1586:1594  _tokenID */\n      dup5\n        /* \"contracts/StakingNFT.sol\":1536:1595  parentNFT.transferFrom(msg.sender, address(this), _tokenID) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_149\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_149:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_150\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_150:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_152\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_152:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/StakingNFT.sol\":1642:1652  msg.sender */\n      caller\n        /* \"contracts/StakingNFT.sol\":1606:1619  s_stakeReview */\n      0x05\n        /* \"contracts/StakingNFT.sol\":1606:1629  s_stakeReview[_tokenID] */\n      0x00\n        /* \"contracts/StakingNFT.sol\":1620:1628  _tokenID */\n      dup4\n        /* \"contracts/StakingNFT.sol\":1606:1629  s_stakeReview[_tokenID] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingNFT.sol\":1606:1639  s_stakeReview[_tokenID].realOwner */\n      0x00\n      add\n      0x00\n        /* \"contracts/StakingNFT.sol\":1606:1652  s_stakeReview[_tokenID].realOwner = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingNFT.sol\":1703:1718  block.timestamp */\n      timestamp\n        /* \"contracts/StakingNFT.sol\":1663:1676  s_stakeReview */\n      0x05\n        /* \"contracts/StakingNFT.sol\":1663:1686  s_stakeReview[_tokenID] */\n      0x00\n        /* \"contracts/StakingNFT.sol\":1677:1685  _tokenID */\n      dup4\n        /* \"contracts/StakingNFT.sol\":1663:1686  s_stakeReview[_tokenID] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingNFT.sol\":1663:1700  s_stakeReview[_tokenID].lastClaimTime */\n      0x02\n      add\n        /* \"contracts/StakingNFT.sol\":1663:1718  s_stakeReview[_tokenID].lastClaimTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2635  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2650  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingNFT.sol\":1386:1726  function stake(uint256 _tokenID) public nonReentrant() {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/StakingNFT.sol\":416:440  IERC721 public parentNFT */\n    tag_47:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/StakingNFT.sol\":447:481  INFTGame public parentNftFunctions */\n    tag_51:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_154:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_156\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_157\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:295   */\n    tag_158:\n        /* \"#utility.yul\":209:214   */\n      0x00\n        /* \"#utility.yul\":240:246   */\n      dup2\n        /* \"#utility.yul\":234:247   */\n      mload\n        /* \"#utility.yul\":225:247   */\n      swap1\n      pop\n        /* \"#utility.yul\":256:289   */\n      tag_160\n        /* \"#utility.yul\":283:288   */\n      dup2\n        /* \"#utility.yul\":256:289   */\n      tag_157\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":152:295   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":301:438   */\n    tag_161:\n        /* \"#utility.yul\":355:360   */\n      0x00\n        /* \"#utility.yul\":386:392   */\n      dup2\n        /* \"#utility.yul\":380:393   */\n      mload\n        /* \"#utility.yul\":371:393   */\n      swap1\n      pop\n        /* \"#utility.yul\":402:432   */\n      tag_163\n        /* \"#utility.yul\":426:431   */\n      dup2\n        /* \"#utility.yul\":402:432   */\n      tag_164\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":301:438   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":457:1009   */\n    tag_165:\n        /* \"#utility.yul\":514:522   */\n      0x00\n        /* \"#utility.yul\":524:530   */\n      dup1\n        /* \"#utility.yul\":574:577   */\n      dup4\n        /* \"#utility.yul\":567:571   */\n      0x1f\n        /* \"#utility.yul\":559:565   */\n      dup5\n        /* \"#utility.yul\":555:572   */\n      add\n        /* \"#utility.yul\":551:578   */\n      slt\n        /* \"#utility.yul\":541:663   */\n      tag_167\n      jumpi\n        /* \"#utility.yul\":582:661   */\n      tag_168\n      tag_169\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":541:663   */\n    tag_167:\n        /* \"#utility.yul\":695:701   */\n      dup3\n        /* \"#utility.yul\":682:702   */\n      calldataload\n        /* \"#utility.yul\":672:702   */\n      swap1\n      pop\n        /* \"#utility.yul\":725:743   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":717:723   */\n      dup2\n        /* \"#utility.yul\":714:744   */\n      gt\n        /* \"#utility.yul\":711:828   */\n      iszero\n      tag_170\n      jumpi\n        /* \"#utility.yul\":747:826   */\n      tag_171\n      tag_172\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":711:828   */\n    tag_170:\n        /* \"#utility.yul\":861:865   */\n      0x20\n        /* \"#utility.yul\":853:859   */\n      dup4\n        /* \"#utility.yul\":849:866   */\n      add\n        /* \"#utility.yul\":837:866   */\n      swap2\n      pop\n        /* \"#utility.yul\":915:918   */\n      dup4\n        /* \"#utility.yul\":907:911   */\n      0x01\n        /* \"#utility.yul\":899:905   */\n      dup3\n        /* \"#utility.yul\":895:912   */\n      mul\n        /* \"#utility.yul\":885:893   */\n      dup4\n        /* \"#utility.yul\":881:913   */\n      add\n        /* \"#utility.yul\":878:919   */\n      gt\n        /* \"#utility.yul\":875:1003   */\n      iszero\n      tag_173\n      jumpi\n        /* \"#utility.yul\":922:1001   */\n      tag_174\n      tag_175\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":875:1003   */\n    tag_173:\n        /* \"#utility.yul\":457:1009   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1015:1154   */\n    tag_176:\n        /* \"#utility.yul\":1061:1066   */\n      0x00\n        /* \"#utility.yul\":1099:1105   */\n      dup2\n        /* \"#utility.yul\":1086:1106   */\n      calldataload\n        /* \"#utility.yul\":1077:1106   */\n      swap1\n      pop\n        /* \"#utility.yul\":1115:1148   */\n      tag_178\n        /* \"#utility.yul\":1142:1147   */\n      dup2\n        /* \"#utility.yul\":1115:1148   */\n      tag_179\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":1015:1154   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1160:1303   */\n    tag_180:\n        /* \"#utility.yul\":1217:1222   */\n      0x00\n        /* \"#utility.yul\":1248:1254   */\n      dup2\n        /* \"#utility.yul\":1242:1255   */\n      mload\n        /* \"#utility.yul\":1233:1255   */\n      swap1\n      pop\n        /* \"#utility.yul\":1264:1297   */\n      tag_182\n        /* \"#utility.yul\":1291:1296   */\n      dup2\n        /* \"#utility.yul\":1264:1297   */\n      tag_179\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":1160:1303   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1309:1660   */\n    tag_67:\n        /* \"#utility.yul\":1379:1385   */\n      0x00\n        /* \"#utility.yul\":1428:1430   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1407:1414   */\n      dup5\n        /* \"#utility.yul\":1403:1426   */\n      sub\n        /* \"#utility.yul\":1399:1431   */\n      slt\n        /* \"#utility.yul\":1396:1515   */\n      iszero\n      tag_184\n      jumpi\n        /* \"#utility.yul\":1434:1513   */\n      tag_185\n      tag_186\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":1396:1515   */\n    tag_184:\n        /* \"#utility.yul\":1554:1555   */\n      0x00\n        /* \"#utility.yul\":1579:1643   */\n      tag_187\n        /* \"#utility.yul\":1635:1642   */\n      dup5\n        /* \"#utility.yul\":1626:1632   */\n      dup3\n        /* \"#utility.yul\":1615:1624   */\n      dup6\n        /* \"#utility.yul\":1611:1633   */\n      add\n        /* \"#utility.yul\":1579:1643   */\n      tag_158\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":1569:1643   */\n      swap2\n      pop\n        /* \"#utility.yul\":1525:1653   */\n      pop\n        /* \"#utility.yul\":1309:1660   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1666:2775   */\n    tag_35:\n        /* \"#utility.yul\":1772:1778   */\n      0x00\n        /* \"#utility.yul\":1780:1786   */\n      dup1\n        /* \"#utility.yul\":1788:1794   */\n      0x00\n        /* \"#utility.yul\":1796:1802   */\n      dup1\n        /* \"#utility.yul\":1804:1810   */\n      0x00\n        /* \"#utility.yul\":1812:1818   */\n      dup1\n        /* \"#utility.yul\":1861:1864   */\n      0xa0\n        /* \"#utility.yul\":1849:1858   */\n      dup8\n        /* \"#utility.yul\":1840:1847   */\n      dup10\n        /* \"#utility.yul\":1836:1859   */\n      sub\n        /* \"#utility.yul\":1832:1865   */\n      slt\n        /* \"#utility.yul\":1829:1949   */\n      iszero\n      tag_189\n      jumpi\n        /* \"#utility.yul\":1868:1947   */\n      tag_190\n      tag_186\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":1829:1949   */\n    tag_189:\n        /* \"#utility.yul\":1988:1989   */\n      0x00\n        /* \"#utility.yul\":2013:2066   */\n      tag_191\n        /* \"#utility.yul\":2058:2065   */\n      dup10\n        /* \"#utility.yul\":2049:2055   */\n      dup3\n        /* \"#utility.yul\":2038:2047   */\n      dup11\n        /* \"#utility.yul\":2034:2056   */\n      add\n        /* \"#utility.yul\":2013:2066   */\n      tag_154\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":2003:2066   */\n      swap7\n      pop\n        /* \"#utility.yul\":1959:2076   */\n      pop\n        /* \"#utility.yul\":2115:2117   */\n      0x20\n        /* \"#utility.yul\":2141:2194   */\n      tag_192\n        /* \"#utility.yul\":2186:2193   */\n      dup10\n        /* \"#utility.yul\":2177:2183   */\n      dup3\n        /* \"#utility.yul\":2166:2175   */\n      dup11\n        /* \"#utility.yul\":2162:2184   */\n      add\n        /* \"#utility.yul\":2141:2194   */\n      tag_154\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":2131:2194   */\n      swap6\n      pop\n        /* \"#utility.yul\":2086:2204   */\n      pop\n        /* \"#utility.yul\":2243:2245   */\n      0x40\n        /* \"#utility.yul\":2269:2322   */\n      tag_193\n        /* \"#utility.yul\":2314:2321   */\n      dup10\n        /* \"#utility.yul\":2305:2311   */\n      dup3\n        /* \"#utility.yul\":2294:2303   */\n      dup11\n        /* \"#utility.yul\":2290:2312   */\n      add\n        /* \"#utility.yul\":2269:2322   */\n      tag_176\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":2259:2322   */\n      swap5\n      pop\n        /* \"#utility.yul\":2214:2332   */\n      pop\n        /* \"#utility.yul\":2371:2373   */\n      0x60\n        /* \"#utility.yul\":2397:2450   */\n      tag_194\n        /* \"#utility.yul\":2442:2449   */\n      dup10\n        /* \"#utility.yul\":2433:2439   */\n      dup3\n        /* \"#utility.yul\":2422:2431   */\n      dup11\n        /* \"#utility.yul\":2418:2440   */\n      add\n        /* \"#utility.yul\":2397:2450   */\n      tag_176\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":2387:2450   */\n      swap4\n      pop\n        /* \"#utility.yul\":2342:2460   */\n      pop\n        /* \"#utility.yul\":2527:2530   */\n      0x80\n        /* \"#utility.yul\":2516:2525   */\n      dup8\n        /* \"#utility.yul\":2512:2531   */\n      add\n        /* \"#utility.yul\":2499:2532   */\n      calldataload\n        /* \"#utility.yul\":2559:2577   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2551:2557   */\n      dup2\n        /* \"#utility.yul\":2548:2578   */\n      gt\n        /* \"#utility.yul\":2545:2662   */\n      iszero\n      tag_195\n      jumpi\n        /* \"#utility.yul\":2581:2660   */\n      tag_196\n      tag_197\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":2545:2662   */\n    tag_195:\n        /* \"#utility.yul\":2694:2758   */\n      tag_198\n        /* \"#utility.yul\":2750:2757   */\n      dup10\n        /* \"#utility.yul\":2741:2747   */\n      dup3\n        /* \"#utility.yul\":2730:2739   */\n      dup11\n        /* \"#utility.yul\":2726:2748   */\n      add\n        /* \"#utility.yul\":2694:2758   */\n      tag_165\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":2676:2758   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":2470:2768   */\n      pop\n        /* \"#utility.yul\":1666:2775   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      jump\t// out\n        /* \"#utility.yul\":2781:3126   */\n    tag_95:\n        /* \"#utility.yul\":2848:2854   */\n      0x00\n        /* \"#utility.yul\":2897:2899   */\n      0x20\n        /* \"#utility.yul\":2885:2894   */\n      dup3\n        /* \"#utility.yul\":2876:2883   */\n      dup5\n        /* \"#utility.yul\":2872:2895   */\n      sub\n        /* \"#utility.yul\":2868:2900   */\n      slt\n        /* \"#utility.yul\":2865:2984   */\n      iszero\n      tag_200\n      jumpi\n        /* \"#utility.yul\":2903:2982   */\n      tag_201\n      tag_186\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":2865:2984   */\n    tag_200:\n        /* \"#utility.yul\":3023:3024   */\n      0x00\n        /* \"#utility.yul\":3048:3109   */\n      tag_202\n        /* \"#utility.yul\":3101:3108   */\n      dup5\n        /* \"#utility.yul\":3092:3098   */\n      dup3\n        /* \"#utility.yul\":3081:3090   */\n      dup6\n        /* \"#utility.yul\":3077:3099   */\n      add\n        /* \"#utility.yul\":3048:3109   */\n      tag_161\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":3038:3109   */\n      swap2\n      pop\n        /* \"#utility.yul\":2994:3119   */\n      pop\n        /* \"#utility.yul\":2781:3126   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3132:3461   */\n    tag_16:\n        /* \"#utility.yul\":3191:3197   */\n      0x00\n        /* \"#utility.yul\":3240:3242   */\n      0x20\n        /* \"#utility.yul\":3228:3237   */\n      dup3\n        /* \"#utility.yul\":3219:3226   */\n      dup5\n        /* \"#utility.yul\":3215:3238   */\n      sub\n        /* \"#utility.yul\":3211:3243   */\n      slt\n        /* \"#utility.yul\":3208:3327   */\n      iszero\n      tag_204\n      jumpi\n        /* \"#utility.yul\":3246:3325   */\n      tag_205\n      tag_186\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":3208:3327   */\n    tag_204:\n        /* \"#utility.yul\":3366:3367   */\n      0x00\n        /* \"#utility.yul\":3391:3444   */\n      tag_206\n        /* \"#utility.yul\":3436:3443   */\n      dup5\n        /* \"#utility.yul\":3427:3433   */\n      dup3\n        /* \"#utility.yul\":3416:3425   */\n      dup6\n        /* \"#utility.yul\":3412:3434   */\n      add\n        /* \"#utility.yul\":3391:3444   */\n      tag_176\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":3381:3444   */\n      swap2\n      pop\n        /* \"#utility.yul\":3337:3454   */\n      pop\n        /* \"#utility.yul\":3132:3461   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3467:3818   */\n    tag_60:\n        /* \"#utility.yul\":3537:3543   */\n      0x00\n        /* \"#utility.yul\":3586:3588   */\n      0x20\n        /* \"#utility.yul\":3574:3583   */\n      dup3\n        /* \"#utility.yul\":3565:3572   */\n      dup5\n        /* \"#utility.yul\":3561:3584   */\n      sub\n        /* \"#utility.yul\":3557:3589   */\n      slt\n        /* \"#utility.yul\":3554:3673   */\n      iszero\n      tag_208\n      jumpi\n        /* \"#utility.yul\":3592:3671   */\n      tag_209\n      tag_186\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":3554:3673   */\n    tag_208:\n        /* \"#utility.yul\":3712:3713   */\n      0x00\n        /* \"#utility.yul\":3737:3801   */\n      tag_210\n        /* \"#utility.yul\":3793:3800   */\n      dup5\n        /* \"#utility.yul\":3784:3790   */\n      dup3\n        /* \"#utility.yul\":3773:3782   */\n      dup6\n        /* \"#utility.yul\":3769:3791   */\n      add\n        /* \"#utility.yul\":3737:3801   */\n      tag_180\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":3727:3801   */\n      swap2\n      pop\n        /* \"#utility.yul\":3683:3811   */\n      pop\n        /* \"#utility.yul\":3467:3818   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3824:3942   */\n    tag_211:\n        /* \"#utility.yul\":3911:3935   */\n      tag_213\n        /* \"#utility.yul\":3929:3934   */\n      dup2\n        /* \"#utility.yul\":3911:3935   */\n      tag_214\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":3906:3909   */\n      dup3\n        /* \"#utility.yul\":3899:3936   */\n      mstore\n        /* \"#utility.yul\":3824:3942   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3948:4063   */\n    tag_215:\n        /* \"#utility.yul\":4033:4056   */\n      tag_217\n        /* \"#utility.yul\":4050:4055   */\n      dup2\n        /* \"#utility.yul\":4033:4056   */\n      tag_218\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":4028:4031   */\n      dup3\n        /* \"#utility.yul\":4021:4057   */\n      mstore\n        /* \"#utility.yul\":3948:4063   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4069:4228   */\n    tag_219:\n        /* \"#utility.yul\":4170:4221   */\n      tag_221\n        /* \"#utility.yul\":4215:4220   */\n      dup2\n        /* \"#utility.yul\":4170:4221   */\n      tag_222\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":4165:4168   */\n      dup3\n        /* \"#utility.yul\":4158:4222   */\n      mstore\n        /* \"#utility.yul\":4069:4228   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4234:4395   */\n    tag_223:\n        /* \"#utility.yul\":4336:4388   */\n      tag_225\n        /* \"#utility.yul\":4382:4387   */\n      dup2\n        /* \"#utility.yul\":4336:4388   */\n      tag_226\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":4331:4334   */\n      dup3\n        /* \"#utility.yul\":4324:4389   */\n      mstore\n        /* \"#utility.yul\":4234:4395   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4401:4564   */\n    tag_227:\n        /* \"#utility.yul\":4504:4557   */\n      tag_229\n        /* \"#utility.yul\":4551:4556   */\n      dup2\n        /* \"#utility.yul\":4504:4557   */\n      tag_230\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":4499:4502   */\n      dup3\n        /* \"#utility.yul\":4492:4558   */\n      mstore\n        /* \"#utility.yul\":4401:4564   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4570:4936   */\n    tag_231:\n        /* \"#utility.yul\":4712:4715   */\n      0x00\n        /* \"#utility.yul\":4733:4800   */\n      tag_233\n        /* \"#utility.yul\":4797:4799   */\n      0x0a\n        /* \"#utility.yul\":4792:4795   */\n      dup4\n        /* \"#utility.yul\":4733:4800   */\n      tag_234\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":4726:4800   */\n      swap2\n      pop\n        /* \"#utility.yul\":4809:4902   */\n      tag_235\n        /* \"#utility.yul\":4898:4901   */\n      dup3\n        /* \"#utility.yul\":4809:4902   */\n      tag_236\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":4927:4929   */\n      0x20\n        /* \"#utility.yul\":4922:4925   */\n      dup3\n        /* \"#utility.yul\":4918:4930   */\n      add\n        /* \"#utility.yul\":4911:4930   */\n      swap1\n      pop\n        /* \"#utility.yul\":4570:4936   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4942:5308   */\n    tag_237:\n        /* \"#utility.yul\":5084:5087   */\n      0x00\n        /* \"#utility.yul\":5105:5172   */\n      tag_239\n        /* \"#utility.yul\":5169:5171   */\n      0x0d\n        /* \"#utility.yul\":5164:5167   */\n      dup4\n        /* \"#utility.yul\":5105:5172   */\n      tag_234\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":5098:5172   */\n      swap2\n      pop\n        /* \"#utility.yul\":5181:5274   */\n      tag_240\n        /* \"#utility.yul\":5270:5273   */\n      dup3\n        /* \"#utility.yul\":5181:5274   */\n      tag_241\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":5299:5301   */\n      0x20\n        /* \"#utility.yul\":5294:5297   */\n      dup3\n        /* \"#utility.yul\":5290:5302   */\n      add\n        /* \"#utility.yul\":5283:5302   */\n      swap1\n      pop\n        /* \"#utility.yul\":4942:5308   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5314:5680   */\n    tag_242:\n        /* \"#utility.yul\":5456:5459   */\n      0x00\n        /* \"#utility.yul\":5477:5544   */\n      tag_244\n        /* \"#utility.yul\":5541:5543   */\n      0x0d\n        /* \"#utility.yul\":5536:5539   */\n      dup4\n        /* \"#utility.yul\":5477:5544   */\n      tag_234\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":5470:5544   */\n      swap2\n      pop\n        /* \"#utility.yul\":5553:5646   */\n      tag_245\n        /* \"#utility.yul\":5642:5645   */\n      dup3\n        /* \"#utility.yul\":5553:5646   */\n      tag_246\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":5671:5673   */\n      0x20\n        /* \"#utility.yul\":5666:5669   */\n      dup3\n        /* \"#utility.yul\":5662:5674   */\n      add\n        /* \"#utility.yul\":5655:5674   */\n      swap1\n      pop\n        /* \"#utility.yul\":5314:5680   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5686:6051   */\n    tag_247:\n        /* \"#utility.yul\":5828:5831   */\n      0x00\n        /* \"#utility.yul\":5849:5915   */\n      tag_249\n        /* \"#utility.yul\":5913:5914   */\n      0x09\n        /* \"#utility.yul\":5908:5911   */\n      dup4\n        /* \"#utility.yul\":5849:5915   */\n      tag_234\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":5842:5915   */\n      swap2\n      pop\n        /* \"#utility.yul\":5924:6017   */\n      tag_250\n        /* \"#utility.yul\":6013:6016   */\n      dup3\n        /* \"#utility.yul\":5924:6017   */\n      tag_251\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":6042:6044   */\n      0x20\n        /* \"#utility.yul\":6037:6040   */\n      dup3\n        /* \"#utility.yul\":6033:6045   */\n      add\n        /* \"#utility.yul\":6026:6045   */\n      swap1\n      pop\n        /* \"#utility.yul\":5686:6051   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6057:6423   */\n    tag_252:\n        /* \"#utility.yul\":6199:6202   */\n      0x00\n        /* \"#utility.yul\":6220:6287   */\n      tag_254\n        /* \"#utility.yul\":6284:6286   */\n      0x1f\n        /* \"#utility.yul\":6279:6282   */\n      dup4\n        /* \"#utility.yul\":6220:6287   */\n      tag_234\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":6213:6287   */\n      swap2\n      pop\n        /* \"#utility.yul\":6296:6389   */\n      tag_255\n        /* \"#utility.yul\":6385:6388   */\n      dup3\n        /* \"#utility.yul\":6296:6389   */\n      tag_256\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":6414:6416   */\n      0x20\n        /* \"#utility.yul\":6409:6412   */\n      dup3\n        /* \"#utility.yul\":6405:6417   */\n      add\n        /* \"#utility.yul\":6398:6417   */\n      swap1\n      pop\n        /* \"#utility.yul\":6057:6423   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6429:6547   */\n    tag_257:\n        /* \"#utility.yul\":6516:6540   */\n      tag_259\n        /* \"#utility.yul\":6534:6539   */\n      dup2\n        /* \"#utility.yul\":6516:6540   */\n      tag_260\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":6511:6514   */\n      dup3\n        /* \"#utility.yul\":6504:6541   */\n      mstore\n        /* \"#utility.yul\":6429:6547   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6553:6775   */\n    tag_32:\n        /* \"#utility.yul\":6646:6650   */\n      0x00\n        /* \"#utility.yul\":6684:6686   */\n      0x20\n        /* \"#utility.yul\":6673:6682   */\n      dup3\n        /* \"#utility.yul\":6669:6687   */\n      add\n        /* \"#utility.yul\":6661:6687   */\n      swap1\n      pop\n        /* \"#utility.yul\":6697:6768   */\n      tag_262\n        /* \"#utility.yul\":6765:6766   */\n      0x00\n        /* \"#utility.yul\":6754:6763   */\n      dup4\n        /* \"#utility.yul\":6750:6767   */\n      add\n        /* \"#utility.yul\":6741:6747   */\n      dup5\n        /* \"#utility.yul\":6697:6768   */\n      tag_211\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":6553:6775   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6781:7223   */\n    tag_100:\n        /* \"#utility.yul\":6930:6934   */\n      0x00\n        /* \"#utility.yul\":6968:6970   */\n      0x60\n        /* \"#utility.yul\":6957:6966   */\n      dup3\n        /* \"#utility.yul\":6953:6971   */\n      add\n        /* \"#utility.yul\":6945:6971   */\n      swap1\n      pop\n        /* \"#utility.yul\":6981:7052   */\n      tag_264\n        /* \"#utility.yul\":7049:7050   */\n      0x00\n        /* \"#utility.yul\":7038:7047   */\n      dup4\n        /* \"#utility.yul\":7034:7051   */\n      add\n        /* \"#utility.yul\":7025:7031   */\n      dup7\n        /* \"#utility.yul\":6981:7052   */\n      tag_211\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":7062:7134   */\n      tag_265\n        /* \"#utility.yul\":7130:7132   */\n      0x20\n        /* \"#utility.yul\":7119:7128   */\n      dup4\n        /* \"#utility.yul\":7115:7133   */\n      add\n        /* \"#utility.yul\":7106:7112   */\n      dup6\n        /* \"#utility.yul\":7062:7134   */\n      tag_211\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":7144:7216   */\n      tag_266\n        /* \"#utility.yul\":7212:7214   */\n      0x40\n        /* \"#utility.yul\":7201:7210   */\n      dup4\n        /* \"#utility.yul\":7197:7215   */\n      add\n        /* \"#utility.yul\":7188:7194   */\n      dup5\n        /* \"#utility.yul\":7144:7216   */\n      tag_257\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":6781:7223   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7229:7561   */\n    tag_90:\n        /* \"#utility.yul\":7350:7354   */\n      0x00\n        /* \"#utility.yul\":7388:7390   */\n      0x40\n        /* \"#utility.yul\":7377:7386   */\n      dup3\n        /* \"#utility.yul\":7373:7391   */\n      add\n        /* \"#utility.yul\":7365:7391   */\n      swap1\n      pop\n        /* \"#utility.yul\":7401:7472   */\n      tag_268\n        /* \"#utility.yul\":7469:7470   */\n      0x00\n        /* \"#utility.yul\":7458:7467   */\n      dup4\n        /* \"#utility.yul\":7454:7471   */\n      add\n        /* \"#utility.yul\":7445:7451   */\n      dup6\n        /* \"#utility.yul\":7401:7472   */\n      tag_211\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":7482:7554   */\n      tag_269\n        /* \"#utility.yul\":7550:7552   */\n      0x20\n        /* \"#utility.yul\":7539:7548   */\n      dup4\n        /* \"#utility.yul\":7535:7553   */\n      add\n        /* \"#utility.yul\":7526:7532   */\n      dup5\n        /* \"#utility.yul\":7482:7554   */\n      tag_257\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":7229:7561   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7567:7785   */\n    tag_38:\n        /* \"#utility.yul\":7658:7662   */\n      0x00\n        /* \"#utility.yul\":7696:7698   */\n      0x20\n        /* \"#utility.yul\":7685:7694   */\n      dup3\n        /* \"#utility.yul\":7681:7699   */\n      add\n        /* \"#utility.yul\":7673:7699   */\n      swap1\n      pop\n        /* \"#utility.yul\":7709:7778   */\n      tag_271\n        /* \"#utility.yul\":7775:7776   */\n      0x00\n        /* \"#utility.yul\":7764:7773   */\n      dup4\n        /* \"#utility.yul\":7760:7777   */\n      add\n        /* \"#utility.yul\":7751:7757   */\n      dup5\n        /* \"#utility.yul\":7709:7778   */\n      tag_215\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":7567:7785   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7791:8041   */\n    tag_42:\n        /* \"#utility.yul\":7898:7902   */\n      0x00\n        /* \"#utility.yul\":7936:7938   */\n      0x20\n        /* \"#utility.yul\":7925:7934   */\n      dup3\n        /* \"#utility.yul\":7921:7939   */\n      add\n        /* \"#utility.yul\":7913:7939   */\n      swap1\n      pop\n        /* \"#utility.yul\":7949:8034   */\n      tag_273\n        /* \"#utility.yul\":8031:8032   */\n      0x00\n        /* \"#utility.yul\":8020:8029   */\n      dup4\n        /* \"#utility.yul\":8016:8033   */\n      add\n        /* \"#utility.yul\":8007:8013   */\n      dup5\n        /* \"#utility.yul\":7949:8034   */\n      tag_219\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":7791:8041   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8047:8299   */\n    tag_49:\n        /* \"#utility.yul\":8155:8159   */\n      0x00\n        /* \"#utility.yul\":8193:8195   */\n      0x20\n        /* \"#utility.yul\":8182:8191   */\n      dup3\n        /* \"#utility.yul\":8178:8196   */\n      add\n        /* \"#utility.yul\":8170:8196   */\n      swap1\n      pop\n        /* \"#utility.yul\":8206:8292   */\n      tag_275\n        /* \"#utility.yul\":8289:8290   */\n      0x00\n        /* \"#utility.yul\":8278:8287   */\n      dup4\n        /* \"#utility.yul\":8274:8291   */\n      add\n        /* \"#utility.yul\":8265:8271   */\n      dup5\n        /* \"#utility.yul\":8206:8292   */\n      tag_223\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":8047:8299   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8305:8559   */\n    tag_53:\n        /* \"#utility.yul\":8414:8418   */\n      0x00\n        /* \"#utility.yul\":8452:8454   */\n      0x20\n        /* \"#utility.yul\":8441:8450   */\n      dup3\n        /* \"#utility.yul\":8437:8455   */\n      add\n        /* \"#utility.yul\":8429:8455   */\n      swap1\n      pop\n        /* \"#utility.yul\":8465:8552   */\n      tag_277\n        /* \"#utility.yul\":8549:8550   */\n      0x00\n        /* \"#utility.yul\":8538:8547   */\n      dup4\n        /* \"#utility.yul\":8534:8551   */\n      add\n        /* \"#utility.yul\":8525:8531   */\n      dup5\n        /* \"#utility.yul\":8465:8552   */\n      tag_227\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":8305:8559   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8565:8984   */\n    tag_70:\n        /* \"#utility.yul\":8731:8735   */\n      0x00\n        /* \"#utility.yul\":8769:8771   */\n      0x20\n        /* \"#utility.yul\":8758:8767   */\n      dup3\n        /* \"#utility.yul\":8754:8772   */\n      add\n        /* \"#utility.yul\":8746:8772   */\n      swap1\n      pop\n        /* \"#utility.yul\":8818:8827   */\n      dup2\n        /* \"#utility.yul\":8812:8816   */\n      dup2\n        /* \"#utility.yul\":8808:8828   */\n      sub\n        /* \"#utility.yul\":8804:8805   */\n      0x00\n        /* \"#utility.yul\":8793:8802   */\n      dup4\n        /* \"#utility.yul\":8789:8806   */\n      add\n        /* \"#utility.yul\":8782:8829   */\n      mstore\n        /* \"#utility.yul\":8846:8977   */\n      tag_279\n        /* \"#utility.yul\":8972:8976   */\n      dup2\n        /* \"#utility.yul\":8846:8977   */\n      tag_231\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":8838:8977   */\n      swap1\n      pop\n        /* \"#utility.yul\":8565:8984   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8990:9409   */\n    tag_134:\n        /* \"#utility.yul\":9156:9160   */\n      0x00\n        /* \"#utility.yul\":9194:9196   */\n      0x20\n        /* \"#utility.yul\":9183:9192   */\n      dup3\n        /* \"#utility.yul\":9179:9197   */\n      add\n        /* \"#utility.yul\":9171:9197   */\n      swap1\n      pop\n        /* \"#utility.yul\":9243:9252   */\n      dup2\n        /* \"#utility.yul\":9237:9241   */\n      dup2\n        /* \"#utility.yul\":9233:9253   */\n      sub\n        /* \"#utility.yul\":9229:9230   */\n      0x00\n        /* \"#utility.yul\":9218:9227   */\n      dup4\n        /* \"#utility.yul\":9214:9231   */\n      add\n        /* \"#utility.yul\":9207:9254   */\n      mstore\n        /* \"#utility.yul\":9271:9402   */\n      tag_281\n        /* \"#utility.yul\":9397:9401   */\n      dup2\n        /* \"#utility.yul\":9271:9402   */\n      tag_237\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":9263:9402   */\n      swap1\n      pop\n        /* \"#utility.yul\":8990:9409   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9415:9834   */\n    tag_73:\n        /* \"#utility.yul\":9581:9585   */\n      0x00\n        /* \"#utility.yul\":9619:9621   */\n      0x20\n        /* \"#utility.yul\":9608:9617   */\n      dup3\n        /* \"#utility.yul\":9604:9622   */\n      add\n        /* \"#utility.yul\":9596:9622   */\n      swap1\n      pop\n        /* \"#utility.yul\":9668:9677   */\n      dup2\n        /* \"#utility.yul\":9662:9666   */\n      dup2\n        /* \"#utility.yul\":9658:9678   */\n      sub\n        /* \"#utility.yul\":9654:9655   */\n      0x00\n        /* \"#utility.yul\":9643:9652   */\n      dup4\n        /* \"#utility.yul\":9639:9656   */\n      add\n        /* \"#utility.yul\":9632:9679   */\n      mstore\n        /* \"#utility.yul\":9696:9827   */\n      tag_283\n        /* \"#utility.yul\":9822:9826   */\n      dup2\n        /* \"#utility.yul\":9696:9827   */\n      tag_242\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":9688:9827   */\n      swap1\n      pop\n        /* \"#utility.yul\":9415:9834   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9840:10259   */\n    tag_148:\n        /* \"#utility.yul\":10006:10010   */\n      0x00\n        /* \"#utility.yul\":10044:10046   */\n      0x20\n        /* \"#utility.yul\":10033:10042   */\n      dup3\n        /* \"#utility.yul\":10029:10047   */\n      add\n        /* \"#utility.yul\":10021:10047   */\n      swap1\n      pop\n        /* \"#utility.yul\":10093:10102   */\n      dup2\n        /* \"#utility.yul\":10087:10091   */\n      dup2\n        /* \"#utility.yul\":10083:10103   */\n      sub\n        /* \"#utility.yul\":10079:10080   */\n      0x00\n        /* \"#utility.yul\":10068:10077   */\n      dup4\n        /* \"#utility.yul\":10064:10081   */\n      add\n        /* \"#utility.yul\":10057:10104   */\n      mstore\n        /* \"#utility.yul\":10121:10252   */\n      tag_285\n        /* \"#utility.yul\":10247:10251   */\n      dup2\n        /* \"#utility.yul\":10121:10252   */\n      tag_247\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":10113:10252   */\n      swap1\n      pop\n        /* \"#utility.yul\":9840:10259   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10265:10684   */\n    tag_107:\n        /* \"#utility.yul\":10431:10435   */\n      0x00\n        /* \"#utility.yul\":10469:10471   */\n      0x20\n        /* \"#utility.yul\":10458:10467   */\n      dup3\n        /* \"#utility.yul\":10454:10472   */\n      add\n        /* \"#utility.yul\":10446:10472   */\n      swap1\n      pop\n        /* \"#utility.yul\":10518:10527   */\n      dup2\n        /* \"#utility.yul\":10512:10516   */\n      dup2\n        /* \"#utility.yul\":10508:10528   */\n      sub\n        /* \"#utility.yul\":10504:10505   */\n      0x00\n        /* \"#utility.yul\":10493:10502   */\n      dup4\n        /* \"#utility.yul\":10489:10506   */\n      add\n        /* \"#utility.yul\":10482:10529   */\n      mstore\n        /* \"#utility.yul\":10546:10677   */\n      tag_287\n        /* \"#utility.yul\":10672:10676   */\n      dup2\n        /* \"#utility.yul\":10546:10677   */\n      tag_252\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":10538:10677   */\n      swap1\n      pop\n        /* \"#utility.yul\":10265:10684   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10690:10912   */\n    tag_28:\n        /* \"#utility.yul\":10783:10787   */\n      0x00\n        /* \"#utility.yul\":10821:10823   */\n      0x20\n        /* \"#utility.yul\":10810:10819   */\n      dup3\n        /* \"#utility.yul\":10806:10824   */\n      add\n        /* \"#utility.yul\":10798:10824   */\n      swap1\n      pop\n        /* \"#utility.yul\":10834:10905   */\n      tag_289\n        /* \"#utility.yul\":10902:10903   */\n      0x00\n        /* \"#utility.yul\":10891:10900   */\n      dup4\n        /* \"#utility.yul\":10887:10904   */\n      add\n        /* \"#utility.yul\":10878:10884   */\n      dup5\n        /* \"#utility.yul\":10834:10905   */\n      tag_257\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":10690:10912   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10999:11168   */\n    tag_234:\n        /* \"#utility.yul\":11083:11094   */\n      0x00\n        /* \"#utility.yul\":11117:11123   */\n      dup3\n        /* \"#utility.yul\":11112:11115   */\n      dup3\n        /* \"#utility.yul\":11105:11124   */\n      mstore\n        /* \"#utility.yul\":11157:11161   */\n      0x20\n        /* \"#utility.yul\":11152:11155   */\n      dup3\n        /* \"#utility.yul\":11148:11162   */\n      add\n        /* \"#utility.yul\":11133:11162   */\n      swap1\n      pop\n        /* \"#utility.yul\":10999:11168   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11174:11479   */\n    tag_83:\n        /* \"#utility.yul\":11214:11217   */\n      0x00\n        /* \"#utility.yul\":11233:11253   */\n      tag_294\n        /* \"#utility.yul\":11251:11252   */\n      dup3\n        /* \"#utility.yul\":11233:11253   */\n      tag_260\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":11228:11253   */\n      swap2\n      pop\n        /* \"#utility.yul\":11267:11287   */\n      tag_295\n        /* \"#utility.yul\":11285:11286   */\n      dup4\n        /* \"#utility.yul\":11267:11287   */\n      tag_260\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":11262:11287   */\n      swap3\n      pop\n        /* \"#utility.yul\":11421:11422   */\n      dup3\n        /* \"#utility.yul\":11353:11419   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":11349:11423   */\n      sub\n        /* \"#utility.yul\":11346:11347   */\n      dup3\n        /* \"#utility.yul\":11343:11424   */\n      gt\n        /* \"#utility.yul\":11340:11447   */\n      iszero\n      tag_296\n      jumpi\n        /* \"#utility.yul\":11427:11445   */\n      tag_297\n      tag_298\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":11340:11447   */\n    tag_296:\n        /* \"#utility.yul\":11471:11472   */\n      dup3\n        /* \"#utility.yul\":11468:11469   */\n      dup3\n        /* \"#utility.yul\":11464:11473   */\n      add\n        /* \"#utility.yul\":11457:11473   */\n      swap1\n      pop\n        /* \"#utility.yul\":11174:11479   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11485:11676   */\n    tag_80:\n        /* \"#utility.yul\":11525:11529   */\n      0x00\n        /* \"#utility.yul\":11545:11565   */\n      tag_300\n        /* \"#utility.yul\":11563:11564   */\n      dup3\n        /* \"#utility.yul\":11545:11565   */\n      tag_260\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":11540:11565   */\n      swap2\n      pop\n        /* \"#utility.yul\":11579:11599   */\n      tag_301\n        /* \"#utility.yul\":11597:11598   */\n      dup4\n        /* \"#utility.yul\":11579:11599   */\n      tag_260\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":11574:11599   */\n      swap3\n      pop\n        /* \"#utility.yul\":11618:11619   */\n      dup3\n        /* \"#utility.yul\":11615:11616   */\n      dup3\n        /* \"#utility.yul\":11612:11620   */\n      lt\n        /* \"#utility.yul\":11609:11643   */\n      iszero\n      tag_302\n      jumpi\n        /* \"#utility.yul\":11623:11641   */\n      tag_303\n      tag_298\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":11609:11643   */\n    tag_302:\n        /* \"#utility.yul\":11668:11669   */\n      dup3\n        /* \"#utility.yul\":11665:11666   */\n      dup3\n        /* \"#utility.yul\":11661:11670   */\n      sub\n        /* \"#utility.yul\":11653:11670   */\n      swap1\n      pop\n        /* \"#utility.yul\":11485:11676   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11682:11778   */\n    tag_214:\n        /* \"#utility.yul\":11719:11726   */\n      0x00\n        /* \"#utility.yul\":11748:11772   */\n      tag_305\n        /* \"#utility.yul\":11766:11771   */\n      dup3\n        /* \"#utility.yul\":11748:11772   */\n      tag_306\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":11737:11772   */\n      swap1\n      pop\n        /* \"#utility.yul\":11682:11778   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11784:11874   */\n    tag_307:\n        /* \"#utility.yul\":11818:11825   */\n      0x00\n        /* \"#utility.yul\":11861:11866   */\n      dup2\n        /* \"#utility.yul\":11854:11867   */\n      iszero\n        /* \"#utility.yul\":11847:11868   */\n      iszero\n        /* \"#utility.yul\":11836:11868   */\n      swap1\n      pop\n        /* \"#utility.yul\":11784:11874   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11880:12029   */\n    tag_218:\n        /* \"#utility.yul\":11916:11923   */\n      0x00\n        /* \"#utility.yul\":11956:12022   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11949:11954   */\n      dup3\n        /* \"#utility.yul\":11945:12023   */\n      and\n        /* \"#utility.yul\":11934:12023   */\n      swap1\n      pop\n        /* \"#utility.yul\":11880:12029   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12035:12161   */\n    tag_306:\n        /* \"#utility.yul\":12072:12079   */\n      0x00\n        /* \"#utility.yul\":12112:12154   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":12105:12110   */\n      dup3\n        /* \"#utility.yul\":12101:12155   */\n      and\n        /* \"#utility.yul\":12090:12155   */\n      swap1\n      pop\n        /* \"#utility.yul\":12035:12161   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12167:12244   */\n    tag_260:\n        /* \"#utility.yul\":12204:12211   */\n      0x00\n        /* \"#utility.yul\":12233:12238   */\n      dup2\n        /* \"#utility.yul\":12222:12238   */\n      swap1\n      pop\n        /* \"#utility.yul\":12167:12244   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12250:12390   */\n    tag_222:\n        /* \"#utility.yul\":12314:12323   */\n      0x00\n        /* \"#utility.yul\":12347:12384   */\n      tag_313\n        /* \"#utility.yul\":12378:12383   */\n      dup3\n        /* \"#utility.yul\":12347:12384   */\n      tag_314\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":12334:12384   */\n      swap1\n      pop\n        /* \"#utility.yul\":12250:12390   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12396:12537   */\n    tag_226:\n        /* \"#utility.yul\":12461:12470   */\n      0x00\n        /* \"#utility.yul\":12494:12531   */\n      tag_316\n        /* \"#utility.yul\":12525:12530   */\n      dup3\n        /* \"#utility.yul\":12494:12531   */\n      tag_314\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":12481:12531   */\n      swap1\n      pop\n        /* \"#utility.yul\":12396:12537   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12543:12685   */\n    tag_230:\n        /* \"#utility.yul\":12609:12618   */\n      0x00\n        /* \"#utility.yul\":12642:12679   */\n      tag_318\n        /* \"#utility.yul\":12673:12678   */\n      dup3\n        /* \"#utility.yul\":12642:12679   */\n      tag_314\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":12629:12679   */\n      swap1\n      pop\n        /* \"#utility.yul\":12543:12685   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12691:12817   */\n    tag_314:\n        /* \"#utility.yul\":12741:12750   */\n      0x00\n        /* \"#utility.yul\":12774:12811   */\n      tag_320\n        /* \"#utility.yul\":12805:12810   */\n      dup3\n        /* \"#utility.yul\":12774:12811   */\n      tag_321\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":12761:12811   */\n      swap1\n      pop\n        /* \"#utility.yul\":12691:12817   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12823:12936   */\n    tag_321:\n        /* \"#utility.yul\":12873:12882   */\n      0x00\n        /* \"#utility.yul\":12906:12930   */\n      tag_323\n        /* \"#utility.yul\":12924:12929   */\n      dup3\n        /* \"#utility.yul\":12906:12930   */\n      tag_306\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":12893:12930   */\n      swap1\n      pop\n        /* \"#utility.yul\":12823:12936   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12942:13122   */\n    tag_298:\n        /* \"#utility.yul\":12990:13067   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12987:12988   */\n      0x00\n        /* \"#utility.yul\":12980:13068   */\n      mstore\n        /* \"#utility.yul\":13087:13091   */\n      0x11\n        /* \"#utility.yul\":13084:13085   */\n      0x04\n        /* \"#utility.yul\":13077:13092   */\n      mstore\n        /* \"#utility.yul\":13111:13115   */\n      0x24\n        /* \"#utility.yul\":13108:13109   */\n      0x00\n        /* \"#utility.yul\":13101:13116   */\n      revert\n        /* \"#utility.yul\":13128:13245   */\n    tag_172:\n        /* \"#utility.yul\":13237:13238   */\n      0x00\n        /* \"#utility.yul\":13234:13235   */\n      dup1\n        /* \"#utility.yul\":13227:13239   */\n      revert\n        /* \"#utility.yul\":13251:13368   */\n    tag_169:\n        /* \"#utility.yul\":13360:13361   */\n      0x00\n        /* \"#utility.yul\":13357:13358   */\n      dup1\n        /* \"#utility.yul\":13350:13362   */\n      revert\n        /* \"#utility.yul\":13374:13491   */\n    tag_175:\n        /* \"#utility.yul\":13483:13484   */\n      0x00\n        /* \"#utility.yul\":13480:13481   */\n      dup1\n        /* \"#utility.yul\":13473:13485   */\n      revert\n        /* \"#utility.yul\":13497:13614   */\n    tag_197:\n        /* \"#utility.yul\":13606:13607   */\n      0x00\n        /* \"#utility.yul\":13603:13604   */\n      dup1\n        /* \"#utility.yul\":13596:13608   */\n      revert\n        /* \"#utility.yul\":13620:13737   */\n    tag_186:\n        /* \"#utility.yul\":13729:13730   */\n      0x00\n        /* \"#utility.yul\":13726:13727   */\n      dup1\n        /* \"#utility.yul\":13719:13731   */\n      revert\n        /* \"#utility.yul\":13743:13903   */\n    tag_236:\n        /* \"#utility.yul\":13883:13895   */\n      0x4e6f74207374616b656400000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13879:13880   */\n      0x00\n        /* \"#utility.yul\":13871:13877   */\n      dup3\n        /* \"#utility.yul\":13867:13881   */\n      add\n        /* \"#utility.yul\":13860:13896   */\n      mstore\n        /* \"#utility.yul\":13743:13903   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13909:14072   */\n    tag_241:\n        /* \"#utility.yul\":14049:14064   */\n      0x5472616e73666572206661696c00000000000000000000000000000000000000\n        /* \"#utility.yul\":14045:14046   */\n      0x00\n        /* \"#utility.yul\":14037:14043   */\n      dup3\n        /* \"#utility.yul\":14033:14047   */\n      add\n        /* \"#utility.yul\":14026:14065   */\n      mstore\n        /* \"#utility.yul\":13909:14072   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14078:14241   */\n    tag_246:\n        /* \"#utility.yul\":14218:14233   */\n      0x4e6f74207265616c4f776e657200000000000000000000000000000000000000\n        /* \"#utility.yul\":14214:14215   */\n      0x00\n        /* \"#utility.yul\":14206:14212   */\n      dup3\n        /* \"#utility.yul\":14202:14216   */\n      add\n        /* \"#utility.yul\":14195:14234   */\n      mstore\n        /* \"#utility.yul\":14078:14241   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14247:14406   */\n    tag_251:\n        /* \"#utility.yul\":14387:14398   */\n      0x4e6f74206f776e65720000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14383:14384   */\n      0x00\n        /* \"#utility.yul\":14375:14381   */\n      dup3\n        /* \"#utility.yul\":14371:14385   */\n      add\n        /* \"#utility.yul\":14364:14399   */\n      mstore\n        /* \"#utility.yul\":14247:14406   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14412:14593   */\n    tag_256:\n        /* \"#utility.yul\":14552:14585   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":14548:14549   */\n      0x00\n        /* \"#utility.yul\":14540:14546   */\n      dup3\n        /* \"#utility.yul\":14536:14550   */\n      add\n        /* \"#utility.yul\":14529:14586   */\n      mstore\n        /* \"#utility.yul\":14412:14593   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14599:14721   */\n    tag_157:\n        /* \"#utility.yul\":14672:14696   */\n      tag_336\n        /* \"#utility.yul\":14690:14695   */\n      dup2\n        /* \"#utility.yul\":14672:14696   */\n      tag_214\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":14665:14670   */\n      dup2\n        /* \"#utility.yul\":14662:14697   */\n      eq\n        /* \"#utility.yul\":14652:14715   */\n      tag_337\n      jumpi\n        /* \"#utility.yul\":14711:14712   */\n      0x00\n        /* \"#utility.yul\":14708:14709   */\n      dup1\n        /* \"#utility.yul\":14701:14713   */\n      revert\n        /* \"#utility.yul\":14652:14715   */\n    tag_337:\n        /* \"#utility.yul\":14599:14721   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14727:14843   */\n    tag_164:\n        /* \"#utility.yul\":14797:14818   */\n      tag_339\n        /* \"#utility.yul\":14812:14817   */\n      dup2\n        /* \"#utility.yul\":14797:14818   */\n      tag_307\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":14790:14795   */\n      dup2\n        /* \"#utility.yul\":14787:14819   */\n      eq\n        /* \"#utility.yul\":14777:14837   */\n      tag_340\n      jumpi\n        /* \"#utility.yul\":14833:14834   */\n      0x00\n        /* \"#utility.yul\":14830:14831   */\n      dup1\n        /* \"#utility.yul\":14823:14835   */\n      revert\n        /* \"#utility.yul\":14777:14837   */\n    tag_340:\n        /* \"#utility.yul\":14727:14843   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14849:14971   */\n    tag_179:\n        /* \"#utility.yul\":14922:14946   */\n      tag_342\n        /* \"#utility.yul\":14940:14945   */\n      dup2\n        /* \"#utility.yul\":14922:14946   */\n      tag_260\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":14915:14920   */\n      dup2\n        /* \"#utility.yul\":14912:14947   */\n      eq\n        /* \"#utility.yul\":14902:14965   */\n      tag_343\n      jumpi\n        /* \"#utility.yul\":14961:14962   */\n      0x00\n        /* \"#utility.yul\":14958:14959   */\n      dup1\n        /* \"#utility.yul\":14951:14963   */\n      revert\n        /* \"#utility.yul\":14902:14965   */\n    tag_343:\n        /* \"#utility.yul\":14849:14971   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212207d31ddd157335a93ddcb01bf6b5bd90c2799207d0cb817e76dba5bc24a4668ab64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_18": {
									"entryPoint": null,
									"id": 18,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_301": {
									"entryPoint": null,
									"id": 301,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 331,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 354,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 425,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 445,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 477,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 482,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1355:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:5"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:5",
														"type": ""
													}
												],
												"src": "7:143:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "250:413:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "296:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "298:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "298:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "298:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "271:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "280:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "267:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "267:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "292:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "263:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "263:32:5"
															},
															"nodeType": "YulIf",
															"src": "260:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "389:128:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "404:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "418:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "408:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "433:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "479:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "490:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "475:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "475:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "499:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "443:31:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "443:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "433:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "527:129:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "542:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "556:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "546:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "572:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "618:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "629:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "614:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "614:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "638:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "582:31:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "582:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "572:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "212:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "223:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "235:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "243:6:5",
														"type": ""
													}
												],
												"src": "156:507:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "709:35:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "719:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "735:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "729:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "729:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "719:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "702:6:5",
														"type": ""
													}
												],
												"src": "669:75:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "795:51:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "805:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "834:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "816:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "816:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "805:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "777:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "787:7:5",
														"type": ""
													}
												],
												"src": "750:96:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "897:81:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "907:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "922:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "929:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "918:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "918:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "907:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "879:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "889:7:5",
														"type": ""
													}
												],
												"src": "852:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1073:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1093:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1083:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1083:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1083:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "984:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1196:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1213:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1216:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1206:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1206:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1206:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1107:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1273:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1330:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1339:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1342:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1332:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1332:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1332:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1296:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1321:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1303:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1303:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1293:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1293:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1286:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1286:43:5"
															},
															"nodeType": "YulIf",
															"src": "1283:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1266:5:5",
														"type": ""
													}
												],
												"src": "1230:122:5"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040516200195338038062001953833981810160405281019062000037919062000162565b600160008190555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050620001fc565b6000815190506200015c81620001e2565b92915050565b600080604083850312156200017c576200017b620001dd565b5b60006200018c858286016200014b565b92505060206200019f858286016200014b565b9150509250929050565b6000620001b682620001bd565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b620001ed81620001a9565b8114620001f957600080fd5b50565b611747806200020c6000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80637636e245116100665780637636e2451461014557806380a5400114610175578063a694fc3a14610193578063b8e33fb2146101af578063fead3d6e146101cd5761009e565b80630eeadd30146100a35780632e17de78146100bf578063379607f5146100db57806353eebc6d146100f757806366bb863b14610127575b600080fd5b6100bd60048036038101906100b89190611149565b6101eb565b005b6100d960048036038101906100d49190611149565b6102b5565b005b6100f560048036038101906100f09190611149565b61082a565b005b610111600480360381019061010c9190611149565b610c3d565b60405161011e9190611433565b60405180910390f35b61012f610c5d565b60405161013c91906112ac565b60405180910390f35b61015f600480360381019061015a9190611082565b610c83565b60405161016c9190611327565b60405180910390f35b61017d610cb2565b60405161018a9190611342565b60405180910390f35b6101ad60048036038101906101a89190611149565b610cd8565b005b6101b7610f4a565b6040516101c4919061135d565b60405180910390f35b6101d5610f70565b6040516101e29190611378565b60405180910390f35b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a0c4442d826040518263ffffffff1660e01b81526004016102469190611433565b602060405180830381600087803b15801561026057600080fd5b505af1158015610274573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102989190611176565b600560008381526020019081526020016000206001018190555050565b3073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e836040518263ffffffff1660e01b81526004016103279190611433565b60206040518083038186803b15801561033f57600080fd5b505afa158015610353573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103779190611055565b73ffffffffffffffffffffffffffffffffffffffff16146103cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c490611393565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166005600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610471576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610468906113d3565b60405180910390fd5b60006005600083815260200190815260200160002060010154600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a0c4442d846040518263ffffffff1660e01b81526004016104e59190611433565b602060405180830381600087803b1580156104ff57600080fd5b505af1158015610513573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105379190611176565b61054191906114b5565b60056000848152602001908152602001600020600201544261056391906114b5565b61056d919061145f565b90506000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a0c4442d846040518263ffffffff1660e01b81526004016105cc9190611433565b602060405180830381600087803b1580156105e657600080fd5b505af11580156105fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061e9190611176565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b815260040161067d9291906112fe565b602060405180830381600087803b15801561069757600080fd5b505af11580156106ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106cf919061111c565b1561073e5742600560008581526020019081526020016000206002018190555060056000848152602001908152602001600020600101548161071191906114b5565b600560008581526020019081526020016000206001016000828254610736919061145f565b925050819055505b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3033866040518463ffffffff1660e01b815260040161079d939291906112c7565b600060405180830381600087803b1580156107b757600080fd5b505af11580156107cb573d6000803e3d6000fd5b5050505060006005600085815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b60026000541415610870576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086790611413565b60405180910390fd5b6002600081905550600060056000838152602001908152602001600020600201541161089b57600080fd5b3373ffffffffffffffffffffffffffffffffffffffff166005600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461090957600080fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a0c4442d826040518263ffffffff1660e01b81526004016109649190611433565b602060405180830381600087803b15801561097e57600080fd5b505af1158015610992573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b69190611176565b60056000838152602001908152602001600020600101819055506000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a0c4442d836040518263ffffffff1660e01b8152600401610a2d9190611433565b602060405180830381600087803b158015610a4757600080fd5b505af1158015610a5b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7f9190611176565b90506000600560008481526020019081526020016000206001015482610aa591906114b5565b600560008581526020019081526020016000206002015442610ac791906114b5565b610ad1919061145f565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610b309291906112fe565b602060405180830381600087803b158015610b4a57600080fd5b505af1158015610b5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b82919061111c565b15610bf557426005600085815260200190815260200160002060020181905550600560008481526020019081526020016000206001015482610bc491906114b5565b600560008581526020019081526020016000206001016000828254610be9919061145f565b92505081905550610c30565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c27906113b3565b60405180910390fd5b5050600160008190555050565b600060056000838152602001908152602001600020600101549050919050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60007f7636e24523a394e051c4f3b1d9065be73f6b416813ba53a99b779354a5822c5890509695505050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026000541415610d1e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d1590611413565b60405180910390fd5b60026000819055503373ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e836040518263ffffffff1660e01b8152600401610d989190611433565b60206040518083038186803b158015610db057600080fd5b505afa158015610dc4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610de89190611055565b73ffffffffffffffffffffffffffffffffffffffff1614610e3e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e35906113f3565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610e9d939291906112c7565b600060405180830381600087803b158015610eb757600080fd5b505af1158015610ecb573d6000803e3d6000fd5b50505050336005600083815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550426005600083815260200190815260200160002060020181905550600160008190555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600081359050610fa5816116cc565b92915050565b600081519050610fba816116cc565b92915050565b600081519050610fcf816116e3565b92915050565b60008083601f840112610feb57610fea6115eb565b5b8235905067ffffffffffffffff811115611008576110076115e6565b5b602083019150836001820283011115611024576110236115f0565b5b9250929050565b60008135905061103a816116fa565b92915050565b60008151905061104f816116fa565b92915050565b60006020828403121561106b5761106a6115fa565b5b600061107984828501610fab565b91505092915050565b60008060008060008060a0878903121561109f5761109e6115fa565b5b60006110ad89828a01610f96565b96505060206110be89828a01610f96565b95505060406110cf89828a0161102b565b94505060606110e089828a0161102b565b935050608087013567ffffffffffffffff811115611101576111006115f5565b5b61110d89828a01610fd5565b92509250509295509295509295565b600060208284031215611132576111316115fa565b5b600061114084828501610fc0565b91505092915050565b60006020828403121561115f5761115e6115fa565b5b600061116d8482850161102b565b91505092915050565b60006020828403121561118c5761118b6115fa565b5b600061119a84828501611040565b91505092915050565b6111ac816114e9565b82525050565b6111bb81611507565b82525050565b6111ca8161155d565b82525050565b6111d98161156f565b82525050565b6111e881611581565b82525050565b60006111fb600a8361144e565b9150611206826115ff565b602082019050919050565b600061121e600d8361144e565b915061122982611628565b602082019050919050565b6000611241600d8361144e565b915061124c82611651565b602082019050919050565b600061126460098361144e565b915061126f8261167a565b602082019050919050565b6000611287601f8361144e565b9150611292826116a3565b602082019050919050565b6112a681611553565b82525050565b60006020820190506112c160008301846111a3565b92915050565b60006060820190506112dc60008301866111a3565b6112e960208301856111a3565b6112f6604083018461129d565b949350505050565b600060408201905061131360008301856111a3565b611320602083018461129d565b9392505050565b600060208201905061133c60008301846111b2565b92915050565b600060208201905061135760008301846111c1565b92915050565b600060208201905061137260008301846111d0565b92915050565b600060208201905061138d60008301846111df565b92915050565b600060208201905081810360008301526113ac816111ee565b9050919050565b600060208201905081810360008301526113cc81611211565b9050919050565b600060208201905081810360008301526113ec81611234565b9050919050565b6000602082019050818103600083015261140c81611257565b9050919050565b6000602082019050818103600083015261142c8161127a565b9050919050565b6000602082019050611448600083018461129d565b92915050565b600082825260208201905092915050565b600061146a82611553565b915061147583611553565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156114aa576114a96115b7565b5b828201905092915050565b60006114c082611553565b91506114cb83611553565b9250828210156114de576114dd6115b7565b5b828203905092915050565b60006114f482611533565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061156882611593565b9050919050565b600061157a82611593565b9050919050565b600061158c82611593565b9050919050565b600061159e826115a5565b9050919050565b60006115b082611533565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b7f4e6f74207374616b656400000000000000000000000000000000000000000000600082015250565b7f5472616e73666572206661696c00000000000000000000000000000000000000600082015250565b7f4e6f74207265616c4f776e657200000000000000000000000000000000000000600082015250565b7f4e6f74206f776e65720000000000000000000000000000000000000000000000600082015250565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6116d5816114e9565b81146116e057600080fd5b50565b6116ec816114fb565b81146116f757600080fd5b50565b61170381611553565b811461170e57600080fd5b5056fea26469706673582212207d31ddd157335a93ddcb01bf6b5bd90c2799207d0cb817e76dba5bc24a4668ab64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1953 CODESIZE SUB DUP1 PUSH3 0x1953 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x162 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH3 0x1FC JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x15C DUP2 PUSH3 0x1E2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x17C JUMPI PUSH3 0x17B PUSH3 0x1DD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x18C DUP6 DUP3 DUP7 ADD PUSH3 0x14B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x19F DUP6 DUP3 DUP7 ADD PUSH3 0x14B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1B6 DUP3 PUSH3 0x1BD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1ED DUP2 PUSH3 0x1A9 JUMP JUMPDEST DUP2 EQ PUSH3 0x1F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1747 DUP1 PUSH3 0x20C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7636E245 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x7636E245 EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0x80A54001 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0xB8E33FB2 EQ PUSH2 0x1AF JUMPI DUP1 PUSH4 0xFEAD3D6E EQ PUSH2 0x1CD JUMPI PUSH2 0x9E JUMP JUMPDEST DUP1 PUSH4 0xEEADD30 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x2E17DE78 EQ PUSH2 0xBF JUMPI DUP1 PUSH4 0x379607F5 EQ PUSH2 0xDB JUMPI DUP1 PUSH4 0x53EEBC6D EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x66BB863B EQ PUSH2 0x127 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0x1149 JUMP JUMPDEST PUSH2 0x1EB JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD4 SWAP2 SWAP1 PUSH2 0x1149 JUMP JUMPDEST PUSH2 0x2B5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF0 SWAP2 SWAP1 PUSH2 0x1149 JUMP JUMPDEST PUSH2 0x82A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x111 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10C SWAP2 SWAP1 PUSH2 0x1149 JUMP JUMPDEST PUSH2 0xC3D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11E SWAP2 SWAP1 PUSH2 0x1433 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12F PUSH2 0xC5D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x12AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15A SWAP2 SWAP1 PUSH2 0x1082 JUMP JUMPDEST PUSH2 0xC83 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x1327 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH2 0xCB2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x1342 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x1149 JUMP JUMPDEST PUSH2 0xCD8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B7 PUSH2 0xF4A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0x135D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D5 PUSH2 0xF70 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0x1378 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA0C4442D DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x246 SWAP2 SWAP1 PUSH2 0x1433 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x260 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x274 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x1176 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x327 SWAP2 SWAP1 PUSH2 0x1433 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x33F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x353 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x377 SWAP2 SWAP1 PUSH2 0x1055 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C4 SWAP1 PUSH2 0x1393 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x471 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x468 SWAP1 PUSH2 0x13D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA0C4442D DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E5 SWAP2 SWAP1 PUSH2 0x1433 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x513 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x537 SWAP2 SWAP1 PUSH2 0x1176 JUMP JUMPDEST PUSH2 0x541 SWAP2 SWAP1 PUSH2 0x14B5 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD TIMESTAMP PUSH2 0x563 SWAP2 SWAP1 PUSH2 0x14B5 JUMP JUMPDEST PUSH2 0x56D SWAP2 SWAP1 PUSH2 0x145F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA0C4442D DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5CC SWAP2 SWAP1 PUSH2 0x1433 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5FA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x61E SWAP2 SWAP1 PUSH2 0x1176 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67D SWAP3 SWAP2 SWAP1 PUSH2 0x12FE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x697 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6AB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6CF SWAP2 SWAP1 PUSH2 0x111C JUMP JUMPDEST ISZERO PUSH2 0x73E JUMPI TIMESTAMP PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 PUSH2 0x711 SWAP2 SWAP1 PUSH2 0x14B5 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x736 SWAP2 SWAP1 PUSH2 0x145F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD ADDRESS CALLER DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x79D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x12C7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7CB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x870 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x867 SWAP1 PUSH2 0x1413 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD GT PUSH2 0x89B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x909 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA0C4442D DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x964 SWAP2 SWAP1 PUSH2 0x1433 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x97E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x992 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9B6 SWAP2 SWAP1 PUSH2 0x1176 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA0C4442D DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA2D SWAP2 SWAP1 PUSH2 0x1433 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA5B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA7F SWAP2 SWAP1 PUSH2 0x1176 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD DUP3 PUSH2 0xAA5 SWAP2 SWAP1 PUSH2 0x14B5 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD TIMESTAMP PUSH2 0xAC7 SWAP2 SWAP1 PUSH2 0x14B5 JUMP JUMPDEST PUSH2 0xAD1 SWAP2 SWAP1 PUSH2 0x145F JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB30 SWAP3 SWAP2 SWAP1 PUSH2 0x12FE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB5E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB82 SWAP2 SWAP1 PUSH2 0x111C JUMP JUMPDEST ISZERO PUSH2 0xBF5 JUMPI TIMESTAMP PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD DUP3 PUSH2 0xBC4 SWAP2 SWAP1 PUSH2 0x14B5 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xBE9 SWAP2 SWAP1 PUSH2 0x145F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xC30 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC27 SWAP1 PUSH2 0x13B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x7636E24523A394E051C4F3B1D9065BE73F6B416813BA53A99B779354A5822C58 SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0xD1E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD15 SWAP1 PUSH2 0x1413 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD98 SWAP2 SWAP1 PUSH2 0x1433 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDC4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDE8 SWAP2 SWAP1 PUSH2 0x1055 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE3E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE35 SWAP1 PUSH2 0x13F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE9D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x12C7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xECB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP CALLER PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFA5 DUP2 PUSH2 0x16CC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xFBA DUP2 PUSH2 0x16CC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xFCF DUP2 PUSH2 0x16E3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xFEB JUMPI PUSH2 0xFEA PUSH2 0x15EB JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1008 JUMPI PUSH2 0x1007 PUSH2 0x15E6 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1024 JUMPI PUSH2 0x1023 PUSH2 0x15F0 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x103A DUP2 PUSH2 0x16FA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x104F DUP2 PUSH2 0x16FA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x106B JUMPI PUSH2 0x106A PUSH2 0x15FA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1079 DUP5 DUP3 DUP6 ADD PUSH2 0xFAB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x109F JUMPI PUSH2 0x109E PUSH2 0x15FA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10AD DUP10 DUP3 DUP11 ADD PUSH2 0xF96 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x10BE DUP10 DUP3 DUP11 ADD PUSH2 0xF96 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x10CF DUP10 DUP3 DUP11 ADD PUSH2 0x102B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x10E0 DUP10 DUP3 DUP11 ADD PUSH2 0x102B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1101 JUMPI PUSH2 0x1100 PUSH2 0x15F5 JUMP JUMPDEST JUMPDEST PUSH2 0x110D DUP10 DUP3 DUP11 ADD PUSH2 0xFD5 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1132 JUMPI PUSH2 0x1131 PUSH2 0x15FA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1140 DUP5 DUP3 DUP6 ADD PUSH2 0xFC0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x115F JUMPI PUSH2 0x115E PUSH2 0x15FA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x116D DUP5 DUP3 DUP6 ADD PUSH2 0x102B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x118C JUMPI PUSH2 0x118B PUSH2 0x15FA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x119A DUP5 DUP3 DUP6 ADD PUSH2 0x1040 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x11AC DUP2 PUSH2 0x14E9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x11BB DUP2 PUSH2 0x1507 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x11CA DUP2 PUSH2 0x155D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x11D9 DUP2 PUSH2 0x156F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x11E8 DUP2 PUSH2 0x1581 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11FB PUSH1 0xA DUP4 PUSH2 0x144E JUMP JUMPDEST SWAP2 POP PUSH2 0x1206 DUP3 PUSH2 0x15FF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x121E PUSH1 0xD DUP4 PUSH2 0x144E JUMP JUMPDEST SWAP2 POP PUSH2 0x1229 DUP3 PUSH2 0x1628 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1241 PUSH1 0xD DUP4 PUSH2 0x144E JUMP JUMPDEST SWAP2 POP PUSH2 0x124C DUP3 PUSH2 0x1651 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1264 PUSH1 0x9 DUP4 PUSH2 0x144E JUMP JUMPDEST SWAP2 POP PUSH2 0x126F DUP3 PUSH2 0x167A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1287 PUSH1 0x1F DUP4 PUSH2 0x144E JUMP JUMPDEST SWAP2 POP PUSH2 0x1292 DUP3 PUSH2 0x16A3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12A6 DUP2 PUSH2 0x1553 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12C1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x11A3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x12DC PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x11A3 JUMP JUMPDEST PUSH2 0x12E9 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x11A3 JUMP JUMPDEST PUSH2 0x12F6 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x129D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1313 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x11A3 JUMP JUMPDEST PUSH2 0x1320 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x129D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x133C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x11B2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1357 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x11C1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1372 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x11D0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x138D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x11DF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x13AC DUP2 PUSH2 0x11EE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x13CC DUP2 PUSH2 0x1211 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x13EC DUP2 PUSH2 0x1234 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x140C DUP2 PUSH2 0x1257 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x142C DUP2 PUSH2 0x127A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1448 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x129D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x146A DUP3 PUSH2 0x1553 JUMP JUMPDEST SWAP2 POP PUSH2 0x1475 DUP4 PUSH2 0x1553 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x14AA JUMPI PUSH2 0x14A9 PUSH2 0x15B7 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14C0 DUP3 PUSH2 0x1553 JUMP JUMPDEST SWAP2 POP PUSH2 0x14CB DUP4 PUSH2 0x1553 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x14DE JUMPI PUSH2 0x14DD PUSH2 0x15B7 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14F4 DUP3 PUSH2 0x1533 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1568 DUP3 PUSH2 0x1593 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x157A DUP3 PUSH2 0x1593 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x158C DUP3 PUSH2 0x1593 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x159E DUP3 PUSH2 0x15A5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15B0 DUP3 PUSH2 0x1533 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E6F74207374616B656400000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C00000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E6F74207265616C4F776E657200000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E6F74206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x16D5 DUP2 PUSH2 0x14E9 JUMP JUMPDEST DUP2 EQ PUSH2 0x16E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x16EC DUP2 PUSH2 0x14FB JUMP JUMPDEST DUP2 EQ PUSH2 0x16F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1703 DUP2 PUSH2 0x1553 JUMP JUMPDEST DUP2 EQ PUSH2 0x170E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH30 0x31DDD157335A93DDCB01BF6B5BD90C2799207D0CB817E76DBA5BC24A4668 0xAB PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "341:3383:4:-:0;;;526:254;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1701:1:0;1806:7;:22;;;;614:12:4;594:9;;:33;;;;;;;;;;;;;;;;;;668:12;638:18;;:43;;;;;;;;;;;;;;;;;;713:14;692:11;;:36;;;;;;;;;;;;;;;;;;758:12;739:16;;:31;;;;;;;;;;;;;;;;;;526:254;;341:3383;;7:143:5;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:507::-;235:6;243;292:2;280:9;271:7;267:23;263:32;260:119;;;298:79;;:::i;:::-;260:119;418:1;443:64;499:7;490:6;479:9;475:22;443:64;:::i;:::-;433:74;;389:128;556:2;582:64;638:7;629:6;618:9;614:22;582:64;:::i;:::-;572:74;;527:129;156:507;;;;;:::o;750:96::-;787:7;816:24;834:5;816:24;:::i;:::-;805:35;;750:96;;;:::o;852:126::-;889:7;929:42;922:5;918:54;907:65;;852:126;;;:::o;1107:117::-;1216:1;1213;1206:12;1230:122;1303:24;1321:5;1303:24;:::i;:::-;1296:5;1293:35;1283:63;;1342:1;1339;1332:12;1283:63;1230:122;:::o;341:3383:4:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@claim_498": {
									"entryPoint": 2090,
									"id": 498,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@claimedTrophies_354": {
									"entryPoint": 3133,
									"id": 354,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@onERC721Received_632": {
									"entryPoint": 3203,
									"id": 632,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"@parentNFTAddress_271": {
									"entryPoint": 3165,
									"id": 271,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@parentNFT_266": {
									"entryPoint": 3914,
									"id": 266,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@parentNftFunctions_269": {
									"entryPoint": 3952,
									"id": 269,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@parentToken_263": {
									"entryPoint": 3250,
									"id": 263,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@refreshTrophies_341": {
									"entryPoint": 491,
									"id": 341,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stake_401": {
									"entryPoint": 3288,
									"id": 401,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unstake_609": {
									"entryPoint": 693,
									"id": 609,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 3990,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 4011,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 4032,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_calldata_ptr": {
									"entryPoint": 4053,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4139,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 4160,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 4181,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_calldata_ptr": {
									"entryPoint": 4226,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 4380,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4425,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 4470,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4515,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes4_to_t_bytes4_fromStack": {
									"entryPoint": 4530,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$117_to_t_address_fromStack": {
									"entryPoint": 4545,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC721_$233_to_t_address_fromStack": {
									"entryPoint": 4560,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_INFTGame_$258_to_t_address_fromStack": {
									"entryPoint": 4575,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_0a9d0ecd49bee278668e19f1af22fe4be1e214161373796d5a2b94d737799b7b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4590,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_16c777a58f6e3d980b39cb8f48eb79a80df895169ab129c60d82e2c36ce3881f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4625,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_65bf7e5ac3f00b13cd2aaf25d42053f58e96cb66bd726c717b1b6b7161940e24_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4660,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4695,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4730,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4765,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4780,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4807,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4862,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": 4903,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$117__to_t_address__fromStack_reversed": {
									"entryPoint": 4930,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC721_$233__to_t_address__fromStack_reversed": {
									"entryPoint": 4957,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_INFTGame_$258__to_t_address__fromStack_reversed": {
									"entryPoint": 4984,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0a9d0ecd49bee278668e19f1af22fe4be1e214161373796d5a2b94d737799b7b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5011,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_16c777a58f6e3d980b39cb8f48eb79a80df895169ab129c60d82e2c36ce3881f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5043,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_65bf7e5ac3f00b13cd2aaf25d42053f58e96cb66bd726c717b1b6b7161940e24__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5075,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5107,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5139,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5171,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5198,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5215,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5301,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5353,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5371,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 5383,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5427,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5459,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$117_to_t_address": {
									"entryPoint": 5469,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC721_$233_to_t_address": {
									"entryPoint": 5487,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_INFTGame_$258_to_t_address": {
									"entryPoint": 5505,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 5523,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 5541,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5559,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 5606,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 5611,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 5616,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 5621,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5626,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_0a9d0ecd49bee278668e19f1af22fe4be1e214161373796d5a2b94d737799b7b": {
									"entryPoint": 5631,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_16c777a58f6e3d980b39cb8f48eb79a80df895169ab129c60d82e2c36ce3881f": {
									"entryPoint": 5672,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_65bf7e5ac3f00b13cd2aaf25d42053f58e96cb66bd726c717b1b6b7161940e24": {
									"entryPoint": 5713,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682": {
									"entryPoint": 5754,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 5795,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5836,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 5859,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5882,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:14974:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:5",
														"type": ""
													}
												],
												"src": "7:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "215:80:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "225:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "240:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "234:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "234:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "225:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "283:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "256:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "256:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "256:33:5"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "193:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "201:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "209:5:5",
														"type": ""
													}
												],
												"src": "152:143:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "361:77:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "371:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "386:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "380:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "380:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "371:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "426:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "402:23:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "402:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "402:30:5"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "339:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "347:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "355:5:5",
														"type": ""
													}
												],
												"src": "301:137:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "531:478:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "580:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "582:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "582:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "582:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "559:6:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "567:4:5",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "555:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "555:17:5"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "574:3:5"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "551:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "551:27:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:35:5"
															},
															"nodeType": "YulIf",
															"src": "541:122:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "672:30:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "695:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "682:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "682:20:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "672:6:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "745:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nodeType": "YulIdentifier",
																				"src": "747:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "747:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "747:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "717:6:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "725:18:5",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "714:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "714:30:5"
															},
															"nodeType": "YulIf",
															"src": "711:117:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "837:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "853:6:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "861:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "849:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "849:17:5"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nodeType": "YulIdentifier",
																	"src": "837:8:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "920:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "922:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "922:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "922:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nodeType": "YulIdentifier",
																				"src": "885:8:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "899:6:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "907:4:5",
																						"type": "",
																						"value": "0x01"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "895:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "895:17:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "881:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "881:32:5"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "915:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "878:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "878:41:5"
															},
															"nodeType": "YulIf",
															"src": "875:128:5"
														}
													]
												},
												"name": "abi_decode_t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "498:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "506:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nodeType": "YulTypedName",
														"src": "514:8:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "524:6:5",
														"type": ""
													}
												],
												"src": "457:552:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1067:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1077:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1099:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1086:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1086:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1077:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1142:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1115:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1115:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1115:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1045:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1053:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1061:5:5",
														"type": ""
													}
												],
												"src": "1015:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1223:80:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1233:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1248:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1242:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1242:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1233:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1291:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1264:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1264:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1264:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1201:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1209:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1217:5:5",
														"type": ""
													}
												],
												"src": "1160:143:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1386:274:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1432:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1434:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1434:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1434:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1407:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1416:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1403:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1403:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1428:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1399:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1399:32:5"
															},
															"nodeType": "YulIf",
															"src": "1396:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "1525:128:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1540:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1554:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1544:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1569:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1615:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1626:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1611:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1611:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1635:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1579:31:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1579:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1569:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1356:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1367:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1379:6:5",
														"type": ""
													}
												],
												"src": "1309:351:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1819:956:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1866:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1868:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1868:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1868:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1840:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1849:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1836:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1836:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1861:3:5",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1832:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1832:33:5"
															},
															"nodeType": "YulIf",
															"src": "1829:120:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "1959:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1974:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1988:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1978:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2003:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2038:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2049:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2034:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2034:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2058:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2013:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2013:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2003:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2086:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2101:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2115:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2105:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2131:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2166:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2177:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2162:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2162:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2186:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2141:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2141:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2131:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2214:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2229:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2243:2:5",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2233:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2259:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2294:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2305:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2290:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2290:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2314:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2269:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2269:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "2259:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2342:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2357:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2371:2:5",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2361:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2387:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2422:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2433:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2418:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2418:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2442:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2397:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2397:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "2387:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2470:298:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2485:47:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2516:9:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2527:3:5",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2512:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2512:19:5"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "2499:12:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2499:33:5"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2489:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2579:83:5",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "2581:77:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2581:79:5"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2581:79:5"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2551:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2559:18:5",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2548:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2548:30:5"
																	},
																	"nodeType": "YulIf",
																	"src": "2545:117:5"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2676:82:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2730:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2741:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2726:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2726:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2750:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_calldata_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "2694:31:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2694:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "2676:6:5"
																		},
																		{
																			"name": "value5",
																			"nodeType": "YulIdentifier",
																			"src": "2684:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1749:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1760:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1772:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1780:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1788:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1796:6:5",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "1804:6:5",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "1812:6:5",
														"type": ""
													}
												],
												"src": "1666:1109:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2855:271:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2901:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2903:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2903:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2903:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2876:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2885:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2872:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2872:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2897:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2868:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2868:32:5"
															},
															"nodeType": "YulIf",
															"src": "2865:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "2994:125:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3009:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3023:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3013:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3038:71:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3081:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3092:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3077:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3077:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3101:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3048:28:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3048:61:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3038:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2825:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2836:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2848:6:5",
														"type": ""
													}
												],
												"src": "2781:345:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3198:263:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3244:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3246:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3246:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3246:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3219:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3228:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3215:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3215:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3240:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3211:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3211:32:5"
															},
															"nodeType": "YulIf",
															"src": "3208:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "3337:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3352:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3366:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3356:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3381:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3416:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3427:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3412:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3412:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3436:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3391:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3391:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3381:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3168:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3179:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3191:6:5",
														"type": ""
													}
												],
												"src": "3132:329:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3544:274:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3590:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3592:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3592:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3592:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3565:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3574:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3561:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3561:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3586:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3557:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3557:32:5"
															},
															"nodeType": "YulIf",
															"src": "3554:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "3683:128:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3698:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3712:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3702:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3727:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3773:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3784:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3769:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3769:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3793:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3737:31:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3737:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3727:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3514:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3525:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3537:6:5",
														"type": ""
													}
												],
												"src": "3467:351:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3889:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3906:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3929:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3911:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3911:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3899:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3899:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3899:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3877:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3884:3:5",
														"type": ""
													}
												],
												"src": "3824:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4011:52:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4028:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4050:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "4033:16:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4033:23:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4021:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4021:36:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4021:36:5"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3999:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4006:3:5",
														"type": ""
													}
												],
												"src": "3948:115:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4148:80:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4165:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4215:5:5"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$117_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4170:44:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4170:51:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4158:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4158:64:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4158:64:5"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$117_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4136:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4143:3:5",
														"type": ""
													}
												],
												"src": "4069:159:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4314:81:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4331:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4382:5:5"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC721_$233_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4336:45:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4336:52:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4324:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4324:65:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4324:65:5"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC721_$233_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4302:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4309:3:5",
														"type": ""
													}
												],
												"src": "4234:161:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4482:82:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4499:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4551:5:5"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_INFTGame_$258_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4504:46:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4504:53:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4492:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4492:66:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4492:66:5"
														}
													]
												},
												"name": "abi_encode_t_contract$_INFTGame_$258_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4470:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4477:3:5",
														"type": ""
													}
												],
												"src": "4401:163:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4716:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4726:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4792:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4797:2:5",
																		"type": "",
																		"value": "10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4733:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4733:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4726:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4898:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0a9d0ecd49bee278668e19f1af22fe4be1e214161373796d5a2b94d737799b7b",
																	"nodeType": "YulIdentifier",
																	"src": "4809:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4809:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4809:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4911:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4922:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4927:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4918:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4918:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4911:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0a9d0ecd49bee278668e19f1af22fe4be1e214161373796d5a2b94d737799b7b_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4704:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4712:3:5",
														"type": ""
													}
												],
												"src": "4570:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5088:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5098:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5164:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5169:2:5",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5105:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5105:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5098:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5270:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_16c777a58f6e3d980b39cb8f48eb79a80df895169ab129c60d82e2c36ce3881f",
																	"nodeType": "YulIdentifier",
																	"src": "5181:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5181:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5181:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5283:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5294:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5299:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5290:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5290:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5283:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_16c777a58f6e3d980b39cb8f48eb79a80df895169ab129c60d82e2c36ce3881f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5076:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5084:3:5",
														"type": ""
													}
												],
												"src": "4942:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5460:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5470:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5536:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5541:2:5",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5477:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5477:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5470:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5642:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_65bf7e5ac3f00b13cd2aaf25d42053f58e96cb66bd726c717b1b6b7161940e24",
																	"nodeType": "YulIdentifier",
																	"src": "5553:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5553:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5553:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5655:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5666:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5671:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5662:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5662:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5655:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_65bf7e5ac3f00b13cd2aaf25d42053f58e96cb66bd726c717b1b6b7161940e24_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5448:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5456:3:5",
														"type": ""
													}
												],
												"src": "5314:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5832:219:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5842:73:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5908:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5913:1:5",
																		"type": "",
																		"value": "9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5849:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5849:66:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5842:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6013:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682",
																	"nodeType": "YulIdentifier",
																	"src": "5924:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5924:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5924:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6026:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6037:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6042:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6033:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6033:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6026:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5820:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5828:3:5",
														"type": ""
													}
												],
												"src": "5686:365:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6203:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6213:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6279:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6284:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6220:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6220:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6213:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6385:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nodeType": "YulIdentifier",
																	"src": "6296:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6296:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6296:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6398:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6409:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6414:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6405:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6405:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6398:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6191:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6199:3:5",
														"type": ""
													}
												],
												"src": "6057:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6494:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6511:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6534:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6516:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6516:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6504:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6504:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6504:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6482:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6489:3:5",
														"type": ""
													}
												],
												"src": "6429:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6651:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6661:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6673:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6684:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6669:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6669:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6661:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6741:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6754:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6765:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6750:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6750:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6697:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6697:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6697:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6623:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6635:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6646:4:5",
														"type": ""
													}
												],
												"src": "6553:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6935:288:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6945:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6957:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6968:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6953:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6953:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6945:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7025:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7038:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7049:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7034:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7034:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6981:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6981:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6981:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7106:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7119:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7130:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7115:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7115:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7062:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7062:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7062:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "7188:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7201:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7212:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7197:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7197:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7144:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7144:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7144:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6891:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6903:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6911:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6919:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6930:4:5",
														"type": ""
													}
												],
												"src": "6781:442:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7355:206:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7365:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7377:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7388:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7373:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7373:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7365:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7445:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7458:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7469:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7454:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7454:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7401:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7401:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7401:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7526:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7539:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7550:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7535:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7535:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7482:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7482:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7482:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7319:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7331:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7339:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7350:4:5",
														"type": ""
													}
												],
												"src": "7229:332:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7663:122:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7673:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7685:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7696:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7681:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7681:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7673:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7751:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7764:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7775:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7760:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7760:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7709:41:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7709:69:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7709:69:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7635:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7647:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7658:4:5",
														"type": ""
													}
												],
												"src": "7567:218:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7903:138:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7913:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7925:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7936:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7921:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7921:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7913:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8007:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8020:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8031:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8016:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8016:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$117_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7949:57:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7949:85:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7949:85:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$117__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7875:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7887:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7898:4:5",
														"type": ""
													}
												],
												"src": "7791:250:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8160:139:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8170:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8182:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8193:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8178:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8178:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8170:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8265:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8278:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8289:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8274:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8274:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC721_$233_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8206:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8206:86:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8206:86:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC721_$233__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8132:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8144:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8155:4:5",
														"type": ""
													}
												],
												"src": "8047:252:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8419:140:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8429:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8441:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8452:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8437:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8437:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8429:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8525:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8538:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8549:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8534:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8534:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_INFTGame_$258_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8465:59:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8465:87:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8465:87:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_INFTGame_$258__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8391:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8403:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8414:4:5",
														"type": ""
													}
												],
												"src": "8305:254:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8736:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8746:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8758:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8769:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8754:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8754:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8746:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8793:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8804:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8789:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8789:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8812:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8818:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8808:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8808:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8782:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8782:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8782:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8838:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8972:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0a9d0ecd49bee278668e19f1af22fe4be1e214161373796d5a2b94d737799b7b_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8846:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8846:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8838:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0a9d0ecd49bee278668e19f1af22fe4be1e214161373796d5a2b94d737799b7b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8716:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8731:4:5",
														"type": ""
													}
												],
												"src": "8565:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9161:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9171:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9183:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9194:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9179:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9179:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9171:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9218:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9229:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9214:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9214:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9237:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9243:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9233:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9233:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9207:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9207:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9207:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9263:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9397:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_16c777a58f6e3d980b39cb8f48eb79a80df895169ab129c60d82e2c36ce3881f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9271:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9271:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9263:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_16c777a58f6e3d980b39cb8f48eb79a80df895169ab129c60d82e2c36ce3881f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9141:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9156:4:5",
														"type": ""
													}
												],
												"src": "8990:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9586:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9596:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9608:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9619:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9604:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9604:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9596:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9643:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9654:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9639:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9639:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9662:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9668:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9658:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9658:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9632:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9632:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9632:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9688:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9822:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_65bf7e5ac3f00b13cd2aaf25d42053f58e96cb66bd726c717b1b6b7161940e24_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9696:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9696:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9688:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_65bf7e5ac3f00b13cd2aaf25d42053f58e96cb66bd726c717b1b6b7161940e24__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9566:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9581:4:5",
														"type": ""
													}
												],
												"src": "9415:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10011:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10021:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10033:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10044:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10029:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10029:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10021:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10068:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10079:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10064:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10064:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10087:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10093:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10083:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10083:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10057:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10057:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10057:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10113:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10247:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10121:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10121:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10113:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9991:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10006:4:5",
														"type": ""
													}
												],
												"src": "9840:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10436:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10446:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10458:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10469:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10454:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10454:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10446:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10493:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10504:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10489:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10489:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10512:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10518:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10508:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10508:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10482:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10482:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10482:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10538:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10672:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10546:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10546:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10538:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10416:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10431:4:5",
														"type": ""
													}
												],
												"src": "10265:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10788:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10798:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10810:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10821:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10806:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10806:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10798:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10878:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10891:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10902:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10887:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10887:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10834:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10834:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10834:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10760:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10772:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10783:4:5",
														"type": ""
													}
												],
												"src": "10690:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10958:35:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10968:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10984:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10978:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10978:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "10968:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10951:6:5",
														"type": ""
													}
												],
												"src": "10918:75:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11095:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11112:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11117:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11105:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11105:19:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11105:19:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11133:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11152:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11157:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11148:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11148:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "11133:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11067:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11072:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "11083:11:5",
														"type": ""
													}
												],
												"src": "10999:169:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11218:261:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11228:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11251:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11233:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11233:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "11228:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11262:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11285:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11267:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11267:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "11262:1:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11425:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11427:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11427:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11427:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11346:1:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11353:66:5",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "11421:1:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11349:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11349:74:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11343:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11343:81:5"
															},
															"nodeType": "YulIf",
															"src": "11340:107:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11457:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11468:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11471:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11464:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11464:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "11457:3:5"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11205:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11208:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "11214:3:5",
														"type": ""
													}
												],
												"src": "11174:305:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11530:146:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11540:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11563:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11545:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11545:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "11540:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11574:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11597:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11579:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11579:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "11574:1:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11621:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11623:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11623:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11623:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11615:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11618:1:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "11612:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11612:8:5"
															},
															"nodeType": "YulIf",
															"src": "11609:34:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11653:17:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11665:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11668:1:5"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "11661:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11661:9:5"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "11653:4:5"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11516:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11519:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "11525:4:5",
														"type": ""
													}
												],
												"src": "11485:191:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11727:51:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11737:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11766:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "11748:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11748:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11737:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11709:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11719:7:5",
														"type": ""
													}
												],
												"src": "11682:96:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11826:48:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11836:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11861:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "11854:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11854:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11847:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11847:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11836:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11808:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11818:7:5",
														"type": ""
													}
												],
												"src": "11784:90:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11924:105:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11934:89:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11949:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11956:66:5",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11945:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11945:78:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11934:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11906:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11916:7:5",
														"type": ""
													}
												],
												"src": "11880:149:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12080:81:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12090:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12105:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12112:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12101:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12101:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "12090:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12062:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "12072:7:5",
														"type": ""
													}
												],
												"src": "12035:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12212:32:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12222:16:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "12233:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "12222:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12194:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "12204:7:5",
														"type": ""
													}
												],
												"src": "12167:77:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12324:66:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12334:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12378:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "12347:30:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12347:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "12334:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$117_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12304:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "12314:9:5",
														"type": ""
													}
												],
												"src": "12250:140:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12471:66:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12481:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12525:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "12494:30:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12494:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "12481:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC721_$233_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12451:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "12461:9:5",
														"type": ""
													}
												],
												"src": "12396:141:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12619:66:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12629:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12673:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "12642:30:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12642:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "12629:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_INFTGame_$258_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12599:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "12609:9:5",
														"type": ""
													}
												],
												"src": "12543:142:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12751:66:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12761:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12805:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "12774:30:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12774:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "12761:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12731:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "12741:9:5",
														"type": ""
													}
												],
												"src": "12691:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12883:53:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12893:37:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12924:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "12906:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12906:24:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "12893:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12863:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "12873:9:5",
														"type": ""
													}
												],
												"src": "12823:113:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12970:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12987:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12990:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12980:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12980:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12980:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13084:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13087:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13077:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13077:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13077:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13108:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13111:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13101:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13101:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13101:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "12942:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13217:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13234:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13237:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13227:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13227:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13227:12:5"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nodeType": "YulFunctionDefinition",
												"src": "13128:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13340:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13357:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13360:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13350:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13350:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13350:12:5"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "13251:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13463:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13480:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13483:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13473:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13473:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13473:12:5"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "13374:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13586:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13603:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13606:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13596:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13596:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13596:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "13497:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13709:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13726:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13729:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13719:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13719:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13719:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "13620:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13849:54:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13871:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13879:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13867:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13867:14:5"
																	},
																	{
																		"hexValue": "4e6f74207374616b6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13883:12:5",
																		"type": "",
																		"value": "Not staked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13860:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13860:36:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13860:36:5"
														}
													]
												},
												"name": "store_literal_in_memory_0a9d0ecd49bee278668e19f1af22fe4be1e214161373796d5a2b94d737799b7b",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13841:6:5",
														"type": ""
													}
												],
												"src": "13743:160:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14015:57:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14037:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14045:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14033:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14033:14:5"
																	},
																	{
																		"hexValue": "5472616e73666572206661696c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14049:15:5",
																		"type": "",
																		"value": "Transfer fail"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14026:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14026:39:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14026:39:5"
														}
													]
												},
												"name": "store_literal_in_memory_16c777a58f6e3d980b39cb8f48eb79a80df895169ab129c60d82e2c36ce3881f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14007:6:5",
														"type": ""
													}
												],
												"src": "13909:163:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14184:57:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14206:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14214:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14202:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14202:14:5"
																	},
																	{
																		"hexValue": "4e6f74207265616c4f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14218:15:5",
																		"type": "",
																		"value": "Not realOwner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14195:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14195:39:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14195:39:5"
														}
													]
												},
												"name": "store_literal_in_memory_65bf7e5ac3f00b13cd2aaf25d42053f58e96cb66bd726c717b1b6b7161940e24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14176:6:5",
														"type": ""
													}
												],
												"src": "14078:163:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14353:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14375:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14383:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14371:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14371:14:5"
																	},
																	{
																		"hexValue": "4e6f74206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14387:11:5",
																		"type": "",
																		"value": "Not owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14364:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14364:35:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14364:35:5"
														}
													]
												},
												"name": "store_literal_in_memory_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14345:6:5",
														"type": ""
													}
												],
												"src": "14247:159:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14518:75:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14540:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14548:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14536:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14536:14:5"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14552:33:5",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14529:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14529:57:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14529:57:5"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14510:6:5",
														"type": ""
													}
												],
												"src": "14412:181:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14642:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14699:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14708:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14711:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14701:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14701:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14701:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14665:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "14690:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "14672:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14672:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "14662:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14662:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14655:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14655:43:5"
															},
															"nodeType": "YulIf",
															"src": "14652:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14635:5:5",
														"type": ""
													}
												],
												"src": "14599:122:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14767:76:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14821:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14830:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14833:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14823:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14823:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14823:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14790:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "14812:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "14797:14:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14797:21:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "14787:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14787:32:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14780:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14780:40:5"
															},
															"nodeType": "YulIf",
															"src": "14777:60:5"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14760:5:5",
														"type": ""
													}
												],
												"src": "14727:116:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14892:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14949:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14958:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14961:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14951:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14951:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14951:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14915:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "14940:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "14922:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14922:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "14912:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14912:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14905:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14905:43:5"
															},
															"nodeType": "YulIf",
															"src": "14902:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14885:5:5",
														"type": ""
													}
												],
												"src": "14849:122:5"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4, value5 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_t_contract$_IERC20_$117_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$117_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IERC721_$233_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC721_$233_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_INFTGame_$258_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_INFTGame_$258_to_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_0a9d0ecd49bee278668e19f1af22fe4be1e214161373796d5a2b94d737799b7b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 10)\n        store_literal_in_memory_0a9d0ecd49bee278668e19f1af22fe4be1e214161373796d5a2b94d737799b7b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_16c777a58f6e3d980b39cb8f48eb79a80df895169ab129c60d82e2c36ce3881f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_16c777a58f6e3d980b39cb8f48eb79a80df895169ab129c60d82e2c36ce3881f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_65bf7e5ac3f00b13cd2aaf25d42053f58e96cb66bd726c717b1b6b7161940e24_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_65bf7e5ac3f00b13cd2aaf25d42053f58e96cb66bd726c717b1b6b7161940e24(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 9)\n        store_literal_in_memory_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$117__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$117_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC721_$233__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC721_$233_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_INFTGame_$258__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_INFTGame_$258_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_0a9d0ecd49bee278668e19f1af22fe4be1e214161373796d5a2b94d737799b7b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0a9d0ecd49bee278668e19f1af22fe4be1e214161373796d5a2b94d737799b7b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_16c777a58f6e3d980b39cb8f48eb79a80df895169ab129c60d82e2c36ce3881f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_16c777a58f6e3d980b39cb8f48eb79a80df895169ab129c60d82e2c36ce3881f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_65bf7e5ac3f00b13cd2aaf25d42053f58e96cb66bd726c717b1b6b7161940e24__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_65bf7e5ac3f00b13cd2aaf25d42053f58e96cb66bd726c717b1b6b7161940e24_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_IERC20_$117_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_contract$_IERC721_$233_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_contract$_INFTGame_$258_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_0a9d0ecd49bee278668e19f1af22fe4be1e214161373796d5a2b94d737799b7b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not staked\")\n\n    }\n\n    function store_literal_in_memory_16c777a58f6e3d980b39cb8f48eb79a80df895169ab129c60d82e2c36ce3881f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer fail\")\n\n    }\n\n    function store_literal_in_memory_65bf7e5ac3f00b13cd2aaf25d42053f58e96cb66bd726c717b1b6b7161940e24(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not realOwner\")\n\n    }\n\n    function store_literal_in_memory_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not owner\")\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061009e5760003560e01c80637636e245116100665780637636e2451461014557806380a5400114610175578063a694fc3a14610193578063b8e33fb2146101af578063fead3d6e146101cd5761009e565b80630eeadd30146100a35780632e17de78146100bf578063379607f5146100db57806353eebc6d146100f757806366bb863b14610127575b600080fd5b6100bd60048036038101906100b89190611149565b6101eb565b005b6100d960048036038101906100d49190611149565b6102b5565b005b6100f560048036038101906100f09190611149565b61082a565b005b610111600480360381019061010c9190611149565b610c3d565b60405161011e9190611433565b60405180910390f35b61012f610c5d565b60405161013c91906112ac565b60405180910390f35b61015f600480360381019061015a9190611082565b610c83565b60405161016c9190611327565b60405180910390f35b61017d610cb2565b60405161018a9190611342565b60405180910390f35b6101ad60048036038101906101a89190611149565b610cd8565b005b6101b7610f4a565b6040516101c4919061135d565b60405180910390f35b6101d5610f70565b6040516101e29190611378565b60405180910390f35b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a0c4442d826040518263ffffffff1660e01b81526004016102469190611433565b602060405180830381600087803b15801561026057600080fd5b505af1158015610274573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102989190611176565b600560008381526020019081526020016000206001018190555050565b3073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e836040518263ffffffff1660e01b81526004016103279190611433565b60206040518083038186803b15801561033f57600080fd5b505afa158015610353573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103779190611055565b73ffffffffffffffffffffffffffffffffffffffff16146103cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c490611393565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166005600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610471576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610468906113d3565b60405180910390fd5b60006005600083815260200190815260200160002060010154600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a0c4442d846040518263ffffffff1660e01b81526004016104e59190611433565b602060405180830381600087803b1580156104ff57600080fd5b505af1158015610513573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105379190611176565b61054191906114b5565b60056000848152602001908152602001600020600201544261056391906114b5565b61056d919061145f565b90506000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a0c4442d846040518263ffffffff1660e01b81526004016105cc9190611433565b602060405180830381600087803b1580156105e657600080fd5b505af11580156105fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061e9190611176565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b815260040161067d9291906112fe565b602060405180830381600087803b15801561069757600080fd5b505af11580156106ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106cf919061111c565b1561073e5742600560008581526020019081526020016000206002018190555060056000848152602001908152602001600020600101548161071191906114b5565b600560008581526020019081526020016000206001016000828254610736919061145f565b925050819055505b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3033866040518463ffffffff1660e01b815260040161079d939291906112c7565b600060405180830381600087803b1580156107b757600080fd5b505af11580156107cb573d6000803e3d6000fd5b5050505060006005600085815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b60026000541415610870576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086790611413565b60405180910390fd5b6002600081905550600060056000838152602001908152602001600020600201541161089b57600080fd5b3373ffffffffffffffffffffffffffffffffffffffff166005600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461090957600080fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a0c4442d826040518263ffffffff1660e01b81526004016109649190611433565b602060405180830381600087803b15801561097e57600080fd5b505af1158015610992573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b69190611176565b60056000838152602001908152602001600020600101819055506000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a0c4442d836040518263ffffffff1660e01b8152600401610a2d9190611433565b602060405180830381600087803b158015610a4757600080fd5b505af1158015610a5b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7f9190611176565b90506000600560008481526020019081526020016000206001015482610aa591906114b5565b600560008581526020019081526020016000206002015442610ac791906114b5565b610ad1919061145f565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610b309291906112fe565b602060405180830381600087803b158015610b4a57600080fd5b505af1158015610b5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b82919061111c565b15610bf557426005600085815260200190815260200160002060020181905550600560008481526020019081526020016000206001015482610bc491906114b5565b600560008581526020019081526020016000206001016000828254610be9919061145f565b92505081905550610c30565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c27906113b3565b60405180910390fd5b5050600160008190555050565b600060056000838152602001908152602001600020600101549050919050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60007f7636e24523a394e051c4f3b1d9065be73f6b416813ba53a99b779354a5822c5890509695505050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026000541415610d1e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d1590611413565b60405180910390fd5b60026000819055503373ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e836040518263ffffffff1660e01b8152600401610d989190611433565b60206040518083038186803b158015610db057600080fd5b505afa158015610dc4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610de89190611055565b73ffffffffffffffffffffffffffffffffffffffff1614610e3e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e35906113f3565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610e9d939291906112c7565b600060405180830381600087803b158015610eb757600080fd5b505af1158015610ecb573d6000803e3d6000fd5b50505050336005600083815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550426005600083815260200190815260200160002060020181905550600160008190555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600081359050610fa5816116cc565b92915050565b600081519050610fba816116cc565b92915050565b600081519050610fcf816116e3565b92915050565b60008083601f840112610feb57610fea6115eb565b5b8235905067ffffffffffffffff811115611008576110076115e6565b5b602083019150836001820283011115611024576110236115f0565b5b9250929050565b60008135905061103a816116fa565b92915050565b60008151905061104f816116fa565b92915050565b60006020828403121561106b5761106a6115fa565b5b600061107984828501610fab565b91505092915050565b60008060008060008060a0878903121561109f5761109e6115fa565b5b60006110ad89828a01610f96565b96505060206110be89828a01610f96565b95505060406110cf89828a0161102b565b94505060606110e089828a0161102b565b935050608087013567ffffffffffffffff811115611101576111006115f5565b5b61110d89828a01610fd5565b92509250509295509295509295565b600060208284031215611132576111316115fa565b5b600061114084828501610fc0565b91505092915050565b60006020828403121561115f5761115e6115fa565b5b600061116d8482850161102b565b91505092915050565b60006020828403121561118c5761118b6115fa565b5b600061119a84828501611040565b91505092915050565b6111ac816114e9565b82525050565b6111bb81611507565b82525050565b6111ca8161155d565b82525050565b6111d98161156f565b82525050565b6111e881611581565b82525050565b60006111fb600a8361144e565b9150611206826115ff565b602082019050919050565b600061121e600d8361144e565b915061122982611628565b602082019050919050565b6000611241600d8361144e565b915061124c82611651565b602082019050919050565b600061126460098361144e565b915061126f8261167a565b602082019050919050565b6000611287601f8361144e565b9150611292826116a3565b602082019050919050565b6112a681611553565b82525050565b60006020820190506112c160008301846111a3565b92915050565b60006060820190506112dc60008301866111a3565b6112e960208301856111a3565b6112f6604083018461129d565b949350505050565b600060408201905061131360008301856111a3565b611320602083018461129d565b9392505050565b600060208201905061133c60008301846111b2565b92915050565b600060208201905061135760008301846111c1565b92915050565b600060208201905061137260008301846111d0565b92915050565b600060208201905061138d60008301846111df565b92915050565b600060208201905081810360008301526113ac816111ee565b9050919050565b600060208201905081810360008301526113cc81611211565b9050919050565b600060208201905081810360008301526113ec81611234565b9050919050565b6000602082019050818103600083015261140c81611257565b9050919050565b6000602082019050818103600083015261142c8161127a565b9050919050565b6000602082019050611448600083018461129d565b92915050565b600082825260208201905092915050565b600061146a82611553565b915061147583611553565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156114aa576114a96115b7565b5b828201905092915050565b60006114c082611553565b91506114cb83611553565b9250828210156114de576114dd6115b7565b5b828203905092915050565b60006114f482611533565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061156882611593565b9050919050565b600061157a82611593565b9050919050565b600061158c82611593565b9050919050565b600061159e826115a5565b9050919050565b60006115b082611533565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b7f4e6f74207374616b656400000000000000000000000000000000000000000000600082015250565b7f5472616e73666572206661696c00000000000000000000000000000000000000600082015250565b7f4e6f74207265616c4f776e657200000000000000000000000000000000000000600082015250565b7f4e6f74206f776e65720000000000000000000000000000000000000000000000600082015250565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6116d5816114e9565b81146116e057600080fd5b50565b6116ec816114fb565b81146116f757600080fd5b50565b61170381611553565b811461170e57600080fd5b5056fea26469706673582212207d31ddd157335a93ddcb01bf6b5bd90c2799207d0cb817e76dba5bc24a4668ab64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7636E245 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x7636E245 EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0x80A54001 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0xB8E33FB2 EQ PUSH2 0x1AF JUMPI DUP1 PUSH4 0xFEAD3D6E EQ PUSH2 0x1CD JUMPI PUSH2 0x9E JUMP JUMPDEST DUP1 PUSH4 0xEEADD30 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x2E17DE78 EQ PUSH2 0xBF JUMPI DUP1 PUSH4 0x379607F5 EQ PUSH2 0xDB JUMPI DUP1 PUSH4 0x53EEBC6D EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x66BB863B EQ PUSH2 0x127 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0x1149 JUMP JUMPDEST PUSH2 0x1EB JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD4 SWAP2 SWAP1 PUSH2 0x1149 JUMP JUMPDEST PUSH2 0x2B5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF0 SWAP2 SWAP1 PUSH2 0x1149 JUMP JUMPDEST PUSH2 0x82A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x111 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10C SWAP2 SWAP1 PUSH2 0x1149 JUMP JUMPDEST PUSH2 0xC3D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11E SWAP2 SWAP1 PUSH2 0x1433 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12F PUSH2 0xC5D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x12AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15A SWAP2 SWAP1 PUSH2 0x1082 JUMP JUMPDEST PUSH2 0xC83 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x1327 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH2 0xCB2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x1342 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x1149 JUMP JUMPDEST PUSH2 0xCD8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B7 PUSH2 0xF4A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0x135D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D5 PUSH2 0xF70 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0x1378 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA0C4442D DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x246 SWAP2 SWAP1 PUSH2 0x1433 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x260 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x274 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x1176 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x327 SWAP2 SWAP1 PUSH2 0x1433 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x33F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x353 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x377 SWAP2 SWAP1 PUSH2 0x1055 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C4 SWAP1 PUSH2 0x1393 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x471 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x468 SWAP1 PUSH2 0x13D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA0C4442D DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E5 SWAP2 SWAP1 PUSH2 0x1433 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x513 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x537 SWAP2 SWAP1 PUSH2 0x1176 JUMP JUMPDEST PUSH2 0x541 SWAP2 SWAP1 PUSH2 0x14B5 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD TIMESTAMP PUSH2 0x563 SWAP2 SWAP1 PUSH2 0x14B5 JUMP JUMPDEST PUSH2 0x56D SWAP2 SWAP1 PUSH2 0x145F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA0C4442D DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5CC SWAP2 SWAP1 PUSH2 0x1433 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5FA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x61E SWAP2 SWAP1 PUSH2 0x1176 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67D SWAP3 SWAP2 SWAP1 PUSH2 0x12FE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x697 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6AB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6CF SWAP2 SWAP1 PUSH2 0x111C JUMP JUMPDEST ISZERO PUSH2 0x73E JUMPI TIMESTAMP PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 PUSH2 0x711 SWAP2 SWAP1 PUSH2 0x14B5 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x736 SWAP2 SWAP1 PUSH2 0x145F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD ADDRESS CALLER DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x79D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x12C7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7CB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x870 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x867 SWAP1 PUSH2 0x1413 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD GT PUSH2 0x89B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x909 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA0C4442D DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x964 SWAP2 SWAP1 PUSH2 0x1433 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x97E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x992 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9B6 SWAP2 SWAP1 PUSH2 0x1176 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA0C4442D DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA2D SWAP2 SWAP1 PUSH2 0x1433 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA5B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA7F SWAP2 SWAP1 PUSH2 0x1176 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD DUP3 PUSH2 0xAA5 SWAP2 SWAP1 PUSH2 0x14B5 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD TIMESTAMP PUSH2 0xAC7 SWAP2 SWAP1 PUSH2 0x14B5 JUMP JUMPDEST PUSH2 0xAD1 SWAP2 SWAP1 PUSH2 0x145F JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB30 SWAP3 SWAP2 SWAP1 PUSH2 0x12FE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB5E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB82 SWAP2 SWAP1 PUSH2 0x111C JUMP JUMPDEST ISZERO PUSH2 0xBF5 JUMPI TIMESTAMP PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD DUP3 PUSH2 0xBC4 SWAP2 SWAP1 PUSH2 0x14B5 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xBE9 SWAP2 SWAP1 PUSH2 0x145F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xC30 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC27 SWAP1 PUSH2 0x13B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x7636E24523A394E051C4F3B1D9065BE73F6B416813BA53A99B779354A5822C58 SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0xD1E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD15 SWAP1 PUSH2 0x1413 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD98 SWAP2 SWAP1 PUSH2 0x1433 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDC4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDE8 SWAP2 SWAP1 PUSH2 0x1055 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE3E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE35 SWAP1 PUSH2 0x13F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE9D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x12C7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xECB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP CALLER PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFA5 DUP2 PUSH2 0x16CC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xFBA DUP2 PUSH2 0x16CC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xFCF DUP2 PUSH2 0x16E3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xFEB JUMPI PUSH2 0xFEA PUSH2 0x15EB JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1008 JUMPI PUSH2 0x1007 PUSH2 0x15E6 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1024 JUMPI PUSH2 0x1023 PUSH2 0x15F0 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x103A DUP2 PUSH2 0x16FA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x104F DUP2 PUSH2 0x16FA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x106B JUMPI PUSH2 0x106A PUSH2 0x15FA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1079 DUP5 DUP3 DUP6 ADD PUSH2 0xFAB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x109F JUMPI PUSH2 0x109E PUSH2 0x15FA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10AD DUP10 DUP3 DUP11 ADD PUSH2 0xF96 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x10BE DUP10 DUP3 DUP11 ADD PUSH2 0xF96 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x10CF DUP10 DUP3 DUP11 ADD PUSH2 0x102B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x10E0 DUP10 DUP3 DUP11 ADD PUSH2 0x102B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1101 JUMPI PUSH2 0x1100 PUSH2 0x15F5 JUMP JUMPDEST JUMPDEST PUSH2 0x110D DUP10 DUP3 DUP11 ADD PUSH2 0xFD5 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1132 JUMPI PUSH2 0x1131 PUSH2 0x15FA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1140 DUP5 DUP3 DUP6 ADD PUSH2 0xFC0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x115F JUMPI PUSH2 0x115E PUSH2 0x15FA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x116D DUP5 DUP3 DUP6 ADD PUSH2 0x102B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x118C JUMPI PUSH2 0x118B PUSH2 0x15FA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x119A DUP5 DUP3 DUP6 ADD PUSH2 0x1040 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x11AC DUP2 PUSH2 0x14E9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x11BB DUP2 PUSH2 0x1507 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x11CA DUP2 PUSH2 0x155D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x11D9 DUP2 PUSH2 0x156F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x11E8 DUP2 PUSH2 0x1581 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11FB PUSH1 0xA DUP4 PUSH2 0x144E JUMP JUMPDEST SWAP2 POP PUSH2 0x1206 DUP3 PUSH2 0x15FF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x121E PUSH1 0xD DUP4 PUSH2 0x144E JUMP JUMPDEST SWAP2 POP PUSH2 0x1229 DUP3 PUSH2 0x1628 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1241 PUSH1 0xD DUP4 PUSH2 0x144E JUMP JUMPDEST SWAP2 POP PUSH2 0x124C DUP3 PUSH2 0x1651 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1264 PUSH1 0x9 DUP4 PUSH2 0x144E JUMP JUMPDEST SWAP2 POP PUSH2 0x126F DUP3 PUSH2 0x167A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1287 PUSH1 0x1F DUP4 PUSH2 0x144E JUMP JUMPDEST SWAP2 POP PUSH2 0x1292 DUP3 PUSH2 0x16A3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12A6 DUP2 PUSH2 0x1553 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12C1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x11A3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x12DC PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x11A3 JUMP JUMPDEST PUSH2 0x12E9 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x11A3 JUMP JUMPDEST PUSH2 0x12F6 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x129D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1313 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x11A3 JUMP JUMPDEST PUSH2 0x1320 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x129D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x133C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x11B2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1357 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x11C1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1372 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x11D0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x138D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x11DF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x13AC DUP2 PUSH2 0x11EE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x13CC DUP2 PUSH2 0x1211 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x13EC DUP2 PUSH2 0x1234 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x140C DUP2 PUSH2 0x1257 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x142C DUP2 PUSH2 0x127A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1448 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x129D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x146A DUP3 PUSH2 0x1553 JUMP JUMPDEST SWAP2 POP PUSH2 0x1475 DUP4 PUSH2 0x1553 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x14AA JUMPI PUSH2 0x14A9 PUSH2 0x15B7 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14C0 DUP3 PUSH2 0x1553 JUMP JUMPDEST SWAP2 POP PUSH2 0x14CB DUP4 PUSH2 0x1553 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x14DE JUMPI PUSH2 0x14DD PUSH2 0x15B7 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14F4 DUP3 PUSH2 0x1533 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1568 DUP3 PUSH2 0x1593 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x157A DUP3 PUSH2 0x1593 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x158C DUP3 PUSH2 0x1593 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x159E DUP3 PUSH2 0x15A5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15B0 DUP3 PUSH2 0x1533 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E6F74207374616B656400000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C00000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E6F74207265616C4F776E657200000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E6F74206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x16D5 DUP2 PUSH2 0x14E9 JUMP JUMPDEST DUP2 EQ PUSH2 0x16E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x16EC DUP2 PUSH2 0x14FB JUMP JUMPDEST DUP2 EQ PUSH2 0x16F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1703 DUP2 PUSH2 0x1553 JUMP JUMPDEST DUP2 EQ PUSH2 0x170E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH30 0x31DDD157335A93DDCB01BF6B5BD90C2799207D0CB817E76DBA5BC24A4668 0xAB PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "341:3383:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1078:159;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2540:847;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1738:796;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1243:137;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;488:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3415:286;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;384:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1386:340;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;416:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;447:34;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1078:159;1180:18;;;;;;;;;;;:30;;;1211:8;1180:40;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1138:13;:23;1152:8;1138:23;;;;;;;;;;;:39;;:82;;;;1078:159;:::o;2540:847::-;2640:4;2601:44;;:9;;;;;;;;;;;:17;;;2619:8;2601:27;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;;;2593:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;2716:10;2679:47;;:13;:23;2693:8;2679:23;;;;;;;;;;;:33;;;;;;;;;;;;:47;;;2671:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2755:14;2877:13;:23;2891:8;2877:23;;;;;;;;;;;:39;;;2834:18;;;;;;;;;;;:30;;;2865:8;2834:40;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:82;;;;:::i;:::-;2792:13;:23;2806:8;2792:23;;;;;;;;;;;:37;;;2774:15;:55;;;;:::i;:::-;2773:144;;;;:::i;:::-;2755:164;;2931:23;2957:18;;;;;;;;;;;:30;;;2988:8;2957:40;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2931:66;;3012:11;;;;;;;;;;;:20;;;3033:10;3045:6;3012:40;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3008:245;;;3108:15;3068:13;:23;3082:8;3068:23;;;;;;;;;;;:37;;:55;;;;3201:13;:23;3215:8;3201:23;;;;;;;;;;;:39;;;3183:15;:57;;;;:::i;:::-;3139:13;:23;3153:8;3139:23;;;;;;;;;;;:39;;;:102;;;;;;;:::i;:::-;;;;;;;;3008:245;3263:9;;;;;;;;;;;:22;;;3294:4;3301:10;3313:8;3263:59;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3377:1;3333:13;:23;3347:8;3333:23;;;;;;;;;;;:33;;;:46;;;;;;;;;;;;;;;;;;2582:805;;2540:847;:::o;1738:796::-;1744:1:0;2325:7;;:19;;2317:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1744:1;2455:7;:18;;;;1850:1:4::1;1810:13;:23;1824:8;1810:23;;;;;;;;;;;:37;;;:41;1802:51;;;::::0;::::1;;1909:10;1872:47;;:13;:23;1886:8;1872:23;;;;;;;;;;;:33;;;;;;;;;;;;:47;;;1864:56;;;::::0;::::1;;1975:18;;;;;;;;;;;:30;;;2006:8;1975:40;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1933:13;:23;1947:8;1933:23;;;;;;;;;;;:39;;:82;;;;2026:23;2052:18;;;;;;;;;;;:30;;;2083:8;2052:40;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2026:66;;2103:14;2200:13;:23;2214:8;2200:23;;;;;;;;;;;:39;;;2182:15;:57;;;;:::i;:::-;2140:13;:23;2154:8;2140:23;;;;;;;;;;;:37;;;2122:15;:55;;;;:::i;:::-;2121:119;;;;:::i;:::-;2103:139;;2257:11;;;;;;;;;;;:20;;;2278:10;2290:6;2257:40;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2253:273;;;2353:15;2313:13;:23;2327:8;2313:23;;;;;;;;;;;:37;;:55;;;;2445:13;:23;2459:8;2445:23;;;;;;;;;;;:39;;;2427:15;:57;;;;:::i;:::-;2383:13;:23;2397:8;2383:23;;;;;;;;;;;:39;;;:102;;;;;;;:::i;:::-;;;;;;;;2253:273;;;2503:23;;;;;;;;;;:::i;:::-;;;;;;;;2253:273;1791:743;;1701:1:0::0;2628:7;:22;;;;1738:796:4;:::o;1243:137::-;1307:7;1333:13;:23;1347:8;1333:23;;;;;;;;;;;:39;;;1326:46;;1243:137;;;:::o;488:31::-;;;;;;;;;;;;;:::o;3415:286::-;3591:6;3624:68;3610:83;;3415:286;;;;;;;;:::o;384:25::-;;;;;;;;;;;;;:::o;1386:340::-;1744:1:0;2325:7;;:19;;2317:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1744:1;2455:7;:18;;;;1491:10:4::1;1460:41;;:9;;;;;;;;;;;:17;;;1478:8;1460:27;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:41;;;1452:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1536:9;;;;;;;;;;;:22;;;1559:10;1579:4;1586:8;1536:59;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1642:10;1606:13;:23;1620:8;1606:23;;;;;;;;;;;:33;;;:46;;;;;;;;;;;;;;;;;;1703:15;1663:13;:23;1677:8;1663:23;;;;;;;;;;;:37;;:55;;;;1701:1:0::0;2628:7;:22;;;;1386:340:4;:::o;416:24::-;;;;;;;;;;;;;:::o;447:34::-;;;;;;;;;;;;;:::o;7:139:5:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:143::-;209:5;240:6;234:13;225:22;;256:33;283:5;256:33;:::i;:::-;152:143;;;;:::o;301:137::-;355:5;386:6;380:13;371:22;;402:30;426:5;402:30;:::i;:::-;301:137;;;;:::o;457:552::-;514:8;524:6;574:3;567:4;559:6;555:17;551:27;541:122;;582:79;;:::i;:::-;541:122;695:6;682:20;672:30;;725:18;717:6;714:30;711:117;;;747:79;;:::i;:::-;711:117;861:4;853:6;849:17;837:29;;915:3;907:4;899:6;895:17;885:8;881:32;878:41;875:128;;;922:79;;:::i;:::-;875:128;457:552;;;;;:::o;1015:139::-;1061:5;1099:6;1086:20;1077:29;;1115:33;1142:5;1115:33;:::i;:::-;1015:139;;;;:::o;1160:143::-;1217:5;1248:6;1242:13;1233:22;;1264:33;1291:5;1264:33;:::i;:::-;1160:143;;;;:::o;1309:351::-;1379:6;1428:2;1416:9;1407:7;1403:23;1399:32;1396:119;;;1434:79;;:::i;:::-;1396:119;1554:1;1579:64;1635:7;1626:6;1615:9;1611:22;1579:64;:::i;:::-;1569:74;;1525:128;1309:351;;;;:::o;1666:1109::-;1772:6;1780;1788;1796;1804;1812;1861:3;1849:9;1840:7;1836:23;1832:33;1829:120;;;1868:79;;:::i;:::-;1829:120;1988:1;2013:53;2058:7;2049:6;2038:9;2034:22;2013:53;:::i;:::-;2003:63;;1959:117;2115:2;2141:53;2186:7;2177:6;2166:9;2162:22;2141:53;:::i;:::-;2131:63;;2086:118;2243:2;2269:53;2314:7;2305:6;2294:9;2290:22;2269:53;:::i;:::-;2259:63;;2214:118;2371:2;2397:53;2442:7;2433:6;2422:9;2418:22;2397:53;:::i;:::-;2387:63;;2342:118;2527:3;2516:9;2512:19;2499:33;2559:18;2551:6;2548:30;2545:117;;;2581:79;;:::i;:::-;2545:117;2694:64;2750:7;2741:6;2730:9;2726:22;2694:64;:::i;:::-;2676:82;;;;2470:298;1666:1109;;;;;;;;:::o;2781:345::-;2848:6;2897:2;2885:9;2876:7;2872:23;2868:32;2865:119;;;2903:79;;:::i;:::-;2865:119;3023:1;3048:61;3101:7;3092:6;3081:9;3077:22;3048:61;:::i;:::-;3038:71;;2994:125;2781:345;;;;:::o;3132:329::-;3191:6;3240:2;3228:9;3219:7;3215:23;3211:32;3208:119;;;3246:79;;:::i;:::-;3208:119;3366:1;3391:53;3436:7;3427:6;3416:9;3412:22;3391:53;:::i;:::-;3381:63;;3337:117;3132:329;;;;:::o;3467:351::-;3537:6;3586:2;3574:9;3565:7;3561:23;3557:32;3554:119;;;3592:79;;:::i;:::-;3554:119;3712:1;3737:64;3793:7;3784:6;3773:9;3769:22;3737:64;:::i;:::-;3727:74;;3683:128;3467:351;;;;:::o;3824:118::-;3911:24;3929:5;3911:24;:::i;:::-;3906:3;3899:37;3824:118;;:::o;3948:115::-;4033:23;4050:5;4033:23;:::i;:::-;4028:3;4021:36;3948:115;;:::o;4069:159::-;4170:51;4215:5;4170:51;:::i;:::-;4165:3;4158:64;4069:159;;:::o;4234:161::-;4336:52;4382:5;4336:52;:::i;:::-;4331:3;4324:65;4234:161;;:::o;4401:163::-;4504:53;4551:5;4504:53;:::i;:::-;4499:3;4492:66;4401:163;;:::o;4570:366::-;4712:3;4733:67;4797:2;4792:3;4733:67;:::i;:::-;4726:74;;4809:93;4898:3;4809:93;:::i;:::-;4927:2;4922:3;4918:12;4911:19;;4570:366;;;:::o;4942:::-;5084:3;5105:67;5169:2;5164:3;5105:67;:::i;:::-;5098:74;;5181:93;5270:3;5181:93;:::i;:::-;5299:2;5294:3;5290:12;5283:19;;4942:366;;;:::o;5314:::-;5456:3;5477:67;5541:2;5536:3;5477:67;:::i;:::-;5470:74;;5553:93;5642:3;5553:93;:::i;:::-;5671:2;5666:3;5662:12;5655:19;;5314:366;;;:::o;5686:365::-;5828:3;5849:66;5913:1;5908:3;5849:66;:::i;:::-;5842:73;;5924:93;6013:3;5924:93;:::i;:::-;6042:2;6037:3;6033:12;6026:19;;5686:365;;;:::o;6057:366::-;6199:3;6220:67;6284:2;6279:3;6220:67;:::i;:::-;6213:74;;6296:93;6385:3;6296:93;:::i;:::-;6414:2;6409:3;6405:12;6398:19;;6057:366;;;:::o;6429:118::-;6516:24;6534:5;6516:24;:::i;:::-;6511:3;6504:37;6429:118;;:::o;6553:222::-;6646:4;6684:2;6673:9;6669:18;6661:26;;6697:71;6765:1;6754:9;6750:17;6741:6;6697:71;:::i;:::-;6553:222;;;;:::o;6781:442::-;6930:4;6968:2;6957:9;6953:18;6945:26;;6981:71;7049:1;7038:9;7034:17;7025:6;6981:71;:::i;:::-;7062:72;7130:2;7119:9;7115:18;7106:6;7062:72;:::i;:::-;7144;7212:2;7201:9;7197:18;7188:6;7144:72;:::i;:::-;6781:442;;;;;;:::o;7229:332::-;7350:4;7388:2;7377:9;7373:18;7365:26;;7401:71;7469:1;7458:9;7454:17;7445:6;7401:71;:::i;:::-;7482:72;7550:2;7539:9;7535:18;7526:6;7482:72;:::i;:::-;7229:332;;;;;:::o;7567:218::-;7658:4;7696:2;7685:9;7681:18;7673:26;;7709:69;7775:1;7764:9;7760:17;7751:6;7709:69;:::i;:::-;7567:218;;;;:::o;7791:250::-;7898:4;7936:2;7925:9;7921:18;7913:26;;7949:85;8031:1;8020:9;8016:17;8007:6;7949:85;:::i;:::-;7791:250;;;;:::o;8047:252::-;8155:4;8193:2;8182:9;8178:18;8170:26;;8206:86;8289:1;8278:9;8274:17;8265:6;8206:86;:::i;:::-;8047:252;;;;:::o;8305:254::-;8414:4;8452:2;8441:9;8437:18;8429:26;;8465:87;8549:1;8538:9;8534:17;8525:6;8465:87;:::i;:::-;8305:254;;;;:::o;8565:419::-;8731:4;8769:2;8758:9;8754:18;8746:26;;8818:9;8812:4;8808:20;8804:1;8793:9;8789:17;8782:47;8846:131;8972:4;8846:131;:::i;:::-;8838:139;;8565:419;;;:::o;8990:::-;9156:4;9194:2;9183:9;9179:18;9171:26;;9243:9;9237:4;9233:20;9229:1;9218:9;9214:17;9207:47;9271:131;9397:4;9271:131;:::i;:::-;9263:139;;8990:419;;;:::o;9415:::-;9581:4;9619:2;9608:9;9604:18;9596:26;;9668:9;9662:4;9658:20;9654:1;9643:9;9639:17;9632:47;9696:131;9822:4;9696:131;:::i;:::-;9688:139;;9415:419;;;:::o;9840:::-;10006:4;10044:2;10033:9;10029:18;10021:26;;10093:9;10087:4;10083:20;10079:1;10068:9;10064:17;10057:47;10121:131;10247:4;10121:131;:::i;:::-;10113:139;;9840:419;;;:::o;10265:::-;10431:4;10469:2;10458:9;10454:18;10446:26;;10518:9;10512:4;10508:20;10504:1;10493:9;10489:17;10482:47;10546:131;10672:4;10546:131;:::i;:::-;10538:139;;10265:419;;;:::o;10690:222::-;10783:4;10821:2;10810:9;10806:18;10798:26;;10834:71;10902:1;10891:9;10887:17;10878:6;10834:71;:::i;:::-;10690:222;;;;:::o;10999:169::-;11083:11;11117:6;11112:3;11105:19;11157:4;11152:3;11148:14;11133:29;;10999:169;;;;:::o;11174:305::-;11214:3;11233:20;11251:1;11233:20;:::i;:::-;11228:25;;11267:20;11285:1;11267:20;:::i;:::-;11262:25;;11421:1;11353:66;11349:74;11346:1;11343:81;11340:107;;;11427:18;;:::i;:::-;11340:107;11471:1;11468;11464:9;11457:16;;11174:305;;;;:::o;11485:191::-;11525:4;11545:20;11563:1;11545:20;:::i;:::-;11540:25;;11579:20;11597:1;11579:20;:::i;:::-;11574:25;;11618:1;11615;11612:8;11609:34;;;11623:18;;:::i;:::-;11609:34;11668:1;11665;11661:9;11653:17;;11485:191;;;;:::o;11682:96::-;11719:7;11748:24;11766:5;11748:24;:::i;:::-;11737:35;;11682:96;;;:::o;11784:90::-;11818:7;11861:5;11854:13;11847:21;11836:32;;11784:90;;;:::o;11880:149::-;11916:7;11956:66;11949:5;11945:78;11934:89;;11880:149;;;:::o;12035:126::-;12072:7;12112:42;12105:5;12101:54;12090:65;;12035:126;;;:::o;12167:77::-;12204:7;12233:5;12222:16;;12167:77;;;:::o;12250:140::-;12314:9;12347:37;12378:5;12347:37;:::i;:::-;12334:50;;12250:140;;;:::o;12396:141::-;12461:9;12494:37;12525:5;12494:37;:::i;:::-;12481:50;;12396:141;;;:::o;12543:142::-;12609:9;12642:37;12673:5;12642:37;:::i;:::-;12629:50;;12543:142;;;:::o;12691:126::-;12741:9;12774:37;12805:5;12774:37;:::i;:::-;12761:50;;12691:126;;;:::o;12823:113::-;12873:9;12906:24;12924:5;12906:24;:::i;:::-;12893:37;;12823:113;;;:::o;12942:180::-;12990:77;12987:1;12980:88;13087:4;13084:1;13077:15;13111:4;13108:1;13101:15;13128:117;13237:1;13234;13227:12;13251:117;13360:1;13357;13350:12;13374:117;13483:1;13480;13473:12;13497:117;13606:1;13603;13596:12;13620:117;13729:1;13726;13719:12;13743:160;13883:12;13879:1;13871:6;13867:14;13860:36;13743:160;:::o;13909:163::-;14049:15;14045:1;14037:6;14033:14;14026:39;13909:163;:::o;14078:::-;14218:15;14214:1;14206:6;14202:14;14195:39;14078:163;:::o;14247:159::-;14387:11;14383:1;14375:6;14371:14;14364:35;14247:159;:::o;14412:181::-;14552:33;14548:1;14540:6;14536:14;14529:57;14412:181;:::o;14599:122::-;14672:24;14690:5;14672:24;:::i;:::-;14665:5;14662:35;14652:63;;14711:1;14708;14701:12;14652:63;14599:122;:::o;14727:116::-;14797:21;14812:5;14797:21;:::i;:::-;14790:5;14787:32;14777:60;;14833:1;14830;14823:12;14777:60;14727:116;:::o;14849:122::-;14922:24;14940:5;14922:24;:::i;:::-;14915:5;14912:35;14902:63;;14961:1;14958;14951:12;14902:63;14849:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1191800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"claim(uint256)": "infinite",
								"claimedTrophies(uint256)": "infinite",
								"onERC721Received(address,address,uint256,uint256,bytes)": "infinite",
								"parentNFT()": "2666",
								"parentNFTAddress()": "2603",
								"parentNftFunctions()": "2688",
								"parentToken()": "2622",
								"refreshTrophies(uint256)": "infinite",
								"stake(uint256)": "infinite",
								"unstake(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 341,
									"end": 3724,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 341,
									"end": 3724,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 341,
									"end": 3724,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 526,
									"end": 780,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 526,
									"end": 780,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 526,
									"end": 780,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 526,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 526,
									"end": 780,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 526,
									"end": 780,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 780,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 526,
									"end": 780,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 526,
									"end": 780,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 526,
									"end": 780,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 526,
									"end": 780,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 526,
									"end": 780,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 526,
									"end": 780,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 526,
									"end": 780,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 526,
									"end": 780,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 526,
									"end": 780,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 526,
									"end": 780,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 526,
									"end": 780,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 526,
									"end": 780,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 526,
									"end": 780,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 526,
									"end": 780,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 526,
									"end": 780,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 526,
									"end": 780,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 526,
									"end": 780,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 526,
									"end": 780,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 526,
									"end": 780,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 526,
									"end": 780,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 526,
									"end": 780,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 526,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 526,
									"end": 780,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 526,
									"end": 780,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 526,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 526,
									"end": 780,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 526,
									"end": 780,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 526,
									"end": 780,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1701,
									"end": 1702,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1806,
									"end": 1813,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 614,
									"end": 626,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 594,
									"end": 603,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 594,
									"end": 603,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 594,
									"end": 627,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 594,
									"end": 627,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 594,
									"end": 627,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 594,
									"end": 627,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 594,
									"end": 627,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 594,
									"end": 627,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 594,
									"end": 627,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 594,
									"end": 627,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 594,
									"end": 627,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 594,
									"end": 627,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 594,
									"end": 627,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 594,
									"end": 627,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 594,
									"end": 627,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 594,
									"end": 627,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 594,
									"end": 627,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 594,
									"end": 627,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 594,
									"end": 627,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 594,
									"end": 627,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 668,
									"end": 680,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 638,
									"end": 656,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 638,
									"end": 656,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 638,
									"end": 681,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 638,
									"end": 681,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 638,
									"end": 681,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 638,
									"end": 681,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 638,
									"end": 681,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 638,
									"end": 681,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 638,
									"end": 681,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 638,
									"end": 681,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 638,
									"end": 681,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 638,
									"end": 681,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 638,
									"end": 681,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 638,
									"end": 681,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 638,
									"end": 681,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 638,
									"end": 681,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 638,
									"end": 681,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 638,
									"end": 681,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 638,
									"end": 681,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 638,
									"end": 681,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 713,
									"end": 727,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 692,
									"end": 703,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 692,
									"end": 703,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 692,
									"end": 728,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 692,
									"end": 728,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 692,
									"end": 728,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 692,
									"end": 728,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 692,
									"end": 728,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 692,
									"end": 728,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 692,
									"end": 728,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 692,
									"end": 728,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 692,
									"end": 728,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 692,
									"end": 728,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 692,
									"end": 728,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 692,
									"end": 728,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 692,
									"end": 728,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 692,
									"end": 728,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 692,
									"end": 728,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 692,
									"end": 728,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 692,
									"end": 728,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 692,
									"end": 728,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 758,
									"end": 770,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 739,
									"end": 755,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 739,
									"end": 755,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 739,
									"end": 770,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 739,
									"end": 770,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 739,
									"end": 770,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 739,
									"end": 770,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 739,
									"end": 770,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 739,
									"end": 770,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 739,
									"end": 770,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 739,
									"end": 770,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 739,
									"end": 770,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 739,
									"end": 770,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 739,
									"end": 770,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 739,
									"end": 770,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 739,
									"end": 770,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 739,
									"end": 770,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 739,
									"end": 770,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 739,
									"end": 770,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 739,
									"end": 770,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 739,
									"end": 770,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 526,
									"end": 780,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 526,
									"end": 780,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 341,
									"end": 3724,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 341,
									"end": 3724,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 64,
									"end": 69,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 663,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 156,
									"end": 663,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 235,
									"end": 241,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 243,
									"end": 249,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 292,
									"end": 294,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 280,
									"end": 289,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 271,
									"end": 278,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 267,
									"end": 290,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 263,
									"end": 295,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 260,
									"end": 379,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 260,
									"end": 379,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 260,
									"end": 379,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 298,
									"end": 377,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 298,
									"end": 377,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 298,
									"end": 377,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 298,
									"end": 377,
									"name": "tag",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 298,
									"end": 377,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 260,
									"end": 379,
									"name": "tag",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 260,
									"end": 379,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 418,
									"end": 419,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 443,
									"end": 507,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 499,
									"end": 506,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 490,
									"end": 496,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 479,
									"end": 488,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 475,
									"end": 497,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 443,
									"end": 507,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 443,
									"end": 507,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 443,
									"end": 507,
									"name": "tag",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 443,
									"end": 507,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 433,
									"end": 507,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 433,
									"end": 507,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 389,
									"end": 517,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 556,
									"end": 558,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 582,
									"end": 646,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 638,
									"end": 645,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 629,
									"end": 635,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 618,
									"end": 627,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 614,
									"end": 636,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 582,
									"end": 646,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 582,
									"end": 646,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 582,
									"end": 646,
									"name": "tag",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 582,
									"end": 646,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 572,
									"end": 646,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 572,
									"end": 646,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 527,
									"end": 656,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 156,
									"end": 663,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 156,
									"end": 663,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 156,
									"end": 663,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 156,
									"end": 663,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 156,
									"end": 663,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 156,
									"end": 663,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 750,
									"end": 846,
									"name": "tag",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 750,
									"end": 846,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 787,
									"end": 794,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 816,
									"end": 840,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 834,
									"end": 839,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 816,
									"end": 840,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 816,
									"end": 840,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 816,
									"end": 840,
									"name": "tag",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 816,
									"end": 840,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 805,
									"end": 840,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 805,
									"end": 840,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 750,
									"end": 846,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 750,
									"end": 846,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 750,
									"end": 846,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 750,
									"end": 846,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 852,
									"end": 978,
									"name": "tag",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 852,
									"end": 978,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 889,
									"end": 896,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 929,
									"end": 971,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 922,
									"end": 927,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 918,
									"end": 972,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 907,
									"end": 972,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 907,
									"end": 972,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 852,
									"end": 978,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 852,
									"end": 978,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 852,
									"end": 978,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 852,
									"end": 978,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 1107,
									"end": 1224,
									"name": "tag",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 1107,
									"end": 1224,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1216,
									"end": 1217,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1213,
									"end": 1214,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1206,
									"end": 1218,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1230,
									"end": 1352,
									"name": "tag",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 1230,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1303,
									"end": 1327,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 1321,
									"end": 1326,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1303,
									"end": 1327,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 1303,
									"end": 1327,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 1303,
									"end": 1327,
									"name": "tag",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 1303,
									"end": 1327,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1296,
									"end": 1301,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1293,
									"end": 1328,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 1283,
									"end": 1346,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 1283,
									"end": 1346,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1342,
									"end": 1343,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1339,
									"end": 1340,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1332,
									"end": 1344,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1283,
									"end": 1346,
									"name": "tag",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 1283,
									"end": 1346,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1230,
									"end": 1352,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1230,
									"end": 1352,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 341,
									"end": 3724,
									"name": "tag",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 341,
									"end": 3724,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 341,
									"end": 3724,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 341,
									"end": 3724,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 341,
									"end": 3724,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 341,
									"end": 3724,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 341,
									"end": 3724,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 341,
									"end": 3724,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 341,
									"end": 3724,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207d31ddd157335a93ddcb01bf6b5bd90c2799207d0cb817e76dba5bc24a4668ab64736f6c63430008070033",
									".code": [
										{
											"begin": 341,
											"end": 3724,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "PUSH",
											"source": 4,
											"value": "7636E245"
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "PUSH",
											"source": 4,
											"value": "7636E245"
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "PUSH",
											"source": 4,
											"value": "80A54001"
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "PUSH",
											"source": 4,
											"value": "A694FC3A"
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "PUSH",
											"source": 4,
											"value": "B8E33FB2"
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "PUSH",
											"source": 4,
											"value": "FEAD3D6E"
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "PUSH",
											"source": 4,
											"value": "EEADD30"
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "PUSH",
											"source": 4,
											"value": "2E17DE78"
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "PUSH",
											"source": 4,
											"value": "379607F5"
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "PUSH",
											"source": 4,
											"value": "53EEBC6D"
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "PUSH",
											"source": 4,
											"value": "66BB863B"
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3724,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1237,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1078,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1078,
											"end": 1237,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1078,
											"end": 1237,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1237,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1237,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1237,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1237,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1237,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 1078,
											"end": 1237,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1237,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 1078,
											"end": 1237,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1078,
											"end": 1237,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 1078,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 1078,
											"end": 1237,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1078,
											"end": 1237,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1078,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1237,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 2540,
											"end": 3387,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2540,
											"end": 3387,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2540,
											"end": 3387,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 2540,
											"end": 3387,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2540,
											"end": 3387,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2540,
											"end": 3387,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2540,
											"end": 3387,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2540,
											"end": 3387,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2540,
											"end": 3387,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2540,
											"end": 3387,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2540,
											"end": 3387,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 2540,
											"end": 3387,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2540,
											"end": 3387,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2540,
											"end": 3387,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 2540,
											"end": 3387,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2540,
											"end": 3387,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 2540,
											"end": 3387,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2540,
											"end": 3387,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2540,
											"end": 3387,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2540,
											"end": 3387,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 2540,
											"end": 3387,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2540,
											"end": 3387,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 1738,
											"end": 2534,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1738,
											"end": 2534,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1738,
											"end": 2534,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 1738,
											"end": 2534,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1738,
											"end": 2534,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1738,
											"end": 2534,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1738,
											"end": 2534,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1738,
											"end": 2534,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1738,
											"end": 2534,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1738,
											"end": 2534,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1738,
											"end": 2534,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 1738,
											"end": 2534,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1738,
											"end": 2534,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1738,
											"end": 2534,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 1738,
											"end": 2534,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1738,
											"end": 2534,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 1738,
											"end": 2534,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1738,
											"end": 2534,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 1738,
											"end": 2534,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1738,
											"end": 2534,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 1738,
											"end": 2534,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1738,
											"end": 2534,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 1243,
											"end": 1380,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1243,
											"end": 1380,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1243,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1243,
											"end": 1380,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1243,
											"end": 1380,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1243,
											"end": 1380,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1243,
											"end": 1380,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1243,
											"end": 1380,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1243,
											"end": 1380,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1243,
											"end": 1380,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1243,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 1243,
											"end": 1380,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1243,
											"end": 1380,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1243,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 1243,
											"end": 1380,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1243,
											"end": 1380,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 1243,
											"end": 1380,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1243,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 1243,
											"end": 1380,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1243,
											"end": 1380,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1243,
											"end": 1380,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1243,
											"end": 1380,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1243,
											"end": 1380,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1243,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 1243,
											"end": 1380,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1243,
											"end": 1380,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1243,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 1243,
											"end": 1380,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1243,
											"end": 1380,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 1243,
											"end": 1380,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1243,
											"end": 1380,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1243,
											"end": 1380,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1243,
											"end": 1380,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1243,
											"end": 1380,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1243,
											"end": 1380,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1243,
											"end": 1380,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1243,
											"end": 1380,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3415,
											"end": 3701,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 3415,
											"end": 3701,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3415,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 3415,
											"end": 3701,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3415,
											"end": 3701,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3415,
											"end": 3701,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3415,
											"end": 3701,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3415,
											"end": 3701,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3415,
											"end": 3701,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3415,
											"end": 3701,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3415,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 3415,
											"end": 3701,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3415,
											"end": 3701,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3415,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 3415,
											"end": 3701,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3415,
											"end": 3701,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 3415,
											"end": 3701,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3415,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 3415,
											"end": 3701,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3415,
											"end": 3701,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 3415,
											"end": 3701,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3415,
											"end": 3701,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3415,
											"end": 3701,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3415,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 3415,
											"end": 3701,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3415,
											"end": 3701,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3415,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 3415,
											"end": 3701,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3415,
											"end": 3701,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 3415,
											"end": 3701,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3415,
											"end": 3701,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3415,
											"end": 3701,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3415,
											"end": 3701,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3415,
											"end": 3701,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3415,
											"end": 3701,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3415,
											"end": 3701,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3415,
											"end": 3701,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1386,
											"end": 1726,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 1386,
											"end": 1726,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1386,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 1386,
											"end": 1726,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1386,
											"end": 1726,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1386,
											"end": 1726,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1386,
											"end": 1726,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1386,
											"end": 1726,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1386,
											"end": 1726,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1386,
											"end": 1726,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1386,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1386,
											"end": 1726,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1386,
											"end": 1726,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1386,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 1386,
											"end": 1726,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1386,
											"end": 1726,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1386,
											"end": 1726,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1386,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 1386,
											"end": 1726,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1386,
											"end": 1726,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 1386,
											"end": 1726,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1386,
											"end": 1726,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1237,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 1078,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1180,
											"end": 1198,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1180,
											"end": 1198,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1180,
											"end": 1198,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1180,
											"end": 1198,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1180,
											"end": 1198,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1180,
											"end": 1198,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1180,
											"end": 1198,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1180,
											"end": 1198,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1180,
											"end": 1198,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1180,
											"end": 1198,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1180,
											"end": 1198,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1180,
											"end": 1210,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1180,
											"end": 1210,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1180,
											"end": 1210,
											"name": "PUSH",
											"source": 4,
											"value": "A0C4442D"
										},
										{
											"begin": 1211,
											"end": 1219,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1138,
											"end": 1151,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1138,
											"end": 1161,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1152,
											"end": 1160,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1138,
											"end": 1161,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1138,
											"end": 1161,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1138,
											"end": 1161,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1138,
											"end": 1161,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1138,
											"end": 1161,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1138,
											"end": 1161,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1138,
											"end": 1161,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1138,
											"end": 1161,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1138,
											"end": 1161,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1138,
											"end": 1161,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1138,
											"end": 1161,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1138,
											"end": 1177,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1138,
											"end": 1177,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1138,
											"end": 1220,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1138,
											"end": 1220,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1138,
											"end": 1220,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1138,
											"end": 1220,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1237,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1237,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2540,
											"end": 3387,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2540,
											"end": 3387,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2640,
											"end": 2644,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2645,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2601,
											"end": 2645,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2610,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2601,
											"end": 2610,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2601,
											"end": 2610,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2610,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2610,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2610,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2601,
											"end": 2610,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2610,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2610,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2610,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2601,
											"end": 2610,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2618,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2601,
											"end": 2618,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2618,
											"name": "PUSH",
											"source": 4,
											"value": "6352211E"
										},
										{
											"begin": 2619,
											"end": 2627,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 2601,
											"end": 2628,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2645,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2601,
											"end": 2645,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2645,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2593,
											"end": 2660,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 2593,
											"end": 2660,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2593,
											"end": 2660,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2593,
											"end": 2660,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2593,
											"end": 2660,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2593,
											"end": 2660,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2593,
											"end": 2660,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2593,
											"end": 2660,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2593,
											"end": 2660,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2593,
											"end": 2660,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 2593,
											"end": 2660,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2593,
											"end": 2660,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 2593,
											"end": 2660,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2593,
											"end": 2660,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 2593,
											"end": 2660,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2593,
											"end": 2660,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2593,
											"end": 2660,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2593,
											"end": 2660,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2593,
											"end": 2660,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2593,
											"end": 2660,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2593,
											"end": 2660,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2593,
											"end": 2660,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2593,
											"end": 2660,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 2593,
											"end": 2660,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2726,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2679,
											"end": 2726,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2679,
											"end": 2726,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2679,
											"end": 2692,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 2679,
											"end": 2702,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2693,
											"end": 2701,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2679,
											"end": 2702,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2679,
											"end": 2702,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2679,
											"end": 2702,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2679,
											"end": 2702,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2679,
											"end": 2702,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2679,
											"end": 2702,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2679,
											"end": 2702,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2679,
											"end": 2702,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2679,
											"end": 2702,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2679,
											"end": 2702,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2679,
											"end": 2702,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2679,
											"end": 2712,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2679,
											"end": 2712,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2679,
											"end": 2712,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2679,
											"end": 2712,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2679,
											"end": 2712,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2679,
											"end": 2712,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2679,
											"end": 2712,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2679,
											"end": 2712,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2679,
											"end": 2712,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2679,
											"end": 2712,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2679,
											"end": 2712,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2679,
											"end": 2712,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2679,
											"end": 2726,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2679,
											"end": 2726,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2679,
											"end": 2726,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2744,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 2671,
											"end": 2744,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2744,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2671,
											"end": 2744,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2744,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2671,
											"end": 2744,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2744,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2744,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2671,
											"end": 2744,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2744,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 2671,
											"end": 2744,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2744,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 2671,
											"end": 2744,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2671,
											"end": 2744,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 2671,
											"end": 2744,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2744,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2671,
											"end": 2744,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2744,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2744,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2744,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2744,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2744,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2744,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 2671,
											"end": 2744,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2769,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2877,
											"end": 2890,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 2877,
											"end": 2900,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2891,
											"end": 2899,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2877,
											"end": 2900,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2877,
											"end": 2900,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2877,
											"end": 2900,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2877,
											"end": 2900,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2877,
											"end": 2900,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2877,
											"end": 2900,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2877,
											"end": 2900,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2877,
											"end": 2900,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2877,
											"end": 2900,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2877,
											"end": 2900,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2877,
											"end": 2900,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2877,
											"end": 2916,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2877,
											"end": 2916,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2877,
											"end": 2916,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2852,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2834,
											"end": 2852,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2834,
											"end": 2852,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2852,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2852,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2852,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2834,
											"end": 2852,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2852,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2852,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2852,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2834,
											"end": 2852,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2864,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2834,
											"end": 2864,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2864,
											"name": "PUSH",
											"source": 4,
											"value": "A0C4442D"
										},
										{
											"begin": 2865,
											"end": 2873,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2916,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 2834,
											"end": 2916,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2916,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2916,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 2834,
											"end": 2916,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2834,
											"end": 2916,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 2834,
											"end": 2916,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2792,
											"end": 2805,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 2792,
											"end": 2815,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2806,
											"end": 2814,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2792,
											"end": 2815,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2792,
											"end": 2815,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2792,
											"end": 2815,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2792,
											"end": 2815,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2792,
											"end": 2815,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2792,
											"end": 2815,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2792,
											"end": 2815,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2792,
											"end": 2815,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2792,
											"end": 2815,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2792,
											"end": 2815,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2792,
											"end": 2815,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2792,
											"end": 2829,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2792,
											"end": 2829,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2792,
											"end": 2829,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2774,
											"end": 2789,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 2774,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 2774,
											"end": 2829,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2774,
											"end": 2829,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2774,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 2774,
											"end": 2829,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2774,
											"end": 2829,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 2774,
											"end": 2829,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2917,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 2773,
											"end": 2917,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2917,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2917,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 2773,
											"end": 2917,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2773,
											"end": 2917,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 2773,
											"end": 2917,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2919,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2919,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2931,
											"end": 2954,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2957,
											"end": 2975,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2957,
											"end": 2975,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2957,
											"end": 2975,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2957,
											"end": 2975,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2957,
											"end": 2975,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2957,
											"end": 2975,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2957,
											"end": 2975,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2957,
											"end": 2975,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2957,
											"end": 2975,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2957,
											"end": 2975,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2957,
											"end": 2975,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2957,
											"end": 2987,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2957,
											"end": 2987,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2957,
											"end": 2987,
											"name": "PUSH",
											"source": 4,
											"value": "A0C4442D"
										},
										{
											"begin": 2988,
											"end": 2996,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 2957,
											"end": 2997,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2931,
											"end": 2997,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2931,
											"end": 2997,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3012,
											"end": 3023,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3012,
											"end": 3023,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3012,
											"end": 3023,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3012,
											"end": 3023,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3012,
											"end": 3023,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3012,
											"end": 3023,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3012,
											"end": 3023,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 3012,
											"end": 3023,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3012,
											"end": 3023,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 3012,
											"end": 3023,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3012,
											"end": 3023,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3012,
											"end": 3032,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3012,
											"end": 3032,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3012,
											"end": 3032,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 3033,
											"end": 3043,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3045,
											"end": 3051,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 3012,
											"end": 3052,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3253,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3253,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 3008,
											"end": 3253,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3123,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 3068,
											"end": 3081,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3068,
											"end": 3091,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3082,
											"end": 3090,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3068,
											"end": 3091,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3068,
											"end": 3091,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3068,
											"end": 3091,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3068,
											"end": 3091,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3068,
											"end": 3091,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3068,
											"end": 3091,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3068,
											"end": 3091,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3068,
											"end": 3091,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3068,
											"end": 3091,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3068,
											"end": 3091,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3068,
											"end": 3091,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3068,
											"end": 3105,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3068,
											"end": 3105,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3068,
											"end": 3123,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3068,
											"end": 3123,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3068,
											"end": 3123,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3068,
											"end": 3123,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3201,
											"end": 3214,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3201,
											"end": 3224,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3215,
											"end": 3223,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3201,
											"end": 3224,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3201,
											"end": 3224,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3201,
											"end": 3224,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3201,
											"end": 3224,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3201,
											"end": 3224,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3201,
											"end": 3224,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3201,
											"end": 3224,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3201,
											"end": 3224,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3201,
											"end": 3224,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3201,
											"end": 3224,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3201,
											"end": 3224,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3201,
											"end": 3240,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3201,
											"end": 3240,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3201,
											"end": 3240,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3183,
											"end": 3198,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3183,
											"end": 3240,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 3183,
											"end": 3240,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3183,
											"end": 3240,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3183,
											"end": 3240,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 3183,
											"end": 3240,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3183,
											"end": 3240,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 3183,
											"end": 3240,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3139,
											"end": 3152,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3139,
											"end": 3162,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3153,
											"end": 3161,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3139,
											"end": 3162,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3139,
											"end": 3162,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3139,
											"end": 3162,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3139,
											"end": 3162,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3139,
											"end": 3162,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3139,
											"end": 3162,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3139,
											"end": 3162,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3139,
											"end": 3162,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3139,
											"end": 3162,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3139,
											"end": 3162,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3139,
											"end": 3162,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3139,
											"end": 3178,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3139,
											"end": 3178,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3139,
											"end": 3178,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3139,
											"end": 3241,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3139,
											"end": 3241,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3139,
											"end": 3241,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3139,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 3139,
											"end": 3241,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3139,
											"end": 3241,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3139,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 3139,
											"end": 3241,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3139,
											"end": 3241,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 3139,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3139,
											"end": 3241,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3139,
											"end": 3241,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3139,
											"end": 3241,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3139,
											"end": 3241,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3139,
											"end": 3241,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3139,
											"end": 3241,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3139,
											"end": 3241,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3253,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 3008,
											"end": 3253,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3272,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3263,
											"end": 3272,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3263,
											"end": 3272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3272,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3272,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3263,
											"end": 3272,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3272,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3272,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3263,
											"end": 3272,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3285,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3263,
											"end": 3285,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3285,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 3294,
											"end": 3298,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 3301,
											"end": 3311,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3313,
											"end": 3321,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3322,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3263,
											"end": 3322,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3322,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3322,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3263,
											"end": 3322,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3322,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 3263,
											"end": 3322,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3322,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3322,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3322,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3263,
											"end": 3322,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3322,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 3263,
											"end": 3322,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3322,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3322,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3322,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3322,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3263,
											"end": 3322,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3263,
											"end": 3322,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 3263,
											"end": 3322,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3322,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3263,
											"end": 3322,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3263,
											"end": 3322,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3322,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3322,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3322,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3322,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3322,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3263,
											"end": 3322,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3322,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3322,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3322,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3322,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3322,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3322,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 3263,
											"end": 3322,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3322,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3263,
											"end": 3322,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3322,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3322,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 3263,
											"end": 3322,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3322,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3322,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3322,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3322,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3322,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3322,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3322,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 3263,
											"end": 3322,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3322,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3322,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3263,
											"end": 3322,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3322,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3322,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3322,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3263,
											"end": 3322,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3322,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 3263,
											"end": 3322,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3322,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3322,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3322,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3322,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3377,
											"end": 3378,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3333,
											"end": 3346,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3333,
											"end": 3356,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3347,
											"end": 3355,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3333,
											"end": 3356,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3333,
											"end": 3356,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3333,
											"end": 3356,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3333,
											"end": 3356,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3333,
											"end": 3356,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3333,
											"end": 3356,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3333,
											"end": 3356,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3333,
											"end": 3356,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3333,
											"end": 3356,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3333,
											"end": 3356,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3333,
											"end": 3356,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3333,
											"end": 3366,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3333,
											"end": 3366,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3333,
											"end": 3366,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3333,
											"end": 3379,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3333,
											"end": 3379,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 3333,
											"end": 3379,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3333,
											"end": 3379,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3333,
											"end": 3379,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3333,
											"end": 3379,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3333,
											"end": 3379,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 3333,
											"end": 3379,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 3333,
											"end": 3379,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3333,
											"end": 3379,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3333,
											"end": 3379,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3333,
											"end": 3379,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3333,
											"end": 3379,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3333,
											"end": 3379,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 3333,
											"end": 3379,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 3333,
											"end": 3379,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3333,
											"end": 3379,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3333,
											"end": 3379,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2582,
											"end": 3387,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2582,
											"end": 3387,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2540,
											"end": 3387,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2540,
											"end": 3387,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1738,
											"end": 2534,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 1738,
											"end": 2534,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1850,
											"end": 1851,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1810,
											"end": 1823,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1810,
											"end": 1833,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1824,
											"end": 1832,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1810,
											"end": 1833,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1810,
											"end": 1833,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1810,
											"end": 1833,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1810,
											"end": 1833,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1810,
											"end": 1833,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1810,
											"end": 1833,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1810,
											"end": 1833,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1810,
											"end": 1833,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1810,
											"end": 1833,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1810,
											"end": 1833,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1810,
											"end": 1833,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1810,
											"end": 1847,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1810,
											"end": 1847,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1810,
											"end": 1847,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1810,
											"end": 1851,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1802,
											"end": 1853,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 1802,
											"end": 1853,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1802,
											"end": 1853,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1802,
											"end": 1853,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1802,
											"end": 1853,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1802,
											"end": 1853,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 1802,
											"end": 1853,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1909,
											"end": 1919,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1872,
											"end": 1919,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1872,
											"end": 1919,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1872,
											"end": 1885,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1872,
											"end": 1895,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1886,
											"end": 1894,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1872,
											"end": 1895,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1872,
											"end": 1895,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1872,
											"end": 1895,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1872,
											"end": 1895,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1872,
											"end": 1895,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1872,
											"end": 1895,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1872,
											"end": 1895,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1872,
											"end": 1895,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1872,
											"end": 1895,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1872,
											"end": 1895,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1872,
											"end": 1895,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1872,
											"end": 1905,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1872,
											"end": 1905,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1872,
											"end": 1905,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1872,
											"end": 1905,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1872,
											"end": 1905,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1872,
											"end": 1905,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1872,
											"end": 1905,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1872,
											"end": 1905,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1872,
											"end": 1905,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1872,
											"end": 1905,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1872,
											"end": 1905,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1872,
											"end": 1905,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1872,
											"end": 1919,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1872,
											"end": 1919,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1872,
											"end": 1919,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1864,
											"end": 1920,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 1864,
											"end": 1920,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1864,
											"end": 1920,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1864,
											"end": 1920,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1864,
											"end": 1920,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1864,
											"end": 1920,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 1864,
											"end": 1920,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 1993,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1975,
											"end": 1993,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1975,
											"end": 1993,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 1993,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 1993,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 1993,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1975,
											"end": 1993,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 1993,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 1993,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 1993,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1975,
											"end": 1993,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2005,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1975,
											"end": 2005,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2005,
											"name": "PUSH",
											"source": 4,
											"value": "A0C4442D"
										},
										{
											"begin": 2006,
											"end": 2014,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 1975,
											"end": 2015,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1933,
											"end": 1946,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1933,
											"end": 1956,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1947,
											"end": 1955,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1933,
											"end": 1956,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1933,
											"end": 1956,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1933,
											"end": 1956,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1933,
											"end": 1956,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1933,
											"end": 1956,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1933,
											"end": 1956,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1933,
											"end": 1956,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1933,
											"end": 1956,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1933,
											"end": 1956,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1933,
											"end": 1956,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1933,
											"end": 1956,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1933,
											"end": 1972,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1933,
											"end": 1972,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1933,
											"end": 2015,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1933,
											"end": 2015,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1933,
											"end": 2015,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1933,
											"end": 2015,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2026,
											"end": 2049,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2052,
											"end": 2070,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2052,
											"end": 2070,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2052,
											"end": 2070,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2070,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2070,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2070,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2052,
											"end": 2070,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2070,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2070,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2070,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2052,
											"end": 2070,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2082,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2052,
											"end": 2082,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2082,
											"name": "PUSH",
											"source": 4,
											"value": "A0C4442D"
										},
										{
											"begin": 2083,
											"end": 2091,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 2052,
											"end": 2092,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2026,
											"end": 2092,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2026,
											"end": 2092,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2103,
											"end": 2117,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2200,
											"end": 2213,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 2200,
											"end": 2223,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2214,
											"end": 2222,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2200,
											"end": 2223,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2200,
											"end": 2223,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2200,
											"end": 2223,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2200,
											"end": 2223,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2200,
											"end": 2223,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2200,
											"end": 2223,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2200,
											"end": 2223,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2200,
											"end": 2223,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2200,
											"end": 2223,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2200,
											"end": 2223,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2200,
											"end": 2223,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2182,
											"end": 2197,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2182,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 2182,
											"end": 2239,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2182,
											"end": 2239,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2182,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 2182,
											"end": 2239,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2182,
											"end": 2239,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 2182,
											"end": 2239,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2140,
											"end": 2153,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 2140,
											"end": 2163,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2154,
											"end": 2162,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2140,
											"end": 2163,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2140,
											"end": 2163,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2140,
											"end": 2163,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2140,
											"end": 2163,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2140,
											"end": 2163,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2140,
											"end": 2163,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2140,
											"end": 2163,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2140,
											"end": 2163,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2140,
											"end": 2163,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2140,
											"end": 2163,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2140,
											"end": 2163,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2140,
											"end": 2177,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2140,
											"end": 2177,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2140,
											"end": 2177,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2122,
											"end": 2137,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 2122,
											"end": 2177,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 2122,
											"end": 2177,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2122,
											"end": 2177,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2122,
											"end": 2177,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 2122,
											"end": 2177,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2122,
											"end": 2177,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 2122,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2121,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 2121,
											"end": 2240,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2121,
											"end": 2240,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2121,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 2121,
											"end": 2240,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2121,
											"end": 2240,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 2121,
											"end": 2240,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2103,
											"end": 2242,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2103,
											"end": 2242,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2268,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2257,
											"end": 2268,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2257,
											"end": 2268,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2268,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2268,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2268,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2257,
											"end": 2268,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2268,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2268,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2268,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2257,
											"end": 2268,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2277,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2257,
											"end": 2277,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2277,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 2278,
											"end": 2288,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2296,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 2257,
											"end": 2297,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2253,
											"end": 2526,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2253,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 2253,
											"end": 2526,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2353,
											"end": 2368,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 2313,
											"end": 2326,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 2313,
											"end": 2336,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2327,
											"end": 2335,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2313,
											"end": 2336,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2313,
											"end": 2336,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2313,
											"end": 2336,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2313,
											"end": 2336,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2313,
											"end": 2336,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2313,
											"end": 2336,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2313,
											"end": 2336,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2313,
											"end": 2336,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2313,
											"end": 2336,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2313,
											"end": 2336,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2313,
											"end": 2336,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2313,
											"end": 2350,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2313,
											"end": 2350,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2313,
											"end": 2368,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2313,
											"end": 2368,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2313,
											"end": 2368,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2313,
											"end": 2368,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2445,
											"end": 2458,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 2445,
											"end": 2468,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2459,
											"end": 2467,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2445,
											"end": 2468,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2445,
											"end": 2468,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2445,
											"end": 2468,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2445,
											"end": 2468,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2445,
											"end": 2468,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2445,
											"end": 2468,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2445,
											"end": 2468,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2445,
											"end": 2468,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2445,
											"end": 2468,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2445,
											"end": 2468,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2445,
											"end": 2468,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2445,
											"end": 2484,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2445,
											"end": 2484,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2445,
											"end": 2484,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2442,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2484,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 2427,
											"end": 2484,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2484,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2484,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 2427,
											"end": 2484,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2427,
											"end": 2484,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 2427,
											"end": 2484,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2383,
											"end": 2396,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 2383,
											"end": 2406,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2397,
											"end": 2405,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2383,
											"end": 2406,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2383,
											"end": 2406,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2383,
											"end": 2406,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2383,
											"end": 2406,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2383,
											"end": 2406,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2383,
											"end": 2406,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2383,
											"end": 2406,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2383,
											"end": 2406,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2383,
											"end": 2406,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2383,
											"end": 2406,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2383,
											"end": 2406,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2383,
											"end": 2422,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2383,
											"end": 2422,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2383,
											"end": 2422,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2383,
											"end": 2485,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2383,
											"end": 2485,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2383,
											"end": 2485,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2383,
											"end": 2485,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 2383,
											"end": 2485,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2383,
											"end": 2485,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2383,
											"end": 2485,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 2383,
											"end": 2485,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2383,
											"end": 2485,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 2383,
											"end": 2485,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2383,
											"end": 2485,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2383,
											"end": 2485,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2383,
											"end": 2485,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2383,
											"end": 2485,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2383,
											"end": 2485,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2383,
											"end": 2485,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2383,
											"end": 2485,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2253,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 2253,
											"end": 2526,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2253,
											"end": 2526,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 2253,
											"end": 2526,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2503,
											"end": 2526,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2503,
											"end": 2526,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2503,
											"end": 2526,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2503,
											"end": 2526,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2503,
											"end": 2526,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2503,
											"end": 2526,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2503,
											"end": 2526,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2503,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 2503,
											"end": 2526,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2503,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 2503,
											"end": 2526,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2503,
											"end": 2526,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 2503,
											"end": 2526,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2503,
											"end": 2526,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2503,
											"end": 2526,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2503,
											"end": 2526,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2503,
											"end": 2526,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2503,
											"end": 2526,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2503,
											"end": 2526,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2503,
											"end": 2526,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2253,
											"end": 2526,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 2253,
											"end": 2526,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 2534,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 2534,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1701,
											"end": 1702,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2628,
											"end": 2635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1738,
											"end": 2534,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1738,
											"end": 2534,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1243,
											"end": 1380,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 1243,
											"end": 1380,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1307,
											"end": 1314,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1333,
											"end": 1346,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1333,
											"end": 1356,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1347,
											"end": 1355,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1333,
											"end": 1356,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1333,
											"end": 1356,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1333,
											"end": 1356,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1333,
											"end": 1356,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1333,
											"end": 1356,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1333,
											"end": 1356,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1333,
											"end": 1356,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1333,
											"end": 1356,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1333,
											"end": 1356,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1333,
											"end": 1356,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1333,
											"end": 1356,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1333,
											"end": 1372,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1333,
											"end": 1372,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1333,
											"end": 1372,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1326,
											"end": 1372,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1326,
											"end": 1372,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1243,
											"end": 1380,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1243,
											"end": 1380,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1243,
											"end": 1380,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1243,
											"end": 1380,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3415,
											"end": 3701,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 3415,
											"end": 3701,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3591,
											"end": 3597,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3624,
											"end": 3692,
											"name": "PUSH",
											"source": 4,
											"value": "7636E24523A394E051C4F3B1D9065BE73F6B416813BA53A99B779354A5822C58"
										},
										{
											"begin": 3610,
											"end": 3693,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3693,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3415,
											"end": 3701,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": 3415,
											"end": 3701,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 3415,
											"end": 3701,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3415,
											"end": 3701,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3415,
											"end": 3701,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3415,
											"end": 3701,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3415,
											"end": 3701,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3415,
											"end": 3701,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3415,
											"end": 3701,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1386,
											"end": 1726,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 1386,
											"end": 1726,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1491,
											"end": 1501,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1501,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1460,
											"end": 1501,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1469,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1460,
											"end": 1469,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1460,
											"end": 1469,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1469,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1469,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1469,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1460,
											"end": 1469,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1469,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1469,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1469,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1460,
											"end": 1469,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1477,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1460,
											"end": 1477,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1477,
											"name": "PUSH",
											"source": 4,
											"value": "6352211E"
										},
										{
											"begin": 1478,
											"end": 1486,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1501,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1460,
											"end": 1501,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1501,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1452,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 1452,
											"end": 1515,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1452,
											"end": 1515,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1452,
											"end": 1515,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1452,
											"end": 1515,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1452,
											"end": 1515,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1452,
											"end": 1515,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1452,
											"end": 1515,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1452,
											"end": 1515,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1452,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 1452,
											"end": 1515,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1452,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 1452,
											"end": 1515,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1452,
											"end": 1515,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 1452,
											"end": 1515,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1452,
											"end": 1515,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1452,
											"end": 1515,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1452,
											"end": 1515,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1452,
											"end": 1515,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1452,
											"end": 1515,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1452,
											"end": 1515,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1452,
											"end": 1515,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1452,
											"end": 1515,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 1452,
											"end": 1515,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1536,
											"end": 1545,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1536,
											"end": 1545,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1545,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1536,
											"end": 1545,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1536,
											"end": 1545,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1536,
											"end": 1545,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1536,
											"end": 1545,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1536,
											"end": 1545,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1536,
											"end": 1545,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1536,
											"end": 1545,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1536,
											"end": 1545,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1536,
											"end": 1558,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1536,
											"end": 1558,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1536,
											"end": 1558,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 1559,
											"end": 1569,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1579,
											"end": 1583,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 1586,
											"end": 1594,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1536,
											"end": 1595,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1536,
											"end": 1595,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1536,
											"end": 1595,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1536,
											"end": 1595,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1536,
											"end": 1595,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1536,
											"end": 1595,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1536,
											"end": 1595,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1536,
											"end": 1595,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1536,
											"end": 1595,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1536,
											"end": 1595,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1536,
											"end": 1595,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1536,
											"end": 1595,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 1536,
											"end": 1595,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1536,
											"end": 1595,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1536,
											"end": 1595,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1536,
											"end": 1595,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1536,
											"end": 1595,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1536,
											"end": 1595,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1536,
											"end": 1595,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 1536,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1536,
											"end": 1595,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1595,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1536,
											"end": 1595,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1536,
											"end": 1595,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1536,
											"end": 1595,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1536,
											"end": 1595,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1536,
											"end": 1595,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1536,
											"end": 1595,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1595,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1536,
											"end": 1595,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1536,
											"end": 1595,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1536,
											"end": 1595,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1536,
											"end": 1595,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1536,
											"end": 1595,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1536,
											"end": 1595,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 1536,
											"end": 1595,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1536,
											"end": 1595,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1595,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1536,
											"end": 1595,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1536,
											"end": 1595,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 1536,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1536,
											"end": 1595,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1536,
											"end": 1595,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1536,
											"end": 1595,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 1536,
											"end": 1595,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1536,
											"end": 1595,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1536,
											"end": 1595,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1536,
											"end": 1595,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 1536,
											"end": 1595,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1536,
											"end": 1595,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1536,
											"end": 1595,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1595,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1536,
											"end": 1595,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1536,
											"end": 1595,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1536,
											"end": 1595,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1595,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1536,
											"end": 1595,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 1536,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1536,
											"end": 1595,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1536,
											"end": 1595,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1536,
											"end": 1595,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1536,
											"end": 1595,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1642,
											"end": 1652,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1606,
											"end": 1619,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1606,
											"end": 1629,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1620,
											"end": 1628,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1606,
											"end": 1629,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1606,
											"end": 1629,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1606,
											"end": 1629,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1606,
											"end": 1629,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1606,
											"end": 1629,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1606,
											"end": 1629,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1606,
											"end": 1629,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1606,
											"end": 1629,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1606,
											"end": 1629,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1606,
											"end": 1629,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1606,
											"end": 1629,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1606,
											"end": 1639,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1606,
											"end": 1639,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1606,
											"end": 1639,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1606,
											"end": 1652,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1606,
											"end": 1652,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1606,
											"end": 1652,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1606,
											"end": 1652,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1606,
											"end": 1652,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1606,
											"end": 1652,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1606,
											"end": 1652,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1606,
											"end": 1652,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1606,
											"end": 1652,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1606,
											"end": 1652,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1606,
											"end": 1652,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1606,
											"end": 1652,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1606,
											"end": 1652,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1606,
											"end": 1652,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1606,
											"end": 1652,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1606,
											"end": 1652,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1606,
											"end": 1652,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1606,
											"end": 1652,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1703,
											"end": 1718,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 1663,
											"end": 1676,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1663,
											"end": 1686,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1677,
											"end": 1685,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1663,
											"end": 1686,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1663,
											"end": 1686,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1663,
											"end": 1686,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1663,
											"end": 1686,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1663,
											"end": 1686,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1663,
											"end": 1686,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1663,
											"end": 1686,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1663,
											"end": 1686,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1663,
											"end": 1686,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1663,
											"end": 1686,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1663,
											"end": 1686,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1663,
											"end": 1700,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1663,
											"end": 1700,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1663,
											"end": 1718,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1663,
											"end": 1718,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1663,
											"end": 1718,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1663,
											"end": 1718,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1701,
											"end": 1702,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2628,
											"end": 2635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1386,
											"end": 1726,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1386,
											"end": 1726,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 295,
											"name": "tag",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 152,
											"end": 295,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 209,
											"end": 214,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 240,
											"end": 246,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 234,
											"end": 247,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 225,
											"end": 247,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 225,
											"end": 247,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 256,
											"end": 289,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 283,
											"end": 288,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 256,
											"end": 289,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 256,
											"end": 289,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 256,
											"end": 289,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 256,
											"end": 289,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 152,
											"end": 295,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 152,
											"end": 295,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 152,
											"end": 295,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 152,
											"end": 295,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 152,
											"end": 295,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 301,
											"end": 438,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 301,
											"end": 438,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 355,
											"end": 360,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 386,
											"end": 392,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 380,
											"end": 393,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 371,
											"end": 393,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 371,
											"end": 393,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 402,
											"end": 432,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 426,
											"end": 431,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 402,
											"end": 432,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 402,
											"end": 432,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 402,
											"end": 432,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 402,
											"end": 432,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 301,
											"end": 438,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 301,
											"end": 438,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 301,
											"end": 438,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 301,
											"end": 438,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 301,
											"end": 438,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 457,
											"end": 1009,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 457,
											"end": 1009,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 514,
											"end": 522,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 530,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 574,
											"end": 577,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 567,
											"end": 571,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 559,
											"end": 565,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 555,
											"end": 572,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 551,
											"end": 578,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 541,
											"end": 663,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 541,
											"end": 663,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 582,
											"end": 661,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 582,
											"end": 661,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 582,
											"end": 661,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 582,
											"end": 661,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 582,
											"end": 661,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 541,
											"end": 663,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 541,
											"end": 663,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 695,
											"end": 701,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 682,
											"end": 702,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 672,
											"end": 702,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 672,
											"end": 702,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 725,
											"end": 743,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 717,
											"end": 723,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 714,
											"end": 744,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 711,
											"end": 828,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 711,
											"end": 828,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 711,
											"end": 828,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 747,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 747,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 747,
											"end": 826,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 747,
											"end": 826,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 747,
											"end": 826,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 711,
											"end": 828,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 711,
											"end": 828,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 861,
											"end": 865,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 859,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 849,
											"end": 866,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 837,
											"end": 866,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 837,
											"end": 866,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 915,
											"end": 918,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 907,
											"end": 911,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 899,
											"end": 905,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 895,
											"end": 912,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 885,
											"end": 893,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 881,
											"end": 913,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 878,
											"end": 919,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 875,
											"end": 1003,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 875,
											"end": 1003,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 875,
											"end": 1003,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 922,
											"end": 1001,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 922,
											"end": 1001,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 922,
											"end": 1001,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 922,
											"end": 1001,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 922,
											"end": 1001,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 875,
											"end": 1003,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 875,
											"end": 1003,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 457,
											"end": 1009,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 457,
											"end": 1009,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 457,
											"end": 1009,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 457,
											"end": 1009,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 457,
											"end": 1009,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 457,
											"end": 1009,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1015,
											"end": 1154,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 1015,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1061,
											"end": 1066,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1099,
											"end": 1105,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1086,
											"end": 1106,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1077,
											"end": 1106,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1077,
											"end": 1106,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1115,
											"end": 1148,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 1142,
											"end": 1147,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1115,
											"end": 1148,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 1115,
											"end": 1148,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1115,
											"end": 1148,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 1115,
											"end": 1148,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1015,
											"end": 1154,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1015,
											"end": 1154,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1015,
											"end": 1154,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1015,
											"end": 1154,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1015,
											"end": 1154,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1160,
											"end": 1303,
											"name": "tag",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 1160,
											"end": 1303,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1217,
											"end": 1222,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1248,
											"end": 1254,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1242,
											"end": 1255,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1233,
											"end": 1255,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1233,
											"end": 1255,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1264,
											"end": 1297,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 1291,
											"end": 1296,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1264,
											"end": 1297,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 1264,
											"end": 1297,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1264,
											"end": 1297,
											"name": "tag",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 1264,
											"end": 1297,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1160,
											"end": 1303,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1160,
											"end": 1303,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1160,
											"end": 1303,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1160,
											"end": 1303,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1160,
											"end": 1303,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1309,
											"end": 1660,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 1309,
											"end": 1660,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1379,
											"end": 1385,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1428,
											"end": 1430,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1407,
											"end": 1414,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1403,
											"end": 1426,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1399,
											"end": 1431,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1396,
											"end": 1515,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1396,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 1396,
											"end": 1515,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1434,
											"end": 1513,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 1434,
											"end": 1513,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 1434,
											"end": 1513,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1434,
											"end": 1513,
											"name": "tag",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 1434,
											"end": 1513,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1396,
											"end": 1515,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 1396,
											"end": 1515,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1554,
											"end": 1555,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1579,
											"end": 1643,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 1635,
											"end": 1642,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1626,
											"end": 1632,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1615,
											"end": 1624,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1611,
											"end": 1633,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1643,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 1579,
											"end": 1643,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1579,
											"end": 1643,
											"name": "tag",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 1579,
											"end": 1643,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1569,
											"end": 1643,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1569,
											"end": 1643,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1525,
											"end": 1653,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1309,
											"end": 1660,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1309,
											"end": 1660,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1309,
											"end": 1660,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1309,
											"end": 1660,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1309,
											"end": 1660,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1666,
											"end": 2775,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 1666,
											"end": 2775,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1772,
											"end": 1778,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1780,
											"end": 1786,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1788,
											"end": 1794,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1796,
											"end": 1802,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1804,
											"end": 1810,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1812,
											"end": 1818,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 1864,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 1849,
											"end": 1858,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1840,
											"end": 1847,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 1836,
											"end": 1859,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1865,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1949,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1949,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 1829,
											"end": 1949,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "tag",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1949,
											"name": "tag",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 1829,
											"end": 1949,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 1989,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 2058,
											"end": 2065,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 2049,
											"end": 2055,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2038,
											"end": 2047,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2056,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "tag",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2003,
											"end": 2066,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 2003,
											"end": 2066,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1959,
											"end": 2076,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2115,
											"end": 2117,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 2186,
											"end": 2193,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 2177,
											"end": 2183,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2166,
											"end": 2175,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 2162,
											"end": 2184,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2194,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2194,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2086,
											"end": 2204,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2243,
											"end": 2245,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2269,
											"end": 2322,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 2314,
											"end": 2321,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 2305,
											"end": 2311,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2294,
											"end": 2303,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 2290,
											"end": 2312,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2269,
											"end": 2322,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 2269,
											"end": 2322,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2269,
											"end": 2322,
											"name": "tag",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 2269,
											"end": 2322,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2259,
											"end": 2322,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 2259,
											"end": 2322,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2214,
											"end": 2332,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2371,
											"end": 2373,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2397,
											"end": 2450,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 2442,
											"end": 2449,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 2433,
											"end": 2439,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2422,
											"end": 2431,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 2418,
											"end": 2440,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2397,
											"end": 2450,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 2397,
											"end": 2450,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2397,
											"end": 2450,
											"name": "tag",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 2397,
											"end": 2450,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2387,
											"end": 2450,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2387,
											"end": 2450,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2342,
											"end": 2460,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2527,
											"end": 2530,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 2516,
											"end": 2525,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2531,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2499,
											"end": 2532,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2559,
											"end": 2577,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2551,
											"end": 2557,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2548,
											"end": 2578,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2545,
											"end": 2662,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2545,
											"end": 2662,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 2545,
											"end": 2662,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2581,
											"end": 2660,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 2581,
											"end": 2660,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 2581,
											"end": 2660,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2581,
											"end": 2660,
											"name": "tag",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 2581,
											"end": 2660,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2545,
											"end": 2662,
											"name": "tag",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 2545,
											"end": 2662,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2694,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 2750,
											"end": 2757,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 2741,
											"end": 2747,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2730,
											"end": 2739,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 2726,
											"end": 2748,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2694,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 2694,
											"end": 2758,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2694,
											"end": 2758,
											"name": "tag",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 2694,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2676,
											"end": 2758,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2676,
											"end": 2758,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2676,
											"end": 2758,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2676,
											"end": 2758,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2470,
											"end": 2768,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1666,
											"end": 2775,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1666,
											"end": 2775,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 1666,
											"end": 2775,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1666,
											"end": 2775,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1666,
											"end": 2775,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 1666,
											"end": 2775,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1666,
											"end": 2775,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1666,
											"end": 2775,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 1666,
											"end": 2775,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2781,
											"end": 3126,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 2781,
											"end": 3126,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2848,
											"end": 2854,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2897,
											"end": 2899,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2885,
											"end": 2894,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2876,
											"end": 2883,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2872,
											"end": 2895,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2868,
											"end": 2900,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2865,
											"end": 2984,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2865,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 2865,
											"end": 2984,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2903,
											"end": 2982,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 2903,
											"end": 2982,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 2903,
											"end": 2982,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2903,
											"end": 2982,
											"name": "tag",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 2903,
											"end": 2982,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2865,
											"end": 2984,
											"name": "tag",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 2865,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3023,
											"end": 3024,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3048,
											"end": 3109,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 3101,
											"end": 3108,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3092,
											"end": 3098,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3081,
											"end": 3090,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3077,
											"end": 3099,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3048,
											"end": 3109,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 3048,
											"end": 3109,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3048,
											"end": 3109,
											"name": "tag",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 3048,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3038,
											"end": 3109,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3038,
											"end": 3109,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2994,
											"end": 3119,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2781,
											"end": 3126,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2781,
											"end": 3126,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2781,
											"end": 3126,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2781,
											"end": 3126,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2781,
											"end": 3126,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3132,
											"end": 3461,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 3132,
											"end": 3461,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3191,
											"end": 3197,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3240,
											"end": 3242,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3228,
											"end": 3237,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3219,
											"end": 3226,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3215,
											"end": 3238,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3211,
											"end": 3243,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 3208,
											"end": 3327,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3208,
											"end": 3327,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 3208,
											"end": 3327,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3246,
											"end": 3325,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 3246,
											"end": 3325,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 3246,
											"end": 3325,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3246,
											"end": 3325,
											"name": "tag",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 3246,
											"end": 3325,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3208,
											"end": 3327,
											"name": "tag",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 3208,
											"end": 3327,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3366,
											"end": 3367,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3391,
											"end": 3444,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 3436,
											"end": 3443,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3427,
											"end": 3433,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3416,
											"end": 3425,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3412,
											"end": 3434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3391,
											"end": 3444,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 3391,
											"end": 3444,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3391,
											"end": 3444,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 3391,
											"end": 3444,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3381,
											"end": 3444,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3381,
											"end": 3444,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3337,
											"end": 3454,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3132,
											"end": 3461,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3132,
											"end": 3461,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3132,
											"end": 3461,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3132,
											"end": 3461,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3132,
											"end": 3461,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3467,
											"end": 3818,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3467,
											"end": 3818,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3537,
											"end": 3543,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3586,
											"end": 3588,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3574,
											"end": 3583,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3565,
											"end": 3572,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3584,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3557,
											"end": 3589,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 3554,
											"end": 3673,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3554,
											"end": 3673,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 3554,
											"end": 3673,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3592,
											"end": 3671,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 3592,
											"end": 3671,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 3592,
											"end": 3671,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3592,
											"end": 3671,
											"name": "tag",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 3592,
											"end": 3671,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3554,
											"end": 3673,
											"name": "tag",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 3554,
											"end": 3673,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3712,
											"end": 3713,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3737,
											"end": 3801,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 3793,
											"end": 3800,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3773,
											"end": 3782,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3769,
											"end": 3791,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3737,
											"end": 3801,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 3737,
											"end": 3801,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3737,
											"end": 3801,
											"name": "tag",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 3737,
											"end": 3801,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3727,
											"end": 3801,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3727,
											"end": 3801,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3683,
											"end": 3811,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3467,
											"end": 3818,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3467,
											"end": 3818,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3467,
											"end": 3818,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3467,
											"end": 3818,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3467,
											"end": 3818,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3824,
											"end": 3942,
											"name": "tag",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 3824,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3911,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 3929,
											"end": 3934,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3911,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 3911,
											"end": 3935,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3911,
											"end": 3935,
											"name": "tag",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 3911,
											"end": 3935,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3906,
											"end": 3909,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3899,
											"end": 3936,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3824,
											"end": 3942,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3824,
											"end": 3942,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3824,
											"end": 3942,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3948,
											"end": 4063,
											"name": "tag",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 3948,
											"end": 4063,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4033,
											"end": 4056,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 4050,
											"end": 4055,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4033,
											"end": 4056,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 4033,
											"end": 4056,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4033,
											"end": 4056,
											"name": "tag",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 4033,
											"end": 4056,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4028,
											"end": 4031,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4021,
											"end": 4057,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3948,
											"end": 4063,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3948,
											"end": 4063,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3948,
											"end": 4063,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4069,
											"end": 4228,
											"name": "tag",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 4069,
											"end": 4228,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4170,
											"end": 4221,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 4215,
											"end": 4220,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4170,
											"end": 4221,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 4170,
											"end": 4221,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4170,
											"end": 4221,
											"name": "tag",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 4170,
											"end": 4221,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4165,
											"end": 4168,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4158,
											"end": 4222,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4069,
											"end": 4228,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4069,
											"end": 4228,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4069,
											"end": 4228,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4234,
											"end": 4395,
											"name": "tag",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 4234,
											"end": 4395,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4336,
											"end": 4388,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 4382,
											"end": 4387,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4336,
											"end": 4388,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 4336,
											"end": 4388,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4336,
											"end": 4388,
											"name": "tag",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 4336,
											"end": 4388,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4331,
											"end": 4334,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4324,
											"end": 4389,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4234,
											"end": 4395,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4234,
											"end": 4395,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4234,
											"end": 4395,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4401,
											"end": 4564,
											"name": "tag",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 4401,
											"end": 4564,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4504,
											"end": 4557,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 4551,
											"end": 4556,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4504,
											"end": 4557,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 4504,
											"end": 4557,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4504,
											"end": 4557,
											"name": "tag",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 4504,
											"end": 4557,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4499,
											"end": 4502,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4492,
											"end": 4558,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4401,
											"end": 4564,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4401,
											"end": 4564,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4401,
											"end": 4564,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4570,
											"end": 4936,
											"name": "tag",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 4570,
											"end": 4936,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4712,
											"end": 4715,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4733,
											"end": 4800,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 4797,
											"end": 4799,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 4792,
											"end": 4795,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4733,
											"end": 4800,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 4733,
											"end": 4800,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4733,
											"end": 4800,
											"name": "tag",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 4733,
											"end": 4800,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4726,
											"end": 4800,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4726,
											"end": 4800,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4809,
											"end": 4902,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 4898,
											"end": 4901,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4809,
											"end": 4902,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 4809,
											"end": 4902,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4809,
											"end": 4902,
											"name": "tag",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 4809,
											"end": 4902,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4927,
											"end": 4929,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4922,
											"end": 4925,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4918,
											"end": 4930,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4911,
											"end": 4930,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4911,
											"end": 4930,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4570,
											"end": 4936,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4570,
											"end": 4936,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4570,
											"end": 4936,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4570,
											"end": 4936,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4942,
											"end": 5308,
											"name": "tag",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 4942,
											"end": 5308,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5084,
											"end": 5087,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5105,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 5169,
											"end": 5171,
											"name": "PUSH",
											"source": 5,
											"value": "D"
										},
										{
											"begin": 5164,
											"end": 5167,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5105,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 5105,
											"end": 5172,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5105,
											"end": 5172,
											"name": "tag",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 5105,
											"end": 5172,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5098,
											"end": 5172,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5098,
											"end": 5172,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5181,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 5270,
											"end": 5273,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5181,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 5181,
											"end": 5274,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5181,
											"end": 5274,
											"name": "tag",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 5181,
											"end": 5274,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5299,
											"end": 5301,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5294,
											"end": 5297,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5290,
											"end": 5302,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5283,
											"end": 5302,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5283,
											"end": 5302,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4942,
											"end": 5308,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4942,
											"end": 5308,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4942,
											"end": 5308,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4942,
											"end": 5308,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5314,
											"end": 5680,
											"name": "tag",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 5314,
											"end": 5680,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5456,
											"end": 5459,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5477,
											"end": 5544,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 5541,
											"end": 5543,
											"name": "PUSH",
											"source": 5,
											"value": "D"
										},
										{
											"begin": 5536,
											"end": 5539,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5477,
											"end": 5544,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 5477,
											"end": 5544,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5477,
											"end": 5544,
											"name": "tag",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 5477,
											"end": 5544,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5470,
											"end": 5544,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5470,
											"end": 5544,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5553,
											"end": 5646,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 5642,
											"end": 5645,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5553,
											"end": 5646,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 5553,
											"end": 5646,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5553,
											"end": 5646,
											"name": "tag",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 5553,
											"end": 5646,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5671,
											"end": 5673,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5666,
											"end": 5669,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5662,
											"end": 5674,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5655,
											"end": 5674,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5655,
											"end": 5674,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5314,
											"end": 5680,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5314,
											"end": 5680,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5314,
											"end": 5680,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5314,
											"end": 5680,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5686,
											"end": 6051,
											"name": "tag",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 5686,
											"end": 6051,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5828,
											"end": 5831,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5849,
											"end": 5915,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 5913,
											"end": 5914,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 5908,
											"end": 5911,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5849,
											"end": 5915,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 5849,
											"end": 5915,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5849,
											"end": 5915,
											"name": "tag",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 5849,
											"end": 5915,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5842,
											"end": 5915,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5842,
											"end": 5915,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5924,
											"end": 6017,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 6013,
											"end": 6016,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5924,
											"end": 6017,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 5924,
											"end": 6017,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5924,
											"end": 6017,
											"name": "tag",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 5924,
											"end": 6017,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6042,
											"end": 6044,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6037,
											"end": 6040,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6033,
											"end": 6045,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6026,
											"end": 6045,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6026,
											"end": 6045,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5686,
											"end": 6051,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5686,
											"end": 6051,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5686,
											"end": 6051,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5686,
											"end": 6051,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6057,
											"end": 6423,
											"name": "tag",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 6057,
											"end": 6423,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6199,
											"end": 6202,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6220,
											"end": 6287,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 6284,
											"end": 6286,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 6279,
											"end": 6282,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6220,
											"end": 6287,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 6220,
											"end": 6287,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6220,
											"end": 6287,
											"name": "tag",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 6220,
											"end": 6287,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6213,
											"end": 6287,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6213,
											"end": 6287,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6296,
											"end": 6389,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 6385,
											"end": 6388,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6296,
											"end": 6389,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 6296,
											"end": 6389,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6296,
											"end": 6389,
											"name": "tag",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 6296,
											"end": 6389,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6414,
											"end": 6416,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6409,
											"end": 6412,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6405,
											"end": 6417,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6398,
											"end": 6417,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6398,
											"end": 6417,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6057,
											"end": 6423,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6057,
											"end": 6423,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6057,
											"end": 6423,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6057,
											"end": 6423,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6429,
											"end": 6547,
											"name": "tag",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 6429,
											"end": 6547,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6516,
											"end": 6540,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 6534,
											"end": 6539,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6516,
											"end": 6540,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 6516,
											"end": 6540,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6516,
											"end": 6540,
											"name": "tag",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 6516,
											"end": 6540,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6511,
											"end": 6514,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6504,
											"end": 6541,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6429,
											"end": 6547,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6429,
											"end": 6547,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6429,
											"end": 6547,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6553,
											"end": 6775,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 6553,
											"end": 6775,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6646,
											"end": 6650,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6684,
											"end": 6686,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6673,
											"end": 6682,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6669,
											"end": 6687,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6661,
											"end": 6687,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6661,
											"end": 6687,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6697,
											"end": 6768,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 6765,
											"end": 6766,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6754,
											"end": 6763,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6750,
											"end": 6767,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6741,
											"end": 6747,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6697,
											"end": 6768,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 6697,
											"end": 6768,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6697,
											"end": 6768,
											"name": "tag",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 6697,
											"end": 6768,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6553,
											"end": 6775,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6553,
											"end": 6775,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6553,
											"end": 6775,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6553,
											"end": 6775,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6553,
											"end": 6775,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6781,
											"end": 7223,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 6781,
											"end": 7223,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6930,
											"end": 6934,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6968,
											"end": 6970,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 6957,
											"end": 6966,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6953,
											"end": 6971,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6945,
											"end": 6971,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6945,
											"end": 6971,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6981,
											"end": 7052,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 7049,
											"end": 7050,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7038,
											"end": 7047,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7034,
											"end": 7051,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7025,
											"end": 7031,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 6981,
											"end": 7052,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 6981,
											"end": 7052,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6981,
											"end": 7052,
											"name": "tag",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 6981,
											"end": 7052,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7062,
											"end": 7134,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 7130,
											"end": 7132,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7119,
											"end": 7128,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7115,
											"end": 7133,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7106,
											"end": 7112,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7062,
											"end": 7134,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 7062,
											"end": 7134,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7062,
											"end": 7134,
											"name": "tag",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 7062,
											"end": 7134,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7144,
											"end": 7216,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 7212,
											"end": 7214,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7201,
											"end": 7210,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7197,
											"end": 7215,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7188,
											"end": 7194,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7144,
											"end": 7216,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 7144,
											"end": 7216,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7144,
											"end": 7216,
											"name": "tag",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 7144,
											"end": 7216,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6781,
											"end": 7223,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 6781,
											"end": 7223,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 6781,
											"end": 7223,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6781,
											"end": 7223,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6781,
											"end": 7223,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6781,
											"end": 7223,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6781,
											"end": 7223,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7229,
											"end": 7561,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 7229,
											"end": 7561,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7350,
											"end": 7354,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7388,
											"end": 7390,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7377,
											"end": 7386,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7373,
											"end": 7391,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7365,
											"end": 7391,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7365,
											"end": 7391,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7401,
											"end": 7472,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 7469,
											"end": 7470,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7458,
											"end": 7467,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7454,
											"end": 7471,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7445,
											"end": 7451,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7401,
											"end": 7472,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 7401,
											"end": 7472,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7401,
											"end": 7472,
											"name": "tag",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 7401,
											"end": 7472,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7482,
											"end": 7554,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 7550,
											"end": 7552,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7539,
											"end": 7548,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7535,
											"end": 7553,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7526,
											"end": 7532,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7482,
											"end": 7554,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 7482,
											"end": 7554,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7482,
											"end": 7554,
											"name": "tag",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 7482,
											"end": 7554,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7229,
											"end": 7561,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 7229,
											"end": 7561,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7229,
											"end": 7561,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7229,
											"end": 7561,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7229,
											"end": 7561,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7229,
											"end": 7561,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7567,
											"end": 7785,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 7567,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7658,
											"end": 7662,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7696,
											"end": 7698,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7685,
											"end": 7694,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7681,
											"end": 7699,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7673,
											"end": 7699,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7673,
											"end": 7699,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7709,
											"end": 7778,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 7775,
											"end": 7776,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7764,
											"end": 7773,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7760,
											"end": 7777,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7751,
											"end": 7757,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7709,
											"end": 7778,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 7709,
											"end": 7778,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7709,
											"end": 7778,
											"name": "tag",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 7709,
											"end": 7778,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7567,
											"end": 7785,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7567,
											"end": 7785,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7567,
											"end": 7785,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7567,
											"end": 7785,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7567,
											"end": 7785,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7791,
											"end": 8041,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 7791,
											"end": 8041,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7898,
											"end": 7902,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7936,
											"end": 7938,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7925,
											"end": 7934,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7921,
											"end": 7939,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7913,
											"end": 7939,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7913,
											"end": 7939,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7949,
											"end": 8034,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 8031,
											"end": 8032,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8020,
											"end": 8029,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8016,
											"end": 8033,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8007,
											"end": 8013,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7949,
											"end": 8034,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 7949,
											"end": 8034,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7949,
											"end": 8034,
											"name": "tag",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 7949,
											"end": 8034,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7791,
											"end": 8041,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7791,
											"end": 8041,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7791,
											"end": 8041,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7791,
											"end": 8041,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7791,
											"end": 8041,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8047,
											"end": 8299,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 8047,
											"end": 8299,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8155,
											"end": 8159,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8193,
											"end": 8195,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8182,
											"end": 8191,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8178,
											"end": 8196,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8170,
											"end": 8196,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8170,
											"end": 8196,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8206,
											"end": 8292,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 8289,
											"end": 8290,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8278,
											"end": 8287,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8274,
											"end": 8291,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8265,
											"end": 8271,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8206,
											"end": 8292,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 8206,
											"end": 8292,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8206,
											"end": 8292,
											"name": "tag",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 8206,
											"end": 8292,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8047,
											"end": 8299,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8047,
											"end": 8299,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8047,
											"end": 8299,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8047,
											"end": 8299,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8047,
											"end": 8299,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8305,
											"end": 8559,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 8305,
											"end": 8559,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8414,
											"end": 8418,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8452,
											"end": 8454,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8441,
											"end": 8450,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8437,
											"end": 8455,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8429,
											"end": 8455,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8429,
											"end": 8455,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8465,
											"end": 8552,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 8549,
											"end": 8550,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8538,
											"end": 8547,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8534,
											"end": 8551,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8525,
											"end": 8531,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8465,
											"end": 8552,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 8465,
											"end": 8552,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8465,
											"end": 8552,
											"name": "tag",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 8465,
											"end": 8552,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8305,
											"end": 8559,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8305,
											"end": 8559,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8305,
											"end": 8559,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8305,
											"end": 8559,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8305,
											"end": 8559,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8565,
											"end": 8984,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 8565,
											"end": 8984,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8731,
											"end": 8735,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8769,
											"end": 8771,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8758,
											"end": 8767,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8754,
											"end": 8772,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8746,
											"end": 8772,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8746,
											"end": 8772,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8818,
											"end": 8827,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8812,
											"end": 8816,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8808,
											"end": 8828,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8804,
											"end": 8805,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8793,
											"end": 8802,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8789,
											"end": 8806,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8782,
											"end": 8829,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8846,
											"end": 8977,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 8972,
											"end": 8976,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8846,
											"end": 8977,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 8846,
											"end": 8977,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8846,
											"end": 8977,
											"name": "tag",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 8846,
											"end": 8977,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8838,
											"end": 8977,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8838,
											"end": 8977,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8565,
											"end": 8984,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8565,
											"end": 8984,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8565,
											"end": 8984,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8565,
											"end": 8984,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8990,
											"end": 9409,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 8990,
											"end": 9409,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9156,
											"end": 9160,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9194,
											"end": 9196,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9183,
											"end": 9192,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9179,
											"end": 9197,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9171,
											"end": 9197,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9171,
											"end": 9197,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9243,
											"end": 9252,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9237,
											"end": 9241,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9233,
											"end": 9253,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9229,
											"end": 9230,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9218,
											"end": 9227,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9214,
											"end": 9231,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9207,
											"end": 9254,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9271,
											"end": 9402,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 9397,
											"end": 9401,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9271,
											"end": 9402,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 9271,
											"end": 9402,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9271,
											"end": 9402,
											"name": "tag",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 9271,
											"end": 9402,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9263,
											"end": 9402,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9263,
											"end": 9402,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8990,
											"end": 9409,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8990,
											"end": 9409,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8990,
											"end": 9409,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8990,
											"end": 9409,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9415,
											"end": 9834,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 9415,
											"end": 9834,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9581,
											"end": 9585,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9619,
											"end": 9621,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9608,
											"end": 9617,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9604,
											"end": 9622,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9596,
											"end": 9622,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9596,
											"end": 9622,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9668,
											"end": 9677,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9662,
											"end": 9666,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9658,
											"end": 9678,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9654,
											"end": 9655,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9643,
											"end": 9652,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9639,
											"end": 9656,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9632,
											"end": 9679,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9696,
											"end": 9827,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 9822,
											"end": 9826,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9696,
											"end": 9827,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 9696,
											"end": 9827,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9696,
											"end": 9827,
											"name": "tag",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 9696,
											"end": 9827,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9688,
											"end": 9827,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9688,
											"end": 9827,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9415,
											"end": 9834,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9415,
											"end": 9834,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9415,
											"end": 9834,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9415,
											"end": 9834,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9840,
											"end": 10259,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 9840,
											"end": 10259,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10010,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10044,
											"end": 10046,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10033,
											"end": 10042,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10029,
											"end": 10047,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10021,
											"end": 10047,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10021,
											"end": 10047,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10093,
											"end": 10102,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10087,
											"end": 10091,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10083,
											"end": 10103,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10079,
											"end": 10080,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10068,
											"end": 10077,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10064,
											"end": 10081,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10057,
											"end": 10104,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10121,
											"end": 10252,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 10247,
											"end": 10251,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10121,
											"end": 10252,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 10121,
											"end": 10252,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10121,
											"end": 10252,
											"name": "tag",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 10121,
											"end": 10252,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10113,
											"end": 10252,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10113,
											"end": 10252,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9840,
											"end": 10259,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9840,
											"end": 10259,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9840,
											"end": 10259,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9840,
											"end": 10259,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10265,
											"end": 10684,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 10265,
											"end": 10684,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10431,
											"end": 10435,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10469,
											"end": 10471,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10458,
											"end": 10467,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10454,
											"end": 10472,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10446,
											"end": 10472,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10446,
											"end": 10472,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10518,
											"end": 10527,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10512,
											"end": 10516,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10528,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10504,
											"end": 10505,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10493,
											"end": 10502,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10489,
											"end": 10506,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10482,
											"end": 10529,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10546,
											"end": 10677,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 10672,
											"end": 10676,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10546,
											"end": 10677,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 10546,
											"end": 10677,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10546,
											"end": 10677,
											"name": "tag",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 10546,
											"end": 10677,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10538,
											"end": 10677,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10538,
											"end": 10677,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10265,
											"end": 10684,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10265,
											"end": 10684,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10265,
											"end": 10684,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10265,
											"end": 10684,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10690,
											"end": 10912,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 10690,
											"end": 10912,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10783,
											"end": 10787,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10821,
											"end": 10823,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10810,
											"end": 10819,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10806,
											"end": 10824,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10798,
											"end": 10824,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10798,
											"end": 10824,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10834,
											"end": 10905,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "289"
										},
										{
											"begin": 10902,
											"end": 10903,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10891,
											"end": 10900,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10887,
											"end": 10904,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10878,
											"end": 10884,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10834,
											"end": 10905,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 10834,
											"end": 10905,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10834,
											"end": 10905,
											"name": "tag",
											"source": 5,
											"value": "289"
										},
										{
											"begin": 10834,
											"end": 10905,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10690,
											"end": 10912,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10690,
											"end": 10912,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10690,
											"end": 10912,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10690,
											"end": 10912,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10690,
											"end": 10912,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10999,
											"end": 11168,
											"name": "tag",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 10999,
											"end": 11168,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11083,
											"end": 11094,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11117,
											"end": 11123,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11112,
											"end": 11115,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11105,
											"end": 11124,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11157,
											"end": 11161,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11152,
											"end": 11155,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11148,
											"end": 11162,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11133,
											"end": 11162,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11133,
											"end": 11162,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10999,
											"end": 11168,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10999,
											"end": 11168,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10999,
											"end": 11168,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10999,
											"end": 11168,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10999,
											"end": 11168,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 11174,
											"end": 11479,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 11174,
											"end": 11479,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11214,
											"end": 11217,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11233,
											"end": 11253,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "294"
										},
										{
											"begin": 11251,
											"end": 11252,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11233,
											"end": 11253,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 11233,
											"end": 11253,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11233,
											"end": 11253,
											"name": "tag",
											"source": 5,
											"value": "294"
										},
										{
											"begin": 11233,
											"end": 11253,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11228,
											"end": 11253,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11228,
											"end": 11253,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11267,
											"end": 11287,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 11285,
											"end": 11286,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11267,
											"end": 11287,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 11267,
											"end": 11287,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11267,
											"end": 11287,
											"name": "tag",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 11267,
											"end": 11287,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11262,
											"end": 11287,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 11262,
											"end": 11287,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11421,
											"end": 11422,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11353,
											"end": 11419,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11349,
											"end": 11423,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 11346,
											"end": 11347,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11343,
											"end": 11424,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 11340,
											"end": 11447,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 11340,
											"end": 11447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 11340,
											"end": 11447,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 11427,
											"end": 11445,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "297"
										},
										{
											"begin": 11427,
											"end": 11445,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "298"
										},
										{
											"begin": 11427,
											"end": 11445,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11427,
											"end": 11445,
											"name": "tag",
											"source": 5,
											"value": "297"
										},
										{
											"begin": 11427,
											"end": 11445,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11340,
											"end": 11447,
											"name": "tag",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 11340,
											"end": 11447,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11471,
											"end": 11472,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11468,
											"end": 11469,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11464,
											"end": 11473,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11457,
											"end": 11473,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11457,
											"end": 11473,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11174,
											"end": 11479,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 11174,
											"end": 11479,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11174,
											"end": 11479,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11174,
											"end": 11479,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11174,
											"end": 11479,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 11485,
											"end": 11676,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 11485,
											"end": 11676,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11525,
											"end": 11529,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11545,
											"end": 11565,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 11563,
											"end": 11564,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11545,
											"end": 11565,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 11545,
											"end": 11565,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11545,
											"end": 11565,
											"name": "tag",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 11545,
											"end": 11565,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11540,
											"end": 11565,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11540,
											"end": 11565,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11579,
											"end": 11599,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 11597,
											"end": 11598,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11579,
											"end": 11599,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 11579,
											"end": 11599,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11579,
											"end": 11599,
											"name": "tag",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 11579,
											"end": 11599,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11574,
											"end": 11599,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 11574,
											"end": 11599,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11618,
											"end": 11619,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11615,
											"end": 11616,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11612,
											"end": 11620,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 11609,
											"end": 11643,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 11609,
											"end": 11643,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "302"
										},
										{
											"begin": 11609,
											"end": 11643,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 11623,
											"end": 11641,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "303"
										},
										{
											"begin": 11623,
											"end": 11641,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "298"
										},
										{
											"begin": 11623,
											"end": 11641,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11623,
											"end": 11641,
											"name": "tag",
											"source": 5,
											"value": "303"
										},
										{
											"begin": 11623,
											"end": 11641,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11609,
											"end": 11643,
											"name": "tag",
											"source": 5,
											"value": "302"
										},
										{
											"begin": 11609,
											"end": 11643,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11668,
											"end": 11669,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11665,
											"end": 11666,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11661,
											"end": 11670,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 11653,
											"end": 11670,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11653,
											"end": 11670,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11485,
											"end": 11676,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 11485,
											"end": 11676,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11485,
											"end": 11676,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11485,
											"end": 11676,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11485,
											"end": 11676,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 11682,
											"end": 11778,
											"name": "tag",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 11682,
											"end": 11778,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11719,
											"end": 11726,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11748,
											"end": 11772,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 11766,
											"end": 11771,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11748,
											"end": 11772,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 11748,
											"end": 11772,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11748,
											"end": 11772,
											"name": "tag",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 11748,
											"end": 11772,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11737,
											"end": 11772,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11737,
											"end": 11772,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11682,
											"end": 11778,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11682,
											"end": 11778,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11682,
											"end": 11778,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11682,
											"end": 11778,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 11784,
											"end": 11874,
											"name": "tag",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 11784,
											"end": 11874,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11818,
											"end": 11825,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11861,
											"end": 11866,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11854,
											"end": 11867,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 11847,
											"end": 11868,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 11836,
											"end": 11868,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11836,
											"end": 11868,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11784,
											"end": 11874,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11784,
											"end": 11874,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11784,
											"end": 11874,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11784,
											"end": 11874,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 11880,
											"end": 12029,
											"name": "tag",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 11880,
											"end": 12029,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11916,
											"end": 11923,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11956,
											"end": 12022,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11949,
											"end": 11954,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11945,
											"end": 12023,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 11934,
											"end": 12023,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11934,
											"end": 12023,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11880,
											"end": 12029,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11880,
											"end": 12029,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11880,
											"end": 12029,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11880,
											"end": 12029,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12035,
											"end": 12161,
											"name": "tag",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 12035,
											"end": 12161,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12072,
											"end": 12079,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12112,
											"end": 12154,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12105,
											"end": 12110,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12101,
											"end": 12155,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 12090,
											"end": 12155,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12090,
											"end": 12155,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12035,
											"end": 12161,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12035,
											"end": 12161,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12035,
											"end": 12161,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12035,
											"end": 12161,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12167,
											"end": 12244,
											"name": "tag",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 12167,
											"end": 12244,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12204,
											"end": 12211,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12233,
											"end": 12238,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12222,
											"end": 12238,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12222,
											"end": 12238,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12167,
											"end": 12244,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12167,
											"end": 12244,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12167,
											"end": 12244,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12167,
											"end": 12244,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12250,
											"end": 12390,
											"name": "tag",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 12250,
											"end": 12390,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12314,
											"end": 12323,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12347,
											"end": 12384,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 12378,
											"end": 12383,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12347,
											"end": 12384,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 12347,
											"end": 12384,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 12347,
											"end": 12384,
											"name": "tag",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 12347,
											"end": 12384,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12334,
											"end": 12384,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12334,
											"end": 12384,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12250,
											"end": 12390,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12250,
											"end": 12390,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12250,
											"end": 12390,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12250,
											"end": 12390,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12396,
											"end": 12537,
											"name": "tag",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 12396,
											"end": 12537,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12461,
											"end": 12470,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12494,
											"end": 12531,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 12525,
											"end": 12530,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12494,
											"end": 12531,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 12494,
											"end": 12531,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 12494,
											"end": 12531,
											"name": "tag",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 12494,
											"end": 12531,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12481,
											"end": 12531,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12481,
											"end": 12531,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12396,
											"end": 12537,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12396,
											"end": 12537,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12396,
											"end": 12537,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12396,
											"end": 12537,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12543,
											"end": 12685,
											"name": "tag",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 12543,
											"end": 12685,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12609,
											"end": 12618,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12642,
											"end": 12679,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "318"
										},
										{
											"begin": 12673,
											"end": 12678,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12642,
											"end": 12679,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 12642,
											"end": 12679,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 12642,
											"end": 12679,
											"name": "tag",
											"source": 5,
											"value": "318"
										},
										{
											"begin": 12642,
											"end": 12679,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12629,
											"end": 12679,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12629,
											"end": 12679,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12543,
											"end": 12685,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12543,
											"end": 12685,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12543,
											"end": 12685,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12543,
											"end": 12685,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12691,
											"end": 12817,
											"name": "tag",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 12691,
											"end": 12817,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12741,
											"end": 12750,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12774,
											"end": 12811,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "320"
										},
										{
											"begin": 12805,
											"end": 12810,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12774,
											"end": 12811,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "321"
										},
										{
											"begin": 12774,
											"end": 12811,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 12774,
											"end": 12811,
											"name": "tag",
											"source": 5,
											"value": "320"
										},
										{
											"begin": 12774,
											"end": 12811,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12761,
											"end": 12811,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12761,
											"end": 12811,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12691,
											"end": 12817,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12691,
											"end": 12817,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12691,
											"end": 12817,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12691,
											"end": 12817,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12823,
											"end": 12936,
											"name": "tag",
											"source": 5,
											"value": "321"
										},
										{
											"begin": 12823,
											"end": 12936,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12873,
											"end": 12882,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12906,
											"end": 12930,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "323"
										},
										{
											"begin": 12924,
											"end": 12929,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12906,
											"end": 12930,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 12906,
											"end": 12930,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 12906,
											"end": 12930,
											"name": "tag",
											"source": 5,
											"value": "323"
										},
										{
											"begin": 12906,
											"end": 12930,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12893,
											"end": 12930,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12893,
											"end": 12930,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12823,
											"end": 12936,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12823,
											"end": 12936,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12823,
											"end": 12936,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12823,
											"end": 12936,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12942,
											"end": 13122,
											"name": "tag",
											"source": 5,
											"value": "298"
										},
										{
											"begin": 12942,
											"end": 13122,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12990,
											"end": 13067,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12987,
											"end": 12988,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12980,
											"end": 13068,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13087,
											"end": 13091,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 13084,
											"end": 13085,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 13077,
											"end": 13092,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13111,
											"end": 13115,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 13108,
											"end": 13109,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13101,
											"end": 13116,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 13128,
											"end": 13245,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 13128,
											"end": 13245,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13237,
											"end": 13238,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13234,
											"end": 13235,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 13227,
											"end": 13239,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 13251,
											"end": 13368,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 13251,
											"end": 13368,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13360,
											"end": 13361,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13357,
											"end": 13358,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 13350,
											"end": 13362,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 13374,
											"end": 13491,
											"name": "tag",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 13374,
											"end": 13491,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13483,
											"end": 13484,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13480,
											"end": 13481,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 13473,
											"end": 13485,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 13497,
											"end": 13614,
											"name": "tag",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 13497,
											"end": 13614,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13606,
											"end": 13607,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13603,
											"end": 13604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 13596,
											"end": 13608,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 13620,
											"end": 13737,
											"name": "tag",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 13620,
											"end": 13737,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13729,
											"end": 13730,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13726,
											"end": 13727,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 13719,
											"end": 13731,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 13743,
											"end": 13903,
											"name": "tag",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 13743,
											"end": 13903,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13883,
											"end": 13895,
											"name": "PUSH",
											"source": 5,
											"value": "4E6F74207374616B656400000000000000000000000000000000000000000000"
										},
										{
											"begin": 13879,
											"end": 13880,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13871,
											"end": 13877,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13867,
											"end": 13881,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13860,
											"end": 13896,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13743,
											"end": 13903,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13743,
											"end": 13903,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 13909,
											"end": 14072,
											"name": "tag",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 13909,
											"end": 14072,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14049,
											"end": 14064,
											"name": "PUSH",
											"source": 5,
											"value": "5472616E73666572206661696C00000000000000000000000000000000000000"
										},
										{
											"begin": 14045,
											"end": 14046,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14037,
											"end": 14043,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14033,
											"end": 14047,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14026,
											"end": 14065,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13909,
											"end": 14072,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13909,
											"end": 14072,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 14078,
											"end": 14241,
											"name": "tag",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 14078,
											"end": 14241,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14218,
											"end": 14233,
											"name": "PUSH",
											"source": 5,
											"value": "4E6F74207265616C4F776E657200000000000000000000000000000000000000"
										},
										{
											"begin": 14214,
											"end": 14215,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14206,
											"end": 14212,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14202,
											"end": 14216,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14195,
											"end": 14234,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14078,
											"end": 14241,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14078,
											"end": 14241,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 14247,
											"end": 14406,
											"name": "tag",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 14247,
											"end": 14406,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14387,
											"end": 14398,
											"name": "PUSH",
											"source": 5,
											"value": "4E6F74206F776E65720000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14383,
											"end": 14384,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14375,
											"end": 14381,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14371,
											"end": 14385,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14364,
											"end": 14399,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14247,
											"end": 14406,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14247,
											"end": 14406,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 14412,
											"end": 14593,
											"name": "tag",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 14412,
											"end": 14593,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14552,
											"end": 14585,
											"name": "PUSH",
											"source": 5,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 14548,
											"end": 14549,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14540,
											"end": 14546,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14536,
											"end": 14550,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14529,
											"end": 14586,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14412,
											"end": 14593,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14412,
											"end": 14593,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 14599,
											"end": 14721,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 14599,
											"end": 14721,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14672,
											"end": 14696,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "336"
										},
										{
											"begin": 14690,
											"end": 14695,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14672,
											"end": 14696,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 14672,
											"end": 14696,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 14672,
											"end": 14696,
											"name": "tag",
											"source": 5,
											"value": "336"
										},
										{
											"begin": 14672,
											"end": 14696,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14665,
											"end": 14670,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14662,
											"end": 14697,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 14652,
											"end": 14715,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "337"
										},
										{
											"begin": 14652,
											"end": 14715,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 14711,
											"end": 14712,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14708,
											"end": 14709,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 14701,
											"end": 14713,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 14652,
											"end": 14715,
											"name": "tag",
											"source": 5,
											"value": "337"
										},
										{
											"begin": 14652,
											"end": 14715,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14599,
											"end": 14721,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14599,
											"end": 14721,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 14727,
											"end": 14843,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 14727,
											"end": 14843,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14797,
											"end": 14818,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "339"
										},
										{
											"begin": 14812,
											"end": 14817,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14797,
											"end": 14818,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 14797,
											"end": 14818,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 14797,
											"end": 14818,
											"name": "tag",
											"source": 5,
											"value": "339"
										},
										{
											"begin": 14797,
											"end": 14818,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14790,
											"end": 14795,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14787,
											"end": 14819,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 14777,
											"end": 14837,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "340"
										},
										{
											"begin": 14777,
											"end": 14837,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 14833,
											"end": 14834,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14830,
											"end": 14831,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 14823,
											"end": 14835,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 14777,
											"end": 14837,
											"name": "tag",
											"source": 5,
											"value": "340"
										},
										{
											"begin": 14777,
											"end": 14837,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14727,
											"end": 14843,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14727,
											"end": 14843,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 14849,
											"end": 14971,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 14849,
											"end": 14971,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14922,
											"end": 14946,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "342"
										},
										{
											"begin": 14940,
											"end": 14945,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14922,
											"end": 14946,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 14922,
											"end": 14946,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 14922,
											"end": 14946,
											"name": "tag",
											"source": 5,
											"value": "342"
										},
										{
											"begin": 14922,
											"end": 14946,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14915,
											"end": 14920,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14912,
											"end": 14947,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 14902,
											"end": 14965,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "343"
										},
										{
											"begin": 14902,
											"end": 14965,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 14961,
											"end": 14962,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14958,
											"end": 14959,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 14951,
											"end": 14963,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 14902,
											"end": 14965,
											"name": "tag",
											"source": 5,
											"value": "343"
										},
										{
											"begin": 14902,
											"end": 14965,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14849,
											"end": 14971,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14849,
											"end": 14971,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"claim(uint256)": "379607f5",
							"claimedTrophies(uint256)": "53eebc6d",
							"onERC721Received(address,address,uint256,uint256,bytes)": "7636e245",
							"parentNFT()": "b8e33fb2",
							"parentNFTAddress()": "66bb863b",
							"parentNftFunctions()": "fead3d6e",
							"parentToken()": "80a54001",
							"refreshTrophies(uint256)": "0eeadd30",
							"stake(uint256)": "a694fc3a",
							"unstake(uint256)": "2e17de78"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenContract\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenID\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenID\",\"type\":\"uint256\"}],\"name\":\"claimedTrophies\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"parentNFT\",\"outputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"parentNFTAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"parentNftFunctions\",\"outputs\":[{\"internalType\":\"contract INFTGame\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"parentToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenID\",\"type\":\"uint256\"}],\"name\":\"refreshTrophies\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenID\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenID\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/StakingNFT.sol\":\"Staking\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x516a22876c1fab47f49b1bc22b4614491cd05338af8bd2e7b382da090a079990\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a439187f7126d31add4557f82d8aed6be0162007cd7182c48fd934dbab8f3849\",\"dweb:/ipfs/QmRPLguRFvrRJS7r6F1bcLvsx6q1VrgjEpZafyeL8D7xZh\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/StakingNFT.sol\":{\"keccak256\":\"0x990b2b8fcb3a9a16ffba982f6e3c54c686aa424faeebdbf2984c3ba95d3feace\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af38f3e5997ad501d52024f808d29733560bdcbc02b08de20ffef79f6d069d56\",\"dweb:/ipfs/QmUcZgwiG2eL3atHro8XrZM8sEjjtYBApzuQQM7KLtGXnY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "contracts/StakingNFT.sol:Staking",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 263,
								"contract": "contracts/StakingNFT.sol:Staking",
								"label": "parentToken",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)117"
							},
							{
								"astId": 266,
								"contract": "contracts/StakingNFT.sol:Staking",
								"label": "parentNFT",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC721)233"
							},
							{
								"astId": 269,
								"contract": "contracts/StakingNFT.sol:Staking",
								"label": "parentNftFunctions",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(INFTGame)258"
							},
							{
								"astId": 271,
								"contract": "contracts/StakingNFT.sol:Staking",
								"label": "parentNFTAddress",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							},
							{
								"astId": 318,
								"contract": "contracts/StakingNFT.sol:Staking",
								"label": "s_stakeReview",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_uint256,t_struct(StakeReview)325_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)117": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_contract(IERC721)233": {
								"encoding": "inplace",
								"label": "contract IERC721",
								"numberOfBytes": "20"
							},
							"t_contract(INFTGame)258": {
								"encoding": "inplace",
								"label": "contract INFTGame",
								"numberOfBytes": "20"
							},
							"t_mapping(t_uint256,t_struct(StakeReview)325_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Staking.StakeReview)",
								"numberOfBytes": "32",
								"value": "t_struct(StakeReview)325_storage"
							},
							"t_struct(StakeReview)325_storage": {
								"encoding": "inplace",
								"label": "struct Staking.StakeReview",
								"members": [
									{
										"astId": 320,
										"contract": "contracts/StakingNFT.sol:Staking",
										"label": "realOwner",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 322,
										"contract": "contracts/StakingNFT.sol:Staking",
										"label": "claimedTrophies",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 324,
										"contract": "contracts/StakingNFT.sol:Staking",
										"label": "lastClaimTime",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/StakingNFT.sol:82:9:\n   |\n82 |         address operator,\n   |         ^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 3467,
					"file": "contracts/StakingNFT.sol",
					"start": 3451
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/StakingNFT.sol:83:9:\n   |\n83 |         address from,\n   |         ^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 3490,
					"file": "contracts/StakingNFT.sol",
					"start": 3478
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/StakingNFT.sol:84:9:\n   |\n84 |         uint256 id,\n   |         ^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 3511,
					"file": "contracts/StakingNFT.sol",
					"start": 3501
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/StakingNFT.sol:85:9:\n   |\n85 |         uint256 value,\n   |         ^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 3535,
					"file": "contracts/StakingNFT.sol",
					"start": 3522
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/StakingNFT.sol:86:9:\n   |\n86 |         bytes calldata data\n   |         ^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 3565,
					"file": "contracts/StakingNFT.sol",
					"start": 3546
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n  --> contracts/StakingNFT.sol:81:1:\n   |\n81 | function onERC721Received(\n   | ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 3701,
					"file": "contracts/StakingNFT.sol",
					"start": 3415
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							39
						]
					},
					"id": 40,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "97:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "122:750:0",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 39,
							"linearizedBaseContracts": [
								39
							],
							"name": "ReentrancyGuard",
							"nameLocation": "891:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 5,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1686:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 39,
									"src": "1661:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1661:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 4,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1701:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 8,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1733:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 39,
									"src": "1708:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 6,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1708:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 7,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1744:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 10,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1768:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 39,
									"src": "1752:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 9,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1752:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 17,
										"nodeType": "Block",
										"src": "1796:39:0",
										"statements": [
											{
												"expression": {
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 13,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "1806:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 14,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "1816:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1806:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "1806:22:0"
											}
										]
									},
									"id": 18,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1796:0:0"
									},
									"scope": 39,
									"src": "1782:53:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 37,
										"nodeType": "Block",
										"src": "2236:421:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 24,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 22,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "2325:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 23,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 8,
																"src": "2336:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2325:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 25,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2346:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 21,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2317:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2317:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 27,
												"nodeType": "ExpressionStatement",
												"src": "2317:63:0"
											},
											{
												"expression": {
													"id": 30,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 28,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2455:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 29,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "2465:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2455:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 31,
												"nodeType": "ExpressionStatement",
												"src": "2455:18:0"
											},
											{
												"id": 32,
												"nodeType": "PlaceholderStatement",
												"src": "2484:1:0"
											},
											{
												"expression": {
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 33,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2628:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 34,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "2638:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2628:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 36,
												"nodeType": "ExpressionStatement",
												"src": "2628:22:0"
											}
										]
									},
									"documentation": {
										"id": 19,
										"nodeType": "StructuredDocumentation",
										"src": "1841:366:0",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 38,
									"name": "nonReentrant",
									"nameLocation": "2221:12:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2233:2:0"
									},
									"src": "2212:445:0",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 40,
							"src": "873:1786:0",
							"usedErrors": []
						}
					],
					"src": "97:2563:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							117
						]
					},
					"id": 118,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 41,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 117,
							"linearizedBaseContracts": [
								117
							],
							"name": "IERC20",
							"nameLocation": "212:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 51,
									"name": "Transfer",
									"nameLocation": "394:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "403:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 47,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "425:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "445:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 48,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:1"
									},
									"src": "388:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 52,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 60,
									"name": "Approval",
									"nameLocation": "625:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "634:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 53,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "657:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 58,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "682:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 57,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:1"
									},
									"src": "619:78:1"
								},
								{
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 66,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 63,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 117,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 74,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 117,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 84,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "1211:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 76,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "1223:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 78,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:1"
									},
									"returnParameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "1257:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 81,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:1"
									},
									"scope": 117,
									"src": "1193:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 94,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1557:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1572:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 88,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:1"
									},
									"returnParameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 91,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:1"
									},
									"scope": 117,
									"src": "1538:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 95,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 104,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "2291:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 96,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "2308:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:1"
									},
									"returnParameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "2342:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 101,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:1"
									},
									"scope": 117,
									"src": "2274:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 116,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "2677:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "2699:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "2719:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:1"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "2758:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 113,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:1"
									},
									"scope": 117,
									"src": "2646:118:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 118,
							"src": "202:2564:1",
							"usedErrors": []
						}
					],
					"src": "106:2661:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							245
						],
						"IERC721": [
							233
						]
					},
					"id": 234,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 119,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "93:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 120,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 234,
							"sourceUnit": 246,
							"src": "118:47:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 122,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 245,
										"src": "256:7:2"
									},
									"id": 123,
									"nodeType": "InheritanceSpecifier",
									"src": "256:7:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 121,
								"nodeType": "StructuredDocumentation",
								"src": "167:67:2",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 233,
							"linearizedBaseContracts": [
								233,
								245
							],
							"name": "IERC721",
							"nameLocation": "245:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "270:88:2",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"id": 132,
									"name": "Transfer",
									"nameLocation": "369:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "394:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "378:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "378:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 128,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "416:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "400:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "400:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 130,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "436:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "420:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "420:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "377:67:2"
									},
									"src": "363:82:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "451:94:2",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"id": 141,
									"name": "Approval",
									"nameLocation": "556:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "581:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "565:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "565:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "604:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "588:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "588:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 139,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "630:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "614:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "614:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "564:74:2"
									},
									"src": "550:89:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 142,
										"nodeType": "StructuredDocumentation",
										"src": "645:117:2",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"id": 150,
									"name": "ApprovalForAll",
									"nameLocation": "773:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "804:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "788:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "788:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 146,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "827:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "811:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "811:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 148,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "842:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "837:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 147,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "837:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "787:64:2"
									},
									"src": "767:85:2"
								},
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "858:76:2",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 158,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "948:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "966:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "958:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "958:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "957:15:2"
									},
									"returnParameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1004:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "996:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "996:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "995:17:2"
									},
									"scope": 233,
									"src": "939:74:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "1019:131:2",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 166,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1164:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1180:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "1172:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1172:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1171:17:2"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1220:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "1212:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1212:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1211:15:2"
									},
									"scope": 233,
									"src": "1155:72:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "1233:690:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 176,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1937:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1971:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "1963:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1963:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1993:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "1985:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1985:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2013:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "2005:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2005:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1953:73:2"
									},
									"returnParameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2035:0:2"
									},
									"scope": 233,
									"src": "1928:108:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 177,
										"nodeType": "StructuredDocumentation",
										"src": "2042:504:2",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 186,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2560:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2590:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "2582:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2582:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2612:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "2604:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2604:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2632:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "2624:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2624:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2572:73:2"
									},
									"returnParameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2654:0:2"
									},
									"scope": 233,
									"src": "2551:104:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 187,
										"nodeType": "StructuredDocumentation",
										"src": "2661:452:2",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 194,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3127:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3143:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "3135:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 188,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3155:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "3147:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3147:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:29:2"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3172:0:2"
									},
									"scope": 233,
									"src": "3118:55:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 195,
										"nodeType": "StructuredDocumentation",
										"src": "3179:139:2",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 202,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3332:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3352:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "3344:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3344:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3343:17:2"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3392:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "3384:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3384:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:18:2"
									},
									"scope": 233,
									"src": "3323:79:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "3408:309:2",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 210,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3731:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3757:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "3749:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3749:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "3772:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "3767:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 206,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3767:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3748:34:2"
									},
									"returnParameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3791:0:2"
									},
									"scope": 233,
									"src": "3722:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 211,
										"nodeType": "StructuredDocumentation",
										"src": "3798:138:2",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 220,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3950:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3975:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3967:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3967:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3990:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3982:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3982:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3966:33:2"
									},
									"returnParameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "4023:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 217,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4023:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4022:6:2"
									},
									"scope": 233,
									"src": "3941:88:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "4035:556:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 232,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4605:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4639:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "4631:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4631:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4661:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "4653:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4653:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4681:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "4673:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 226,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4673:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4713:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "4698:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 228,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4698:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4621:102:2"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4732:0:2"
									},
									"scope": 233,
									"src": "4596:137:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 234,
							"src": "235:4500:2",
							"usedErrors": []
						}
					],
					"src": "93:4643:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							245
						]
					},
					"id": 246,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 235,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 236,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:3",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 245,
							"linearizedBaseContracts": [
								245
							],
							"name": "IERC165",
							"nameLocation": "415:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 237,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:3",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 244,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "801:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 238,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:3"
									},
									"returnParameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "844:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 241,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:3"
									},
									"scope": 245,
									"src": "774:76:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 246,
							"src": "405:447:3",
							"usedErrors": []
						}
					],
					"src": "100:753:3"
				},
				"id": 3
			},
			"contracts/StakingNFT.sol": {
				"ast": {
					"absolutePath": "contracts/StakingNFT.sol",
					"exportedSymbols": {
						"IERC165": [
							245
						],
						"IERC20": [
							117
						],
						"IERC721": [
							233
						],
						"INFTGame": [
							258
						],
						"ReentrancyGuard": [
							39
						],
						"Staking": [
							633
						]
					},
					"id": 634,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 247,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 248,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 634,
							"sourceUnit": 40,
							"src": "64:62:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 249,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 634,
							"sourceUnit": 118,
							"src": "128:56:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"id": 250,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 634,
							"sourceUnit": 234,
							"src": "186:58:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 258,
							"linearizedBaseContracts": [
								258
							],
							"name": "INFTGame",
							"nameLocation": "258:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "a0c4442d",
									"id": 257,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTrophies",
									"nameLocation": "286:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "298:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "298:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "297:9:4"
									},
									"returnParameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "325:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "325:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:9:4"
									},
									"scope": 258,
									"src": "277:57:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 634,
							"src": "248:89:4",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 259,
										"name": "ReentrancyGuard",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 39,
										"src": "361:15:4"
									},
									"id": 260,
									"nodeType": "InheritanceSpecifier",
									"src": "361:15:4"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 633,
							"linearizedBaseContracts": [
								633,
								39
							],
							"name": "Staking",
							"nameLocation": "350:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "80a54001",
									"id": 263,
									"mutability": "mutable",
									"name": "parentToken",
									"nameLocation": "398:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 633,
									"src": "384:25:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$117",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 262,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 261,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 117,
											"src": "384:6:4"
										},
										"referencedDeclaration": 117,
										"src": "384:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$117",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b8e33fb2",
									"id": 266,
									"mutability": "mutable",
									"name": "parentNFT",
									"nameLocation": "431:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 633,
									"src": "416:24:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC721_$233",
										"typeString": "contract IERC721"
									},
									"typeName": {
										"id": 265,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 264,
											"name": "IERC721",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 233,
											"src": "416:7:4"
										},
										"referencedDeclaration": 233,
										"src": "416:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC721_$233",
											"typeString": "contract IERC721"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fead3d6e",
									"id": 269,
									"mutability": "mutable",
									"name": "parentNftFunctions",
									"nameLocation": "463:18:4",
									"nodeType": "VariableDeclaration",
									"scope": 633,
									"src": "447:34:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_INFTGame_$258",
										"typeString": "contract INFTGame"
									},
									"typeName": {
										"id": 268,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 267,
											"name": "INFTGame",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 258,
											"src": "447:8:4"
										},
										"referencedDeclaration": 258,
										"src": "447:8:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_INFTGame_$258",
											"typeString": "contract INFTGame"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "66bb863b",
									"id": 271,
									"mutability": "mutable",
									"name": "parentNFTAddress",
									"nameLocation": "503:16:4",
									"nodeType": "VariableDeclaration",
									"scope": 633,
									"src": "488:31:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 270,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "488:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 300,
										"nodeType": "Block",
										"src": "583:197:4",
										"statements": [
											{
												"expression": {
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 278,
														"name": "parentNFT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "594:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$233",
															"typeString": "contract IERC721"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 280,
																"name": "_nftContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 273,
																"src": "614:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 279,
															"name": "IERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "606:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC721_$233_$",
																"typeString": "type(contract IERC721)"
															}
														},
														"id": 281,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "606:21:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$233",
															"typeString": "contract IERC721"
														}
													},
													"src": "594:33:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721_$233",
														"typeString": "contract IERC721"
													}
												},
												"id": 283,
												"nodeType": "ExpressionStatement",
												"src": "594:33:4"
											},
											{
												"expression": {
													"id": 288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 284,
														"name": "parentNftFunctions",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 269,
														"src": "638:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_INFTGame_$258",
															"typeString": "contract INFTGame"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 286,
																"name": "_nftContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 273,
																"src": "668:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 285,
															"name": "INFTGame",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 258,
															"src": "659:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_INFTGame_$258_$",
																"typeString": "type(contract INFTGame)"
															}
														},
														"id": 287,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "659:22:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_INFTGame_$258",
															"typeString": "contract INFTGame"
														}
													},
													"src": "638:43:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_INFTGame_$258",
														"typeString": "contract INFTGame"
													}
												},
												"id": 289,
												"nodeType": "ExpressionStatement",
												"src": "638:43:4"
											},
											{
												"expression": {
													"id": 294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 290,
														"name": "parentToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 263,
														"src": "692:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$117",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 292,
																"name": "_tokenContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 275,
																"src": "713:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 291,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "706:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$117_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 293,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "706:22:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$117",
															"typeString": "contract IERC20"
														}
													},
													"src": "692:36:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$117",
														"typeString": "contract IERC20"
													}
												},
												"id": 295,
												"nodeType": "ExpressionStatement",
												"src": "692:36:4"
											},
											{
												"expression": {
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 296,
														"name": "parentNFTAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 271,
														"src": "739:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 297,
														"name": "_nftContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 273,
														"src": "758:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "739:31:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 299,
												"nodeType": "ExpressionStatement",
												"src": "739:31:4"
											}
										]
									},
									"id": 301,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "_nftContract",
												"nameLocation": "546:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "538:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "538:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "_tokenContract",
												"nameLocation": "568:14:4",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "560:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "560:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "537:46:4"
									},
									"returnParameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "583:0:4"
									},
									"scope": 633,
									"src": "526:254:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 312,
										"nodeType": "Block",
										"src": "803:85:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 304,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "822:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 305,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "822:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 306,
																"name": "parentNFTAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 271,
																"src": "836:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "822:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420616c6c6f776564",
															"id": 308,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "854:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd",
																"typeString": "literal_string \"Not allowed\""
															},
															"value": "Not allowed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd",
																"typeString": "literal_string \"Not allowed\""
															}
														],
														"id": 303,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "814:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "814:54:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 310,
												"nodeType": "ExpressionStatement",
												"src": "814:54:4"
											},
											{
												"id": 311,
												"nodeType": "PlaceholderStatement",
												"src": "879:1:4"
											}
										]
									},
									"id": 313,
									"name": "onlyMain",
									"nameLocation": "795:8:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "803:0:4"
									},
									"src": "786:102:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 318,
									"mutability": "mutable",
									"name": "s_stakeReview",
									"nameLocation": "927:13:4",
									"nodeType": "VariableDeclaration",
									"scope": 633,
									"src": "894:46:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeReview_$325_storage_$",
										"typeString": "mapping(uint256 => struct Staking.StakeReview)"
									},
									"typeName": {
										"id": 317,
										"keyType": {
											"id": 314,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "903:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "894:32:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeReview_$325_storage_$",
											"typeString": "mapping(uint256 => struct Staking.StakeReview)"
										},
										"valueType": {
											"id": 316,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 315,
												"name": "StakeReview",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 325,
												"src": "914:11:4"
											},
											"referencedDeclaration": 325,
											"src": "914:11:4",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_StakeReview_$325_storage_ptr",
												"typeString": "struct Staking.StakeReview"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "Staking.StakeReview",
									"id": 325,
									"members": [
										{
											"constant": false,
											"id": 320,
											"mutability": "mutable",
											"name": "realOwner",
											"nameLocation": "988:9:4",
											"nodeType": "VariableDeclaration",
											"scope": 325,
											"src": "980:17:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 319,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "980:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 322,
											"mutability": "mutable",
											"name": "claimedTrophies",
											"nameLocation": "1016:15:4",
											"nodeType": "VariableDeclaration",
											"scope": 325,
											"src": "1008:23:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 321,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1008:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 324,
											"mutability": "mutable",
											"name": "lastClaimTime",
											"nameLocation": "1050:13:4",
											"nodeType": "VariableDeclaration",
											"scope": 325,
											"src": "1042:21:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 323,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1042:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StakeReview",
									"nameLocation": "958:11:4",
									"nodeType": "StructDefinition",
									"scope": 633,
									"src": "951:121:4",
									"visibility": "public"
								},
								{
									"body": {
										"id": 340,
										"nodeType": "Block",
										"src": "1128:109:4",
										"statements": [
											{
												"expression": {
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 330,
																"name": "s_stakeReview",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 318,
																"src": "1138:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeReview_$325_storage_$",
																	"typeString": "mapping(uint256 => struct Staking.StakeReview storage ref)"
																}
															},
															"id": 332,
															"indexExpression": {
																"id": 331,
																"name": "_tokenID",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 327,
																"src": "1152:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1138:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeReview_$325_storage",
																"typeString": "struct Staking.StakeReview storage ref"
															}
														},
														"id": 333,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "claimedTrophies",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 322,
														"src": "1138:39:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 336,
																"name": "_tokenID",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 327,
																"src": "1211:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 334,
																"name": "parentNftFunctions",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 269,
																"src": "1180:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_INFTGame_$258",
																	"typeString": "contract INFTGame"
																}
															},
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "getTrophies",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 257,
															"src": "1180:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256) external returns (uint256)"
															}
														},
														"id": 337,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1180:40:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1138:82:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 339,
												"nodeType": "ExpressionStatement",
												"src": "1138:82:4"
											}
										]
									},
									"functionSelector": "0eeadd30",
									"id": 341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "refreshTrophies",
									"nameLocation": "1087:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "_tokenID",
												"nameLocation": "1111:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "1103:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1103:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1102:18:4"
									},
									"returnParameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1128:0:4"
									},
									"scope": 633,
									"src": "1078:159:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "1315:65:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 348,
															"name": "s_stakeReview",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 318,
															"src": "1333:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeReview_$325_storage_$",
																"typeString": "mapping(uint256 => struct Staking.StakeReview storage ref)"
															}
														},
														"id": 350,
														"indexExpression": {
															"id": 349,
															"name": "_tokenID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 343,
															"src": "1347:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1333:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeReview_$325_storage",
															"typeString": "struct Staking.StakeReview storage ref"
														}
													},
													"id": 351,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "claimedTrophies",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 322,
													"src": "1333:39:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 347,
												"id": 352,
												"nodeType": "Return",
												"src": "1326:46:4"
											}
										]
									},
									"functionSelector": "53eebc6d",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claimedTrophies",
									"nameLocation": "1252:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "_tokenID",
												"nameLocation": "1276:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "1268:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1268:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:18:4"
									},
									"returnParameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "1307:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1307:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1306:9:4"
									},
									"scope": 633,
									"src": "1243:137:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 400,
										"nodeType": "Block",
										"src": "1441:285:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 368,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 364,
																		"name": "_tokenID",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 356,
																		"src": "1478:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 362,
																		"name": "parentNFT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 266,
																		"src": "1460:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721_$233",
																			"typeString": "contract IERC721"
																		}
																	},
																	"id": 363,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 166,
																	"src": "1460:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view external returns (address)"
																	}
																},
																"id": 365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1460:27:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 366,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1491:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 367,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1491:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1460:41:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f74206f776e6572",
															"id": 369,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1503:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682",
																"typeString": "literal_string \"Not owner\""
															},
															"value": "Not owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682",
																"typeString": "literal_string \"Not owner\""
															}
														],
														"id": 361,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1452:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1452:63:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 371,
												"nodeType": "ExpressionStatement",
												"src": "1452:63:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 375,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1559:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1559:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 379,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1579:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Staking_$633",
																		"typeString": "contract Staking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Staking_$633",
																		"typeString": "contract Staking"
																	}
																],
																"id": 378,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1571:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 377,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1571:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1571:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 381,
															"name": "_tokenID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 356,
															"src": "1586:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 372,
															"name": "parentNFT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 266,
															"src": "1536:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$233",
																"typeString": "contract IERC721"
															}
														},
														"id": 374,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 186,
														"src": "1536:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1536:59:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 383,
												"nodeType": "ExpressionStatement",
												"src": "1536:59:4"
											},
											{
												"expression": {
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 384,
																"name": "s_stakeReview",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 318,
																"src": "1606:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeReview_$325_storage_$",
																	"typeString": "mapping(uint256 => struct Staking.StakeReview storage ref)"
																}
															},
															"id": 386,
															"indexExpression": {
																"id": 385,
																"name": "_tokenID",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 356,
																"src": "1620:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1606:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeReview_$325_storage",
																"typeString": "struct Staking.StakeReview storage ref"
															}
														},
														"id": 387,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "realOwner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 320,
														"src": "1606:33:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 388,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1642:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 389,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1642:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1606:46:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 391,
												"nodeType": "ExpressionStatement",
												"src": "1606:46:4"
											},
											{
												"expression": {
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 392,
																"name": "s_stakeReview",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 318,
																"src": "1663:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeReview_$325_storage_$",
																	"typeString": "mapping(uint256 => struct Staking.StakeReview storage ref)"
																}
															},
															"id": 394,
															"indexExpression": {
																"id": 393,
																"name": "_tokenID",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 356,
																"src": "1677:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1663:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeReview_$325_storage",
																"typeString": "struct Staking.StakeReview storage ref"
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastClaimTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 324,
														"src": "1663:37:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 396,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1703:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 397,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1703:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1663:55:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 399,
												"nodeType": "ExpressionStatement",
												"src": "1663:55:4"
											}
										]
									},
									"functionSelector": "a694fc3a",
									"id": 401,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 359,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 358,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "1426:12:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1426:14:4"
										}
									],
									"name": "stake",
									"nameLocation": "1395:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "_tokenID",
												"nameLocation": "1409:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "1401:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1401:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1400:18:4"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1441:0:4"
									},
									"scope": 633,
									"src": "1386:340:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 497,
										"nodeType": "Block",
										"src": "1791:743:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 409,
																		"name": "s_stakeReview",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 318,
																		"src": "1810:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeReview_$325_storage_$",
																			"typeString": "mapping(uint256 => struct Staking.StakeReview storage ref)"
																		}
																	},
																	"id": 411,
																	"indexExpression": {
																		"id": 410,
																		"name": "_tokenID",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 403,
																		"src": "1824:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1810:23:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakeReview_$325_storage",
																		"typeString": "struct Staking.StakeReview storage ref"
																	}
																},
																"id": 412,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "lastClaimTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 324,
																"src": "1810:37:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 413,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1850:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1810:41:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 408,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1802:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1802:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 416,
												"nodeType": "ExpressionStatement",
												"src": "1802:51:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 424,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 418,
																		"name": "s_stakeReview",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 318,
																		"src": "1872:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeReview_$325_storage_$",
																			"typeString": "mapping(uint256 => struct Staking.StakeReview storage ref)"
																		}
																	},
																	"id": 420,
																	"indexExpression": {
																		"id": 419,
																		"name": "_tokenID",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 403,
																		"src": "1886:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1872:23:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakeReview_$325_storage",
																		"typeString": "struct Staking.StakeReview storage ref"
																	}
																},
																"id": 421,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "realOwner",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 320,
																"src": "1872:33:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 422,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1909:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 423,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1909:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1872:47:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 417,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1864:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1864:56:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 426,
												"nodeType": "ExpressionStatement",
												"src": "1864:56:4"
											},
											{
												"expression": {
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 427,
																"name": "s_stakeReview",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 318,
																"src": "1933:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeReview_$325_storage_$",
																	"typeString": "mapping(uint256 => struct Staking.StakeReview storage ref)"
																}
															},
															"id": 429,
															"indexExpression": {
																"id": 428,
																"name": "_tokenID",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 403,
																"src": "1947:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1933:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeReview_$325_storage",
																"typeString": "struct Staking.StakeReview storage ref"
															}
														},
														"id": 430,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "claimedTrophies",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 322,
														"src": "1933:39:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 433,
																"name": "_tokenID",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 403,
																"src": "2006:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 431,
																"name": "parentNftFunctions",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 269,
																"src": "1975:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_INFTGame_$258",
																	"typeString": "contract INFTGame"
																}
															},
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "getTrophies",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 257,
															"src": "1975:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256) external returns (uint256)"
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1975:40:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1933:82:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 436,
												"nodeType": "ExpressionStatement",
												"src": "1933:82:4"
											},
											{
												"assignments": [
													438
												],
												"declarations": [
													{
														"constant": false,
														"id": 438,
														"mutability": "mutable",
														"name": "currentTrophies",
														"nameLocation": "2034:15:4",
														"nodeType": "VariableDeclaration",
														"scope": 497,
														"src": "2026:23:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 437,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2026:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 443,
												"initialValue": {
													"arguments": [
														{
															"id": 441,
															"name": "_tokenID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "2083:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 439,
															"name": "parentNftFunctions",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 269,
															"src": "2052:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_INFTGame_$258",
																"typeString": "contract INFTGame"
															}
														},
														"id": 440,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getTrophies",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 257,
														"src": "2052:30:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) external returns (uint256)"
														}
													},
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2052:40:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2026:66:4"
											},
											{
												"assignments": [
													445
												],
												"declarations": [
													{
														"constant": false,
														"id": 445,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "2111:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 497,
														"src": "2103:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 444,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2103:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 463,
												"initialValue": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 461,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 452,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 446,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "2122:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 447,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"src": "2122:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 448,
																					"name": "s_stakeReview",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 318,
																					"src": "2140:13:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeReview_$325_storage_$",
																						"typeString": "mapping(uint256 => struct Staking.StakeReview storage ref)"
																					}
																				},
																				"id": 450,
																				"indexExpression": {
																					"id": 449,
																					"name": "_tokenID",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 403,
																					"src": "2154:8:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "2140:23:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_StakeReview_$325_storage",
																					"typeString": "struct Staking.StakeReview storage ref"
																				}
																			},
																			"id": 451,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "lastClaimTime",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 324,
																			"src": "2140:37:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2122:55:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 453,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2121:57:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 459,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 454,
																			"name": "currentTrophies",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 438,
																			"src": "2182:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 455,
																					"name": "s_stakeReview",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 318,
																					"src": "2200:13:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeReview_$325_storage_$",
																						"typeString": "mapping(uint256 => struct Staking.StakeReview storage ref)"
																					}
																				},
																				"id": 457,
																				"indexExpression": {
																					"id": 456,
																					"name": "_tokenID",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 403,
																					"src": "2214:8:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "2200:23:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_StakeReview_$325_storage",
																					"typeString": "struct Staking.StakeReview storage ref"
																				}
																			},
																			"id": 458,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "claimedTrophies",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 322,
																			"src": "2200:39:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2182:57:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 460,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2181:59:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2121:119:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 462,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2120:122:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2103:139:4"
											},
											{
												"condition": {
													"arguments": [
														{
															"expression": {
																"id": 466,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2278:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 467,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2278:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 468,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "2290:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 464,
															"name": "parentToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 263,
															"src": "2257:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$117",
																"typeString": "contract IERC20"
															}
														},
														"id": 465,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 84,
														"src": "2257:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2257:40:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"expression": {
														"arguments": [
															{
																"hexValue": "5472616e73666572206661696c",
																"id": 493,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2510:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_16c777a58f6e3d980b39cb8f48eb79a80df895169ab129c60d82e2c36ce3881f",
																	"typeString": "literal_string \"Transfer fail\""
																},
																"value": "Transfer fail"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_16c777a58f6e3d980b39cb8f48eb79a80df895169ab129c60d82e2c36ce3881f",
																	"typeString": "literal_string \"Transfer fail\""
																}
															],
															"id": 492,
															"name": "revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																4294967277,
																4294967277
															],
															"referencedDeclaration": 4294967277,
															"src": "2503:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																"typeString": "function (string memory) pure"
															}
														},
														"id": 494,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2503:23:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 495,
													"nodeType": "ExpressionStatement",
													"src": "2503:23:4"
												},
												"id": 496,
												"nodeType": "IfStatement",
												"src": "2253:273:4",
												"trueBody": {
													"id": 491,
													"nodeType": "Block",
													"src": "2298:199:4",
													"statements": [
														{
															"expression": {
																"id": 476,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 470,
																			"name": "s_stakeReview",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 318,
																			"src": "2313:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeReview_$325_storage_$",
																				"typeString": "mapping(uint256 => struct Staking.StakeReview storage ref)"
																			}
																		},
																		"id": 472,
																		"indexExpression": {
																			"id": 471,
																			"name": "_tokenID",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 403,
																			"src": "2327:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2313:23:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StakeReview_$325_storage",
																			"typeString": "struct Staking.StakeReview storage ref"
																		}
																	},
																	"id": 473,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "lastClaimTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 324,
																	"src": "2313:37:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 474,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "2353:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 475,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "2353:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2313:55:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 477,
															"nodeType": "ExpressionStatement",
															"src": "2313:55:4"
														},
														{
															"expression": {
																"id": 489,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 478,
																			"name": "s_stakeReview",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 318,
																			"src": "2383:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeReview_$325_storage_$",
																				"typeString": "mapping(uint256 => struct Staking.StakeReview storage ref)"
																			}
																		},
																		"id": 480,
																		"indexExpression": {
																			"id": 479,
																			"name": "_tokenID",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 403,
																			"src": "2397:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2383:23:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StakeReview_$325_storage",
																			"typeString": "struct Staking.StakeReview storage ref"
																		}
																	},
																	"id": 481,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "claimedTrophies",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 322,
																	"src": "2383:39:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 487,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 482,
																				"name": "currentTrophies",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 438,
																				"src": "2427:15:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"expression": {
																					"baseExpression": {
																						"id": 483,
																						"name": "s_stakeReview",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 318,
																						"src": "2445:13:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeReview_$325_storage_$",
																							"typeString": "mapping(uint256 => struct Staking.StakeReview storage ref)"
																						}
																					},
																					"id": 485,
																					"indexExpression": {
																						"id": 484,
																						"name": "_tokenID",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 403,
																						"src": "2459:8:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "2445:23:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_StakeReview_$325_storage",
																						"typeString": "struct Staking.StakeReview storage ref"
																					}
																				},
																				"id": 486,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "claimedTrophies",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 322,
																				"src": "2445:39:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2427:57:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 488,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2426:59:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2383:102:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 490,
															"nodeType": "ExpressionStatement",
															"src": "2383:102:4"
														}
													]
												}
											}
										]
									},
									"functionSelector": "379607f5",
									"id": 498,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 406,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 405,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "1778:12:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1778:12:4"
										}
									],
									"name": "claim",
									"nameLocation": "1747:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "_tokenID",
												"nameLocation": "1761:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "1753:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1753:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1752:18:4"
									},
									"returnParameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1791:0:4"
									},
									"scope": 633,
									"src": "1738:796:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 608,
										"nodeType": "Block",
										"src": "2582:805:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 512,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 506,
																		"name": "_tokenID",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 500,
																		"src": "2619:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 504,
																		"name": "parentNFT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 266,
																		"src": "2601:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721_$233",
																			"typeString": "contract IERC721"
																		}
																	},
																	"id": 505,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 166,
																	"src": "2601:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view external returns (address)"
																	}
																},
																"id": 507,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2601:27:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 510,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2640:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Staking_$633",
																			"typeString": "contract Staking"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_Staking_$633",
																			"typeString": "contract Staking"
																		}
																	],
																	"id": 509,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2632:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 508,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2632:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 511,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2632:13:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2601:44:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f74207374616b6564",
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2647:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0a9d0ecd49bee278668e19f1af22fe4be1e214161373796d5a2b94d737799b7b",
																"typeString": "literal_string \"Not staked\""
															},
															"value": "Not staked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0a9d0ecd49bee278668e19f1af22fe4be1e214161373796d5a2b94d737799b7b",
																"typeString": "literal_string \"Not staked\""
															}
														],
														"id": 503,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2593:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2593:67:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 515,
												"nodeType": "ExpressionStatement",
												"src": "2593:67:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 523,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 517,
																		"name": "s_stakeReview",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 318,
																		"src": "2679:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeReview_$325_storage_$",
																			"typeString": "mapping(uint256 => struct Staking.StakeReview storage ref)"
																		}
																	},
																	"id": 519,
																	"indexExpression": {
																		"id": 518,
																		"name": "_tokenID",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 500,
																		"src": "2693:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2679:23:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakeReview_$325_storage",
																		"typeString": "struct Staking.StakeReview storage ref"
																	}
																},
																"id": 520,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "realOwner",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 320,
																"src": "2679:33:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 521,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2716:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 522,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2716:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2679:47:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f74207265616c4f776e6572",
															"id": 524,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2728:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_65bf7e5ac3f00b13cd2aaf25d42053f58e96cb66bd726c717b1b6b7161940e24",
																"typeString": "literal_string \"Not realOwner\""
															},
															"value": "Not realOwner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_65bf7e5ac3f00b13cd2aaf25d42053f58e96cb66bd726c717b1b6b7161940e24",
																"typeString": "literal_string \"Not realOwner\""
															}
														],
														"id": 516,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2671:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2671:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 526,
												"nodeType": "ExpressionStatement",
												"src": "2671:73:4"
											},
											{
												"assignments": [
													528
												],
												"declarations": [
													{
														"constant": false,
														"id": 528,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "2763:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 608,
														"src": "2755:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 527,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2755:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 549,
												"initialValue": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 535,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 529,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "2774:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 530,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"src": "2774:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 531,
																					"name": "s_stakeReview",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 318,
																					"src": "2792:13:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeReview_$325_storage_$",
																						"typeString": "mapping(uint256 => struct Staking.StakeReview storage ref)"
																					}
																				},
																				"id": 533,
																				"indexExpression": {
																					"id": 532,
																					"name": "_tokenID",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 500,
																					"src": "2806:8:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "2792:23:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_StakeReview_$325_storage",
																					"typeString": "struct Staking.StakeReview storage ref"
																				}
																			},
																			"id": 534,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "lastClaimTime",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 324,
																			"src": "2792:37:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2774:55:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 536,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2773:57:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 545,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 539,
																					"name": "_tokenID",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 500,
																					"src": "2865:8:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 537,
																					"name": "parentNftFunctions",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 269,
																					"src": "2834:18:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_INFTGame_$258",
																						"typeString": "contract INFTGame"
																					}
																				},
																				"id": 538,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "getTrophies",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 257,
																				"src": "2834:30:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) external returns (uint256)"
																				}
																			},
																			"id": 540,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2834:40:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 541,
																					"name": "s_stakeReview",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 318,
																					"src": "2877:13:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeReview_$325_storage_$",
																						"typeString": "mapping(uint256 => struct Staking.StakeReview storage ref)"
																					}
																				},
																				"id": 543,
																				"indexExpression": {
																					"id": 542,
																					"name": "_tokenID",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 500,
																					"src": "2891:8:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "2877:23:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_StakeReview_$325_storage",
																					"typeString": "struct Staking.StakeReview storage ref"
																				}
																			},
																			"id": 544,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "claimedTrophies",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 322,
																			"src": "2877:39:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2834:82:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 546,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2833:84:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2773:144:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 548,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2772:147:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2755:164:4"
											},
											{
												"assignments": [
													551
												],
												"declarations": [
													{
														"constant": false,
														"id": 551,
														"mutability": "mutable",
														"name": "currentTrophies",
														"nameLocation": "2939:15:4",
														"nodeType": "VariableDeclaration",
														"scope": 608,
														"src": "2931:23:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 550,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2931:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 556,
												"initialValue": {
													"arguments": [
														{
															"id": 554,
															"name": "_tokenID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 500,
															"src": "2988:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 552,
															"name": "parentNftFunctions",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 269,
															"src": "2957:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_INFTGame_$258",
																"typeString": "contract INFTGame"
															}
														},
														"id": 553,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getTrophies",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 257,
														"src": "2957:30:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) external returns (uint256)"
														}
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2957:40:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2931:66:4"
											},
											{
												"condition": {
													"arguments": [
														{
															"expression": {
																"id": 559,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3033:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 560,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3033:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 561,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "3045:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 557,
															"name": "parentToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 263,
															"src": "3012:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$117",
																"typeString": "contract IERC20"
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 84,
														"src": "3012:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3012:40:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 585,
												"nodeType": "IfStatement",
												"src": "3008:245:4",
												"trueBody": {
													"id": 584,
													"nodeType": "Block",
													"src": "3053:200:4",
													"statements": [
														{
															"expression": {
																"id": 569,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 563,
																			"name": "s_stakeReview",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 318,
																			"src": "3068:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeReview_$325_storage_$",
																				"typeString": "mapping(uint256 => struct Staking.StakeReview storage ref)"
																			}
																		},
																		"id": 565,
																		"indexExpression": {
																			"id": 564,
																			"name": "_tokenID",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 500,
																			"src": "3082:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3068:23:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StakeReview_$325_storage",
																			"typeString": "struct Staking.StakeReview storage ref"
																		}
																	},
																	"id": 566,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "lastClaimTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 324,
																	"src": "3068:37:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 567,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "3108:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 568,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "3108:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3068:55:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 570,
															"nodeType": "ExpressionStatement",
															"src": "3068:55:4"
														},
														{
															"expression": {
																"id": 582,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 571,
																			"name": "s_stakeReview",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 318,
																			"src": "3139:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeReview_$325_storage_$",
																				"typeString": "mapping(uint256 => struct Staking.StakeReview storage ref)"
																			}
																		},
																		"id": 573,
																		"indexExpression": {
																			"id": 572,
																			"name": "_tokenID",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 500,
																			"src": "3153:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3139:23:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StakeReview_$325_storage",
																			"typeString": "struct Staking.StakeReview storage ref"
																		}
																	},
																	"id": 574,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "claimedTrophies",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 322,
																	"src": "3139:39:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 580,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 575,
																				"name": "currentTrophies",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "3183:15:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"expression": {
																					"baseExpression": {
																						"id": 576,
																						"name": "s_stakeReview",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 318,
																						"src": "3201:13:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeReview_$325_storage_$",
																							"typeString": "mapping(uint256 => struct Staking.StakeReview storage ref)"
																						}
																					},
																					"id": 578,
																					"indexExpression": {
																						"id": 577,
																						"name": "_tokenID",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 500,
																						"src": "3215:8:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "3201:23:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_StakeReview_$325_storage",
																						"typeString": "struct Staking.StakeReview storage ref"
																					}
																				},
																				"id": 579,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "claimedTrophies",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 322,
																				"src": "3201:39:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3183:57:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 581,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3182:59:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3139:102:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 583,
															"nodeType": "ExpressionStatement",
															"src": "3139:102:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 591,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3294:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Staking_$633",
																		"typeString": "contract Staking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Staking_$633",
																		"typeString": "contract Staking"
																	}
																],
																"id": 590,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3286:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 589,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3286:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 592,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3286:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 593,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3301:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 594,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3301:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 595,
															"name": "_tokenID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 500,
															"src": "3313:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 586,
															"name": "parentNFT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 266,
															"src": "3263:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$233",
																"typeString": "contract IERC721"
															}
														},
														"id": 588,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 186,
														"src": "3263:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3263:59:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 597,
												"nodeType": "ExpressionStatement",
												"src": "3263:59:4"
											},
											{
												"expression": {
													"id": 606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 598,
																"name": "s_stakeReview",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 318,
																"src": "3333:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeReview_$325_storage_$",
																	"typeString": "mapping(uint256 => struct Staking.StakeReview storage ref)"
																}
															},
															"id": 600,
															"indexExpression": {
																"id": 599,
																"name": "_tokenID",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 500,
																"src": "3347:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3333:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeReview_$325_storage",
																"typeString": "struct Staking.StakeReview storage ref"
															}
														},
														"id": 601,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "realOwner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 320,
														"src": "3333:33:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 604,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3377:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 603,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3369:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 602,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3369:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 605,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3369:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3333:46:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 607,
												"nodeType": "ExpressionStatement",
												"src": "3333:46:4"
											}
										]
									},
									"functionSelector": "2e17de78",
									"id": 609,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unstake",
									"nameLocation": "2549:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "_tokenID",
												"nameLocation": "2565:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "2557:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 499,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2557:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2556:18:4"
									},
									"returnParameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2582:0:4"
									},
									"scope": 633,
									"src": "2540:847:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 631,
										"nodeType": "Block",
										"src": "3599:102:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "6f6e455243373231526563656976656428616464726573732c616464726573732c75696e743235362c75696e743235362c627974657329",
																	"id": 627,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3634:57:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_7636e24523a394e051c4f3b1d9065be73f6b416813ba53a99b779354a5822c58",
																		"typeString": "literal_string \"onERC721Received(address,address,uint256,uint256,bytes)\""
																	},
																	"value": "onERC721Received(address,address,uint256,uint256,bytes)"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_7636e24523a394e051c4f3b1d9065be73f6b416813ba53a99b779354a5822c58",
																		"typeString": "literal_string \"onERC721Received(address,address,uint256,uint256,bytes)\""
																	}
																],
																"id": 626,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3624:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 628,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3624:68:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 625,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3617:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes4_$",
															"typeString": "type(bytes4)"
														},
														"typeName": {
															"id": 624,
															"name": "bytes4",
															"nodeType": "ElementaryTypeName",
															"src": "3617:6:4",
															"typeDescriptions": {}
														}
													},
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3617:76:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 623,
												"id": 630,
												"nodeType": "Return",
												"src": "3610:83:4"
											}
										]
									},
									"functionSelector": "7636e245",
									"id": 632,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "3424:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3459:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "3451:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 610,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3486:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "3478:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 612,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3509:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "3501:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 614,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3530:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "3522:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 616,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3522:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3561:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "3546:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 618,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3546:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3440:132:4"
									},
									"returnParameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "3591:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 621,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "3591:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3590:8:4"
									},
									"scope": 633,
									"src": "3415:286:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 634,
							"src": "341:3383:4",
							"usedErrors": []
						}
					],
					"src": "35:3689:4"
				},
				"id": 4
			}
		}
	}
}